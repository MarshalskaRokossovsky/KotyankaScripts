{
  "FileID":  573785173,
  "FileVersion":  8,
  "ViewPos.x":  -233,
  "ViewPos.y":  -87,
  "ScriptName":  "Mod_ArtiDesignDepartment",
  "ScriptFileOut":  "C:\\Users\\DmitB\\Downloads\\Mod_ArtiDesignDepartment.scr",
  "ScriptTextOut":  "C:\\Users\\DmitB\\Downloads\\Mod_ArtiDesignDepartment.txt",
  "Visual.Objects":  
  [
    {
      "DialogAnswers":      
      [
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  48,
          "#":  50,
          "Msg":  "<tstr2>",
          "AMsg.Num":  "0"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  49,
          "#":  51,
          "Msg":  "<tstr3>",
          "AMsg.Num":  "1"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "block",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  56,
          "#":  57,
          "Msg":  "<tstr2>",
          "AMsg.Num":  "2"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "block",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  62,
          "#":  64,
          "Msg":  "<tstr3>",
          "AMsg.Num":  "3"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  63,
          "#":  65,
          "Msg":  "<tstr4>",
          "AMsg.Num":  "4"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  61,
          "#":  66,
          "Msg":  "<tstr3>",
          "AMsg.Num":  "5"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "exit",
          "Pos.x":  20,
          "Pos.y":  0,
          "Parent":  68,
          "#":  73,
          "Msg":  "",
          "AMsg.Num":  "6"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "exit",
          "Pos.x":  20,
          "Pos.y":  0,
          "Parent":  52,
          "#":  74,
          "Msg":  "",
          "AMsg.Num":  "7"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  81,
          "#":  84,
          "Msg":  "<tstr2>",
          "AMsg.Num":  "8"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "block",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  82,
          "#":  85,
          "Msg":  "<tstr2>",
          "AMsg.Num":  "9"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  83,
          "#":  86,
          "Msg":  "<tstr3>",
          "AMsg.Num":  "10"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "exit",
          "Pos.x":  20,
          "Pos.y":  0,
          "Parent":  88,
          "#":  89,
          "Msg":  "",
          "AMsg.Num":  "11"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  94,
          "#":  97,
          "Msg":  "<tstr2>",
          "AMsg.Num":  "12"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "block",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  95,
          "#":  98,
          "Msg":  "<tstr2>",
          "AMsg.Num":  "13"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  96,
          "#":  99,
          "Msg":  "<tstr3>",
          "AMsg.Num":  "14"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "exit",
          "Pos.x":  20,
          "Pos.y":  0,
          "Parent":  101,
          "#":  102,
          "Msg":  "",
          "AMsg.Num":  "15"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  111,
          "#":  113,
          "Msg":  "<tstr2>",
          "AMsg.Num":  "16"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  110,
          "#":  114,
          "Msg":  "<tstr4>",
          "AMsg.Num":  "17"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  112,
          "#":  115,
          "Msg":  "<tstr3>",
          "AMsg.Num":  "18"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "block",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  117,
          "#":  118,
          "Msg":  "<tstr2>",
          "AMsg.Num":  "19"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "exit",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  120,
          "#":  121,
          "Msg":  "",
          "AMsg.Num":  "20"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "exit",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  122,
          "#":  123,
          "Msg":  "",
          "AMsg.Num":  "21"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "exit",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  126,
          "#":  127,
          "Msg":  "",
          "AMsg.Num":  "22"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  133,
          "#":  134,
          "Msg":  "<tstr2>",
          "AMsg.Num":  "23"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  1480,
          "Pos.y":  400,
          "Parent":  -1,
          "#":  186,
          "Msg":  "<tstr3>",
          "AMsg.Num":  "24"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  1420,
          "Pos.y":  340,
          "Parent":  -1,
          "#":  189,
          "Msg":  "<tstr4>",
          "AMsg.Num":  "25"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  1480,
          "Pos.y":  380,
          "Parent":  -1,
          "#":  191,
          "Msg":  "<tstr3>",
          "AMsg.Num":  "26"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  1480,
          "Pos.y":  480,
          "Parent":  -1,
          "#":  207,
          "Msg":  "<tstr3>",
          "AMsg.Num":  "27"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  1480,
          "Pos.y":  500,
          "Parent":  -1,
          "#":  210,
          "Msg":  "<tstr3>",
          "AMsg.Num":  "28"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  1480,
          "Pos.y":  580,
          "Parent":  -1,
          "#":  226,
          "Msg":  "<tstr3>",
          "AMsg.Num":  "29"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  1480,
          "Pos.y":  600,
          "Parent":  -1,
          "#":  227,
          "Msg":  "<tstr3>",
          "AMsg.Num":  "30"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  890,
          "Pos.y":  60,
          "Parent":  -1,
          "#":  234,
          "Msg":  "<tstr4>",
          "AMsg.Num":  "31"        
        }      
      ],
      "DialogMessages":      
      [
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  53,
          "#":  47,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "0"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  0,
          "Parent":  54,
          "#":  52,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "1"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  59,
          "#":  60,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "2"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  40,
          "Pos.y":  0,
          "Parent":  67,
          "#":  68,
          "Msg":  "<win_text>",
          "DMsg.Num":  "3"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  71,
          "#":  72,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "4"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  78,
          "#":  80,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "5"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  0,
          "Parent":  87,
          "#":  88,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "6"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  129,
          "#":  93,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "7"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  0,
          "Parent":  100,
          "#":  101,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "8"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  108,
          "#":  109,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "9"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  116,
          "#":  120,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "10"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  119,
          "#":  122,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "11"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  125,
          "#":  126,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "12"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  144,
          "#":  145,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "13"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  600,
          "Pos.y":  430,
          "Parent":  -1,
          "#":  149,
          "Msg":  "<win_text>",
          "DMsg.Num":  "14"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  1150,
          "Pos.y":  470,
          "Parent":  -1,
          "#":  153,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "15"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  1270,
          "Pos.y":  400,
          "Parent":  -1,
          "#":  158,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "16"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  1270,
          "Pos.y":  380,
          "Parent":  -1,
          "#":  165,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "17"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  1010,
          "Pos.y":  510,
          "Parent":  -1,
          "#":  168,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "18"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  1010,
          "Pos.y":  540,
          "Parent":  -1,
          "#":  174,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "19"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  1010,
          "Pos.y":  570,
          "Parent":  -1,
          "#":  177,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "20"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  1390,
          "Pos.y":  490,
          "Parent":  -1,
          "#":  184,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "21"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  1270,
          "Pos.y":  500,
          "Parent":  -1,
          "#":  199,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "22"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  1270,
          "Pos.y":  480,
          "Parent":  -1,
          "#":  203,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "23"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  1270,
          "Pos.y":  580,
          "Parent":  -1,
          "#":  219,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "24"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  1270,
          "Pos.y":  600,
          "Parent":  -1,
          "#":  222,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "25"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  890,
          "Pos.y":  100,
          "Parent":  -1,
          "#":  233,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "26"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  1220,
          "Pos.y":  680,
          "Parent":  -1,
          "#":  240,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "27"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  1010,
          "Pos.y":  600,
          "Parent":  -1,
          "#":  248,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "28"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  1380,
          "Pos.y":  680,
          "Parent":  -1,
          "#":  252,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "29"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  1220,
          "Pos.y":  760,
          "Parent":  -1,
          "#":  257,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "30"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  1010,
          "Pos.y":  630,
          "Parent":  -1,
          "#":  269,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "31"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  1010,
          "Pos.y":  660,
          "Parent":  -1,
          "#":  270,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "32"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  1010,
          "Pos.y":  690,
          "Parent":  -1,
          "#":  271,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "33"        
        }      
      ],
      "Dialogs":      
      [
        {
          "Type":  "TDialog",
          "Name":  "DDMemberCardBuy",
          "Pos.x":  410,
          "Pos.y":  290,
          "Parent":  -1,
          "#":  46        
        },
        {
          "Type":  "TDialog",
          "Name":  "DDFortuneWheel",
          "Pos.x":  560,
          "Pos.y":  290,
          "Parent":  -1,
          "#":  58        
        },
        {
          "Type":  "TDialog",
          "Name":  "DDBlueprintResearchStart",
          "Pos.x":  690,
          "Pos.y":  290,
          "Parent":  -1,
          "#":  70        
        },
        {
          "Type":  "TDialog",
          "Name":  "DDImprove",
          "Pos.x":  410,
          "Pos.y":  430,
          "Parent":  -1,
          "#":  75        
        },
        {
          "Type":  "TDialog",
          "Name":  "DDBlueprintResearchChoose",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  90,
          "#":  91        
        },
        {
          "Type":  "TDialog",
          "Name":  "DDBlueprintAssemblyStart",
          "Pos.x":  890,
          "Pos.y":  290,
          "Parent":  -1,
          "#":  107        
        },
        {
          "Type":  "TDialog",
          "Name":  "DDBlueprintAssemblyEndSpecial",
          "Pos.x":  890,
          "Pos.y":  150,
          "Parent":  -1,
          "#":  143        
        },
        {
          "Type":  "TDialog",
          "Name":  "DDFortuneWheelEndSpecial",
          "Pos.x":  600,
          "Pos.y":  410,
          "Parent":  -1,
          "#":  147        
        },
        {
          "Type":  "TDialog",
          "Name":  "DDCreateEquipment",
          "Pos.x":  1150,
          "Pos.y":  290,
          "Parent":  -1,
          "#":  152        
        },
        {
          "Type":  "TDialog",
          "Name":  "DDCreateEquipment0",
          "Pos.x":  1180,
          "Pos.y":  320,
          "Parent":  -1,
          "#":  160        
        },
        {
          "Type":  "TDialog",
          "Name":  "DDCreateEquipmentW",
          "Pos.x":  1210,
          "Pos.y":  350,
          "Parent":  -1,
          "#":  163        
        },
        {
          "Type":  "TDialog",
          "Name":  "DDRecycle",
          "Pos.x":  870,
          "Pos.y":  510,
          "Parent":  -1,
          "#":  167        
        },
        {
          "Type":  "TDialog",
          "Name":  "DDRecycleNone",
          "Pos.x":  870,
          "Pos.y":  540,
          "Parent":  -1,
          "#":  171        
        },
        {
          "Type":  "TDialog",
          "Name":  "DDRecycleDom",
          "Pos.x":  870,
          "Pos.y":  570,
          "Parent":  -1,
          "#":  172        
        },
        {
          "Type":  "TDialog",
          "Name":  "DDGetItem",
          "Pos.x":  1390,
          "Pos.y":  290,
          "Parent":  -1,
          "#":  183        
        },
        {
          "Type":  "TDialog",
          "Name":  "CreateHull0",
          "Pos.x":  1180,
          "Pos.y":  430,
          "Parent":  -1,
          "#":  197        
        },
        {
          "Type":  "TDialog",
          "Name":  "CreateHull1",
          "Pos.x":  1210,
          "Pos.y":  450,
          "Parent":  -1,
          "#":  201        
        },
        {
          "Type":  "TDialog",
          "Name":  "Equipments0",
          "Pos.x":  1180,
          "Pos.y":  530,
          "Parent":  -1,
          "#":  216        
        },
        {
          "Type":  "TDialog",
          "Name":  "Equipments1",
          "Pos.x":  1210,
          "Pos.y":  550,
          "Parent":  -1,
          "#":  217        
        },
        {
          "Type":  "TDialog",
          "Name":  "DDTestDialog",
          "Pos.x":  760,
          "Pos.y":  100,
          "Parent":  -1,
          "#":  232        
        },
        {
          "Type":  "TDialog",
          "Name":  "DDBuyMM",
          "Pos.x":  1150,
          "Pos.y":  650,
          "Parent":  -1,
          "#":  238        
        },
        {
          "Type":  "TDialog",
          "Name":  "DDRecycleKlissan",
          "Pos.x":  870,
          "Pos.y":  600,
          "Parent":  -1,
          "#":  246        
        },
        {
          "Type":  "TDialog",
          "Name":  "AboutDD",
          "Pos.x":  1330,
          "Pos.y":  650,
          "Parent":  -1,
          "#":  250        
        },
        {
          "Type":  "TDialog",
          "Name":  "DD_Accessory",
          "Pos.x":  1150,
          "Pos.y":  730,
          "Parent":  -1,
          "#":  255        
        },
        {
          "Type":  "TDialog",
          "Name":  "DDRecycleCoal",
          "Pos.x":  870,
          "Pos.y":  630,
          "Parent":  -1,
          "#":  263        
        },
        {
          "Type":  "TDialog",
          "Name":  "DDRecycleClan",
          "Pos.x":  870,
          "Pos.y":  660,
          "Parent":  -1,
          "#":  264        
        },
        {
          "Type":  "TDialog",
          "Name":  "DDRecycleBombs",
          "Pos.x":  870,
          "Pos.y":  690,
          "Parent":  -1,
          "#":  265        
        }      
      ],
      "Groups":      
      [
        {
          "Type":  "TGroup",
          "Name":  "PlayerGroup",
          "Pos.x":  50,
          "Pos.y":  200,
          "Parent":  -1,
          "#":  3,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  1,
          "CntShipMax":  1,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  true,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "CustomShipsGroup",
          "Pos.x":  50,
          "Pos.y":  260,
          "Parent":  -1,
          "#":  24,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "DDGroup",
          "Pos.x":  50,
          "Pos.y":  290,
          "Parent":  -1,
          "#":  43,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "PatrolWait",
          "Pos.x":  50,
          "Pos.y":  320,
          "Parent":  -1,
          "#":  279,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "PatrolSpace",
          "Pos.x":  50,
          "Pos.y":  350,
          "Parent":  -1,
          "#":  280,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Operations":      
      [
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  170,
          "Pos.y":  140,
          "Parent":  -1,
          "#":  5,
          "Code.Type":  "Global",
          "Code":          
          [
              "GRun();"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  190,
          "Pos.y":  140,
          "Parent":  -1,
          "#":  6,
          "Code.Type":  "Init",
          "Code":          
          [
              "DesignDepartment_SpecItemsCountArray[0] = 0;",
              "DesignDepartment_SpecItemsCountArray[1] = 0;",
              "",
              "FortuneWheelSeed = Rnd(1000000, 9999999);",
              "//Устанавливаем ход спавна КБ (от 3 до 3,5 лет со старта)",
              "DDSpawnTurn = CurTurn() + Rnd(CT('DesignDepartmentModList.DesignDepartmentStats.DesignDepartmentFirstSpawnMin'), CT('DesignDepartmentModList.DesignDepartmentStats.DesignDepartmentFirstSpawnMax'));",
              "",
              "//TESTING",
              "//DDSpawnTurn=0;",
              "",
              "GTL = GalaxyTechLevel();",
              "CreateEventsListForCurrentPlaytrhrough();",
              "",
              "ShipAddCustomShipInfo(Player(), 'DesignDepartment_NirgendAzurDrop', 'NoShow');",
              "//Перебираем все корабли в Галактике и \"обрабатываем\" их",
              "i = BuildListOfNewShips(tarr1, 0, 1+8+16, 1+2+4+8+16+32+64+128, 1, ',SubFactionFixedStanding', ',Dreadnought,PirateCorvette,PirateFrigate,PirateGalleon,Klissan1,Machpella,None,Superdominator,AMod_Invaders2');",
              "if(i) //Если был обнаружен хотя бы один корабль, подходящий по заданным фильтрам",
              "{",
              "    for(i = 0; i < ArrayDim(tarr1); i = i + 1)",
              "    {",
              "        cur_ship = tarr1[i];",
              "",
              "        if(!cur_ship) continue; //Проверка на \"мертворождённый\" корабль",
              "        if(IsPlayer(cur_ship)) continue; //Исключаем игрока",
              "        //Доп. проверка только для ванильных кораблей",
              "        if(findsubstr('Superdominator,Dreadnought,PirateCorvette,PirateFrigate,PirateGalleon,Klissan1,None,AMod_Invaders2', ShipType(cur_ship)) == -1)",
              "        {",
              "            if(ShipTypeN(cur_ship) == t_Pirate)",
              "                {",
              "                if(ItemSize(ShipEqInSlot(cur_ship,t_Hull))>1999)ShipAddCustomShipInfo(cur_ship, 'DesignDepartment_NirgendAzurDropShip_2K', 'NoShow');",
              "                continue;",
              "                }",
              "            if(ShipTypeN(cur_ship) == t_Kling)",
              "            {",
              "                //Только для боссов или берторов",
              "                if(!(!ShipSubType(cur_ship) || ShipSubType(cur_ship) == 6))",
              "                    {",
              "                    if(ItemSize(ShipEqInSlot(cur_ship,t_Hull))>1999)ShipAddCustomShipInfo(cur_ship, 'DesignDepartment_NirgendAzurDropShip_2K', 'NoShow');",
              "                    continue;",
              "                    }",
              "            }",
              "            if(ShipTypeN(cur_ship) == t_Warrior && !ShipSubType(cur_ship))",
              "                {",
              "                if(ItemSize(ShipEqInSlot(cur_ship,t_Hull))>1999)ShipAddCustomShipInfo(cur_ship, 'DesignDepartment_NirgendAzurDropShip_2K', 'NoShow');",
              "                continue;",
              "                }",
              "        }",
              "        if(ShipType(cur_ship) == 'Pirate')",
              "            {",
              "            if(ItemSize(ShipEqInSlot(cur_ship,t_Hull))>1999)ShipAddCustomShipInfo(cur_ship, 'DesignDepartment_NirgendAzurDropShip_2K', 'NoShow');",
              "            continue; //Потому что из-за 'PirateFrigate' и 'PirateGalleon' выше не фильтруется",
              "            }",
              "",
              "        if(ShipTypeN(cur_ship) == t_Kling && !ShipSubType(cur_ship)) ShipAddCustomShipInfo(cur_ship, 'DesignDepartment_NirgendAzurDropBoss', 'NoShow');",
              "        else ShipAddCustomShipInfo(cur_ship, 'DesignDepartment_NirgendAzurDropShip', 'NoShow');",
              "    }",
              "}",
              "lastShipId = GalaxyShipId();",
              "",
              "//Запускаем все события, которые должны быть запущены на старте",
              "for(i = 0; i < ArrayDim(EventsListArray); i = i + 1)",
              "{",
              "    if(~EventsListArray[i, 'MinTimeFromStart']) continue;",
              "    LaunchEvent(i);",
              "}",
              "",
              "function CreateEventsListForCurrentPlaytrhrough()",
              "{",
              "    free(EventsListArray);",
              "    EventsListArray = newarray(1);",
              "    ArrayDelete(EventsListArray, 0);",
              "    unknown t_array;",
              "",
              "    str added_events;",
              "    UniqueEventsCount = 0;",
              "    int rand;",
              "    int choosed_str = '.';",
              "    int events_count = CT('DesignDepartmentModList.EventsList.Count');",
              "    int unique_events = CT('DesignDepartmentModList.EventsList.UniqueEventsPool');",
              "    while(unique_events)",
              "    {",
              "        rand = RndObject(1, events_count, Player());",
              "        if(~findsubstr(added_events, '*' + rand + '*')) continue;",
              "        path = 'DesignDepartmentModList.EventsList.' + rand + '.';",
              "        if(CT(path + 'Repeatable') != 'Unique') continue;",
              "        if(~findsubstr(choosed_str, '.' + rand + '.')) continue;",
              "",
              "        choosed_str = choosed_str + rand + '.';",
              "        t_array = newarray(1);",
              "        ArrayDelete(t_array, 0);",
              "",
              "        ArrayAdd(t_array, -2, 'Repeatable');",
              "        if(CT(path + 'MinTimeFromStart') == 'AtStart') ArrayAdd(t_array, -1, 'MinTimeFromStart');",
              "        else ArrayAdd(t_array, CurTurn() + CT(path + 'MinTimeFromStart'), 'MinTimeFromStart');",
              "        ArrayAdd(t_array, int(CT(path + 'MinTimeRepeat')), 'MinTimeRepeat');",
              "        ArrayAdd(t_array, 0, 'TimeToRepeat');",
              "        ArrayAdd(t_array, int(CT(path + 'Priority')), 'Priority');",
              "        ArrayAdd(t_array, CT(path + 'LaunchMoment'), 'LaunchMoment');",
              "        ArrayAdd(t_array, int(CT(path + 'DistFromPlayer')), 'DistFromPlayer');",
              "        ArrayAdd(t_array, CT(path + 'EventType'), 'EventType');",
              "        ArrayAdd(t_array, CT(path + 'EventParams'), 'EventParams');",
              "        ArrayAdd(t_array, CT(path + 'EventItemsList'), 'EventItemsList');",
              "        ArrayAdd(t_array, CT(path + 'EventShipsList'), 'EventShipsList');",
              "",
              "        ArrayAdd(EventsListArray, t_array);",
              "        added_events = added_events + '*' + rand + '*';",
              "        unique_events = unique_events - 1;",
              "        UniqueEventsCount = UniqueEventsCount + 1;",
              "        //Обязательно \"открепляем\" временный массив от основного, иначе дабокод сломается и второстепенный массив в основной записан не будет",
              "        t_array = newarray(1);",
              "    }",
              "",
              "    free(t_array);",
              "    int repeatable_events = CT('DesignDepartmentModList.EventsList.RepeatableEventsPool');",
              "    while(repeatable_events)",
              "    {",
              "        rand = Rnd(1, events_count);",
              "        if(~findsubstr(added_events, '*' + rand + '*')) continue;",
              "        str path = 'DesignDepartmentModList.EventsList.' + rand + '.';",
              "        if(CT(path + 'Repeatable') == 'Unique') continue;",
              "        if(~findsubstr(choosed_str, '.' + rand + '.')) continue;",
              "",
              "        choosed_str = choosed_str + rand + '.';",
              "        t_array = newarray(1);",
              "        ArrayDelete(t_array, 0);",
              "",
              "        if(CT(path + 'Repeatable') == 'Endless') ArrayAdd(t_array, -1, 'Repeatable'); //Бесконечно повторяемые события",
              "        else ArrayAdd(t_array, int(CT(path + 'Repeatable')), 'Repeatable'); //События, ограниченные по количеству запусков",
              "        if(CT(path + 'MinTimeFromStart') == 'AtStart') ArrayAdd(t_array, -1, 'MinTimeFromStart');",
              "        else ArrayAdd(t_array, CurTurn() + CT(path + 'MinTimeFromStart'), 'MinTimeFromStart');",
              "        ArrayAdd(t_array, int(CT(path + 'MinTimeRepeat')), 'MinTimeRepeat');",
              "        ArrayAdd(t_array, 0, 'TimeToRepeat');",
              "        ArrayAdd(t_array, int(CT(path + 'Priority')), 'Priority');",
              "        ArrayAdd(t_array, CT(path + 'LaunchMoment'), 'LaunchMoment');",
              "        ArrayAdd(t_array, int(CT(path + 'DistFromPlayer')), 'DistFromPlayer');",
              "        ArrayAdd(t_array, CT(path + 'EventType'), 'EventType');",
              "        ArrayAdd(t_array, CT(path + 'EventParams'), 'EventParams');",
              "        ArrayAdd(t_array, CT(path + 'EventItemsList'), 'EventItemsList');",
              "        ArrayAdd(t_array, CT(path + 'EventShipsList'), 'EventShipsList');",
              "",
              "        ArrayAdd(EventsListArray, t_array);",
              "        added_events = added_events + '*' + rand + '*';",
              "        repeatable_events = repeatable_events - 1;",
              "        UniqueEventsCount = UniqueEventsCount + 1;",
              "        //Обязательно \"открепляем\" временный массив от основного, иначе дабокод сломается и второстепенный массив в основной записан не будет",
              "        t_array = newarray(1);",
              "    }",
              "",
              "    //Заводим таймер до следующего запуска",
              "    RandomEventLaunchTime = CurTurn() + CT('DesignDepartmentModList.EventsList.RandomEventLaunchTime');",
              "    //Запоминаем версию для возможности обновления списка эвентов в процессе уже начатой игры",
              "    EventsVersion = CT('DesignDepartmentModList.EventsList.EventsVersion');",
              "}",
              "",
              "function ChooseRandomEventToLaunch()",
              "{",
              "    int event_num;",
              "    unknown t_array = newarray(1);",
              "    for(int i = 0; i < ArrayDim(EventsListArray); i = i + 1)",
              "    {",
              "        if(!EventsListArray[i, 'Repeatable'] || EventsListArray[i, 'Repeatable'] == -3) continue;",
              "        //Пропускаем события, время для которых ещё не пришло",
              "        if(EventsListArray[i, 'MinTimeFromStart'] > CurTurn()) continue;",
              "        //Пропускаем события, которые сейчас находятся на кд",
              "        if(EventsListArray[i, 'TimeToRepeat'] > CurTurn()) continue;",
              "        //Пропускаем уже \"потраченные\" и единоразовые исполненные события",
              "        //Пропускаем события, с особым условием запуска",
              "        if(EventsListArray[i, 'LaunchMoment'] == 'PlayerInHyper')",
              "        {",
              "            if(!ShipInHyperSpace(Player())) continue;",
              "        }",
              "        //Если все незаселёнки в Галактике были изучены, то данный тип событий более недоступен",
              "        if(AllUninhabitedWasResearched)",
              "        {",
              "            if(EventsListArray[i, 'EventType'] == 'ItemOnUninhabitedPlanet') continue;",
              "        }",
              "",
              "        //Составляем список эвентов, подходящих для запуска в текущий момент",
              "        ArrayAdd(t_array, i);",
              "    }",
              "    if(ArrayDim(t_array) > 1)",
              "    {",
              "        event_num = 0;",
              "        while(1)",
              "        {",
              "            int temp_event_num = Rnd(1, ArrayDim(t_array) - 1);",
              "            if(Rnd(1, 1000) <= round(10.0 * EventsListArray[temp_event_num, 'Priority']))",
              "            {",
              "                event_num = temp_event_num;",
              "                break;",
              "            }",
              "        }",
              "    }",
              "    else event_num = -1;",
              "",
              "    result = event_num;",
              "}",
              "",
              "function LaunchEvent(int event_num)",
              "{",
              "    //Если не нашли подходящий эвент на момент очередного запуска",
              "    if(event_num == -1)",
              "    {",
              "        RandomEventLaunchTime = CurTurn() + (0.3 * CT('DesignDepartmentModList.EventsList.RandomEventLaunchTime'));",
              "        exit;",
              "    }",
              "",
              "    dword event_star = StarNearbyStars(ShipStar(Player()), EventsListArray[event_num, 'DistFromPlayer']);",
              "    str tstr = EventsListArray[event_num, 'EventType'];",
              "    int tint;",
              "    if(tstr == 'FreeCustomShip')",
              "    {",
              "        int ship_template;",
              "        unknown ships_arr = newarray(1);",
              "        ArrayDelete(ships_arr, 0);",
              "        //Сперва выбираем один случайный из перечисленных вариантов подборки кораблей",
              "        str ships_str = GetParFromString(EventsListArray[event_num, 'EventShipsList'], ',', Rnd(1, ParsCountFromString(EventsListArray[event_num, 'EventShipsList'], ',')) - 1, 1);",
              "        //Затем парсим строку по перечислениям кораблей в выбранном варианте через '&&'",
              "        for(int i = 0; i < ParsCountFromString(ships_str, '&&'); i = i + 1)",
              "        {",
              "            tstr = GetParFromString(ships_str, '&&', i, 1);",
              "            ArrayAdd(ships_arr, tstr);",
              "        }",
              "        //Приступаем к непосредственному созданию кораблей",
              "        for(i = 0; i < ArrayDim(ships_arr); i = i + 1)",
              "        {",
              "            str ship_str = ships_arr[i];",
              "",
              "            //Определение количества конкретных кораблей",
              "            int ships_count = GetItemsCountFromStr(GetParFromString(ship_str, '_', ParsCountFromString(ship_str, '_') - 1, 1));",
              "            //Создаём корабли",
              "            for(int j = 1; j <= ships_count; j = j + 1)",
              "            {",
              "                if(GetParFromString(ship_str, '_', 1, 1) == 'Rnd')",
              "                {",
              "                    ship_template = 0;",
              "                    while(!BlockExist('DesignDepartmentModList.CustomShips.' + ship_template)) ship_template = Rnd(1, CT('DesignDepartmentModList.CustomShips.Count'));",
              "                }",
              "                else ship_template = GetParFromString(ship_str, '_', 1, 1);",
              "                dword ship = SpawnCustomShip(ship_template, StarPlanets(event_star, 0), 0);",
              "                FillEventObjectWithEventItemsFromStr(ship, EventsListArray[event_num, 'EventItemsList'], 0, 0, 0);",
              "            }",
              "        }",
              "    }",
              "    else if(tstr == 'ItemInSpace')",
              "    {",
              "        FillEventObjectWithEventItemsFromStr(event_star, EventsListArray[event_num, 'EventItemsList'], 0, 0, 0);",
              "    }",
              "    else if(tstr == 'ItemOnUninhabitedPlanet')",
              "    {",
              "        for(i = EventsListArray[event_num, 'DistFromPlayer']; i < GalaxyStars(); i = i + 1)",
              "        {",
              "            dword star = StarNearbyStars(ShipStar(Player()), i);",
              "            if(StarToCon(star) == StarToCon(PlanetToStar(PlanetPirateClan()))) continue;",
              "",
              "            int check = 0;",
              "            for(j = 0; j < StarPlanets(star); j = j + 1)",
              "            {",
              "                dword planet = StarPlanets(star, j);",
              "                if(PlanetOwner(planet) != None) continue;",
              "                if(PlanetExplored(planet)) continue;",
              "",
              "                FillEventObjectWithEventItemsFromStr(planet, EventsListArray[event_num, 'EventItemsList'], 0, 0, 0);",
              "                if(ShipFindCustomShipInfoByType(Player(), 'DesignDepartment_PirateMapsDrop') == -1)",
              "                {",
              "                    ShipAddCustomShipInfo(Player(), 'DesignDepartment_PirateMapsDrop', 'NoShow');",
              "                }",
              "                ArrayAdd(, Id(planet) + '_' + EventsListArray[event_num, 'EventParams']);",
              "",
              "                check = 1;",
              "                break;",
              "            }",
              "            if(check) break;",
              "        }",
              "    }",
              "    else if(tstr == 'BlackHole')",
              "    {",
              "        //Создаём ЧД и определяем систему создания выхода из неё",
              "        tint = EventsListArray[event_num, 'DistFromPlayer'];",
              "        if(tint > 1) tint = tint / 2;",
              "        else tint = tint + 10;",
              "        dword hole = HoleCreate2(event_star, StarNearbyStars(event_star, tint));",
              "Ether(7, 'BlackHole'+Rnd(0,500), Name(event_star));",
              "",
              "        //Определяем время жизни ЧД, согласно указателю из эвента",
              "        tint = EventsListArray[event_num, 'MinTimeRepeat'];",
              "        if(tint < 200) HoleTurnCreate(hole, CurTurn() - (200 - tint));",
              "        else if(tint > 200) HoleTurnCreate(hole, CurTurn() + (tint - 200));",
              "        HoleMap(hole, 'SkipAB');",
              "",
              "        //Добавляем созданную ЧД в список эвентовых",
              "        ArrayAdd(EventBlackHolesArray, '' + Id(hole) + ',' + event_num);",
              "    }",
              "    else throw 'Launch event type is invalid.';",
              "",
              "    //Блокируем повторный запуск для единоразовых событий",
              "    if(EventsListArray[event_num, 'Repeatable'] == -2) EventsListArray[event_num, 'Repeatable'] = -3;",
              "    //Обновляем таймеры",
              "    EventsListArray[event_num, 'TimeToRepeat'] = CurTurn() + EventsListArray[event_num, 'MinTimeRepeat'];",
              "    RandomEventLaunchTime = CurTurn() + CT('DesignDepartmentModList.EventsList.RandomEventLaunchTime');",
              "}",
              "",
              "function BuildRaceSetFromString(str string)",
              "{",
              "    for(int i = 0; i < ParsCountFromString(string, ','); i = i + 1)",
              "    {",
              "        int race;",
              "        str race_str = GetParFromString(string, ',', i, 1);",
              "        if(race_str == 'Blazer') race = 8;",
              "        else if(race_str == 'Keller') race = 9;",
              "        else if(race_str == 'Terron') race = 10;",
              "        else race = GetValueFromScript('', race_str);",
              "",
              "        int set = set + (1 << race);",
              "    }",
              "",
              "    result = set;",
              "}",
              "",
              "function PlanetExplored(dword planet)",
              "{",
              "    for(int i = 0; i <= 2; i = i + 1)",
              "    {",
              "        int terr = PlanetTerrain(planet, i);",
              "        if(terr < PlanetTerrainExplored(planet, i)) continue;",
              "",
              "        result = 1;",
              "        exit;",
              "    }",
              "",
              "    result = 0;",
              "}",
              "",
              "//Создаём корабль по характеристикам из ланга (если blueprint_num == -1, будет выбран случайный корабль из списка)",
              "function SpawnCustomShip(int blueprint_num, dword planet, dword transfer_to)",
              "{",
              "    str block_path;",
              "    if(blueprint_num >= -1)",
              "    {",
              "        if(blueprint_num == -1) blueprint_num = Rnd(1, CT('DesignDepartmentModList.CustomShips.Count'));",
              "        block_path = 'DesignDepartmentModList.CustomShips.' + blueprint_num + '.';",
              "    }",
              "    else if(blueprint_num == -2) block_path = 'DesignDepartmentModList.DesignDepartmentStats.';",
              "    dword ship;",
              "    dword item;",
              "    str race_str = CT(block_path + 'PilotRace');",
              "    int race_set;",
              "    int ship_race;",
              "    int planet_race = PlanetRace(planet);",
              "    int ship_type = GetValueFromScript('', CT(block_path + 'MainType'));",
              "    str tstr;",
              "    int tint;",
              "    if(ship_type == t_Ranger)",
              "    {",
              "        if(race_str != 'Any')",
              "        {",
              "            race_set = BuildRaceSetFromString(race_str);",
              "            if(race_set)",
              "            {",
              "                ship_race = Rnd(0, 4);",
              "                while(!(race_set & (1 << ship_race))) ship_race = Rnd(0, 4);",
              "                PlanetRace(planet, ship_race);",
              "            }",
              "        }",
              "        ship = BuyRanger(planet, 500);",
              "        tstr = CT(block_path + 'Owner');",
              "        if(tstr == 'PirateClan') ShipOwner(ship, PirateClan);",
              "        else if(tstr == 'None') ShipOwner(ship, None);",
              "        PlanetRace(planet, planet_race);",
              "    }",
              "    else if(ship_type == t_Pirate)",
              "    {",
              "        if(race_str != 'Any')",
              "        {",
              "            race_set = BuildRaceSetFromString(race_str);",
              "            if(race_set)",
              "            {",
              "                ship_race = Rnd(0, 4);",
              "                while(!(race_set & (1 << ship_race))) ship_race = Rnd(0, 4);",
              "                PlanetRace(planet, ship_race);",
              "            }",
              "        }",
              "        ship = BuyPirate(planet, 500);",
              "        tstr = CT(block_path + 'Owner');",
              "        if(tstr == 'PirateClan') ShipOwner(ship, PirateClan);",
              "        else if(tstr == 'None') ShipOwner(ship, None);",
              "        PlanetRace(planet, planet_race);",
              "    }",
              "    else if(ship_type == t_Warrior)",
              "    {",
              "        if(race_str != 'Any')",
              "        {",
              "            race_set = BuildRaceSetFromString(race_str);",
              "            if(race_set)",
              "            {",
              "                ship_race = Rnd(0, 4);",
              "                while(!(race_set & (1 << ship_race))) ship_race = Rnd(0, 4);",
              "                PlanetRace(planet, ship_race);",
              "            }",
              "        }",
              "        ship_type = CT(block_path + 'SubType');",
              "        //Создаётся обычный военный или флагман",
              "        if(PlanetOwner(planet) != PirateClan)",
              "        {",
              "            if(ship_type <= 0) ship = BuyWarrior(planet, 500);",
              "            else ship = BuyBigWarrior(planet, 1000);",
              "        }",
              "        //Создаётся клановый пират-воин",
              "        else",
              "        {",
              "            ship = BuyWarrior(planet, 500);",
              "            if(~ship_type) ShipSubType(ship, ship_type);",
              "        }",
              "        tstr = CT(block_path + 'Owner');",
              "        if(tstr == 'PirateClan') ShipOwner(ship, PirateClan);",
              "        else if(tstr == 'None') ShipOwner(ship, None);",
              "        PlanetRace(planet, planet_race);",
              "    }",
              "    else if(ship_type == t_Transport)",
              "    {",
              "        if(race_str != 'Any')",
              "        {",
              "            race_set = BuildRaceSetFromString(race_str);",
              "            if(race_set)",
              "            {",
              "                ship_race = Rnd(0, 4);",
              "                while(!(race_set & (1 << ship_race))) ship_race = Rnd(0, 4);",
              "                PlanetRace(planet, ship_race);",
              "            }",
              "        }",
              "        ship_type = CT(block_path + 'SubType');",
              "        if(~ship_type) ship = BuyTransport(planet, ship_type, 500);",
              "        else ship = BuyTransport(planet, 0, 500);",
              "        tstr = CT(block_path + 'Owner');",
              "        if(tstr == 'PirateClan') ShipOwner(ship, PirateClan);",
              "        else if(tstr == 'None') ShipOwner(ship, None);",
              "        PlanetRace(planet, planet_race);",
              "    }",
              "    else if(ship_type == t_Kling)",
              "    {",
              "        if(race_str != 'Any')",
              "        {",
              "            //Для доминаторов это только определение серии",
              "            race_set = BuildRaceSetFromString(race_str);",
              "            if(race_set)",
              "            {",
              "                ship_race = Rnd(8, 10);",
              "                while(!(race_set & (1 << ship_race))) ship_race = Rnd(8, 10);",
              "                StarSeries(PlanetToStar(planet), ship_race - 8);",
              "            }",
              "        }",
              "        ship_type = CT(block_path + 'SubType');",
              "        if(~ship_type) ship = BuyDomikExtremal(planet, ship_type);",
              "        else ship = BuyDomikExtremal(planet);",
              "        tstr = CT(block_path + 'Owner');",
              "        if(tstr == 'PirateClan') ShipOwner(ship, PirateClan);",
              "        else if(tstr == 'None') ShipOwner(ship, None);",
              "    }",
              "    else if(ship_type == t_Tranclucator)",
              "    {",
              "        if(race_str != 'Any')",
              "        {",
              "            race_set = BuildRaceSetFromString(race_str);",
              "            if(race_set)",
              "            {",
              "                ship_race = Rnd(0, 4);",
              "                while(!(race_set & (1 << ship_race))) ship_race = Rnd(0, 4);",
              "                PlanetRace(planet, ship_race);",
              "            }",
              "        }",
              "        ship = BuyTranclucator(planet, 0);",
              "        tstr = CT(block_path + 'Owner');",
              "        if(tstr == 'PirateClan') ShipOwner(ship, PirateClan);",
              "        else if(tstr == 'None') ShipOwner(ship, None);",
              "        PlanetRace(planet, planet_race);",
              "    }",
              "    else if(ship_type == t_UB)",
              "    {",
              "        if(race_str != 'Any')",
              "        {",
              "            race_set = BuildRaceSetFromString(race_str);",
              "            if(race_set)",
              "            {",
              "                ship_race = Rnd(0, 4);",
              "                while(!(race_set & (1 << ship_race))) ship_race = Rnd(0, 4);",
              "            }",
              "        }",
              "        ship = BuildCustomRuins(planet, CT(block_path + 'ModType'), 5);",
              "        ShipSpecialBonuses(ship,bonSlotArt,40);",
              "        //ship = BuildRuins(planet, t_PB);",
              "        //ShipType(ship, CT(block_path + 'ModType'));",
              "        tstr = CT(block_path + 'Owner');",
              "        ShipPilotRace(ship, ship_race);",
              "        if(tstr == 'Coalition') ShipOwner(ship, ship_race);",
              "        else if(tstr == 'PirateClan') ShipOwner(ship, PirateClan);",
              "        else if(tstr == 'None') ShipOwner(ship, None);",
              "        else ShipOwner(ship, GetValueFromScript('', tstr));",
              "    }",
              "    else exit;",
              "    //Заносим корабль в группу, чтобы была возможность вешать кастомную фракцию",
              "    if(ship_type != t_UB) ShipJoin(CustomShipsGroup, ship);",
              "    else ShipJoin(DDGroup, ship);",
              "    tstr = CT(block_path + 'PilotFace');",
              "    if(tstr != 'Base') ShipFace(ship, int(tstr));",
              "    tstr = CT(block_path + 'ModType');",
              "    if(tstr != 'Base') ShipType(ship, tstr);",
              "    tstr = CT(block_path + 'CustomFaction');",
              "    if(tstr != 'None')",
              "    {",
              "        if(GetMainData('Data.Race.Emblem.2' + tstr) != '' || tstr == 'SubFactionFixedStanding')",
              "        {",
              "            ShipCustomFaction(ship, tstr);",
              "        }",
              "    }",
              "",
              "    //Выставляем скилы",
              "    for(int i = 1; i <= 6; i = i + 1)",
              "    {",
              "        str skill = CT(block_path + 'Skill' + i);",
              "        if(skill != 'Base') ShipSkill(ship, i - 1, int(skill));",
              "    }",
              "",
              "    int blueprint_bon = FindBonusByNameInCfg('DesignDepartment_BlueprintNum');",
              "    int tint_t;",
              "",
              "    //Меняем корпус",
              "    tint = CT(block_path + 'Hull.Count');",
              "    if(tint)",
              "    {",
              "        if(ship_type != t_UB)",
              "        {",
              "            item = ShipEqInSlot(ship, t_Hull);",
              "            if(item) FreeItem(GetItemFromShip(ship, item));",
              "            rand = Rnd(1, tint);",
              "            tint_t = CT(block_path + 'Hull.' + rand + '.BlueprintNum');",
              "            item = CreateHullFromBlockInLang('DesignDepartmentModList.BlueprintsList.Hulls.' + tint_t + '.', 0);",
              "            ItemExtraSpecialsAddByType(item, blueprint_bon, tint_t);",
              "            if(int(CT(block_path + 'Hull.' + rand + '.NoDrop'))) NoDropItem(item, 1);",
              "            AddItemToShip(ship, item);",
              "            Chameleon(ship);",
              "        }",
              "        else",
              "        {",
              "            item = ShipItems(ship, 0);",
              "            rand = Rnd(1, tint);",
              "            CreateHullFromBlockInLang(block_path + 'Hull.' + rand + '.', item);",
              "            if(int(CT(block_path + 'Hull.' + rand + '.NoDrop'))) NoDropItem(item, 1);",
              "            Chameleon(ship);",
              "        }",
              "    }",
              "    dword hull = ShipItems(ship, 0);",
              "",
              "    //Экипируем оборудование",
              "    tint = CT(block_path + 'Engine.Count');",
              "    if(tint)",
              "    {",
              "        item = ShipEqInSlot(ship, t_Engine);",
              "        if(item) FreeItem(GetItemFromShip(ship, item));",
              "        rand = Rnd(1, tint);",
              "        tint_t = CT(block_path + 'Engine.' + rand + '.BlueprintNum');",
              "        item = CreateEquipmentFromBlockInLang('DesignDepartmentModList.BlueprintsList.Engines.' + tint_t + '.');",
              "        ItemExtraSpecialsAddByType(item, blueprint_bon, tint_t);",
              "        if(int(CT(block_path + 'Engine.' + rand + '.NoDrop'))) NoDropItem(item, 1);",
              "        AddItemToShip(ship, item);",
              "        ItemIsInUse(item, ship, 1);",
              "    }",
              "    tint = CT(block_path + 'FuelTank.Count');",
              "    if(tint)",
              "    {",
              "        item = ShipEqInSlot(ship, t_FuelTanks);",
              "        if(item) FreeItem(GetItemFromShip(ship, item));",
              "        rand = Rnd(1, tint);",
              "        tint_t = CT(block_path + 'FuelTank.' + rand + '.BlueprintNum');",
              "        item = CreateEquipmentFromBlockInLang('DesignDepartmentModList.BlueprintsList.FuelTanks.' + tint_t + '.');",
              "        ItemExtraSpecialsAddByType(item, blueprint_bon, tint_t);",
              "        if(int(CT(block_path + 'FuelTank.' + rand + '.NoDrop'))) NoDropItem(item, 1);",
              "        AddItemToShip(ship, item);",
              "        ItemIsInUse(item, ship, 1);",
              "    }",
              "    if(GetEquipmentStats(hull, 3))",
              "    {",
              "        tint = CT(block_path + 'Radar.Count');",
              "        if(tint)",
              "        {",
              "            item = ShipEqInSlot(ship, t_Radar);",
              "            if(item) FreeItem(GetItemFromShip(ship, item));",
              "            rand = Rnd(1, tint);",
              "            tint_t = CT(block_path + 'Radar.' + rand + '.BlueprintNum');",
              "            item = CreateEquipmentFromBlockInLang('DesignDepartmentModList.BlueprintsList.Radars.' + tint_t + '.');",
              "            ItemExtraSpecialsAddByType(item, blueprint_bon, tint_t);",
              "            if(int(CT(block_path + 'Radar.' + rand + '.NoDrop'))) NoDropItem(item, 1);",
              "            AddItemToShip(ship, item);",
              "            ItemIsInUse(item, ship, 1);",
              "        }",
              "    }",
              "",
              "    if(GetEquipmentStats(hull, 4))",
              "    {",
              "        tint = CT(block_path + 'Scanner.Count');",
              "        if(tint)",
              "        {",
              "            item = ShipEqInSlot(ship, t_Scaner);",
              "            if(item) FreeItem(GetItemFromShip(ship, item));",
              "            rand = Rnd(1, tint);",
              "            tint_t = CT(block_path + 'Scanner.' + rand + '.BlueprintNum');",
              "            item = CreateEquipmentFromBlockInLang('DesignDepartmentModList.BlueprintsList.Scanners.' + tint_t + '.');",
              "            ItemExtraSpecialsAddByType(item, blueprint_bon, tint_t);",
              "            if(int(CT(block_path + 'Scanner.' + rand + '.NoDrop'))) NoDropItem(item, 1);",
              "            AddItemToShip(ship, item);",
              "            ItemIsInUse(item, ship, 1);",
              "        }",
              "    }",
              "    if(GetEquipmentStats(hull, 5))",
              "    {",
              "        tint = CT(block_path + 'RepairDroid.Count');",
              "        if(tint)",
              "        {",
              "            item = ShipEqInSlot(ship, t_RepairRobot);",
              "            if(item) FreeItem(GetItemFromShip(ship, item));",
              "            rand = Rnd(1, tint);",
              "            tint_t = CT(block_path + 'RepairDroid.' + rand + '.BlueprintNum');",
              "            item = CreateEquipmentFromBlockInLang('DesignDepartmentModList.BlueprintsList.RepairDroids.' + tint_t + '.');",
              "            ItemExtraSpecialsAddByType(item, blueprint_bon, tint_t);",
              "            if(int(CT(block_path + 'RepairDroid.' + rand + '.NoDrop'))) NoDropItem(item, 1);",
              "            AddItemToShip(ship, item);",
              "            ItemIsInUse(item, ship, 1);",
              "        }",
              "    }",
              "    if(GetEquipmentStats(hull, 6))",
              "    {",
              "        tint = CT(block_path + 'CargoHook.Count');",
              "        if(tint)",
              "        {",
              "            item = ShipEqInSlot(ship, t_CargoHook);",
              "            if(item) FreeItem(GetItemFromShip(ship, item));",
              "            rand = Rnd(1, tint);",
              "            tint_t = CT(block_path + 'CargoHook.' + rand + '.BlueprintNum');",
              "            item = CreateEquipmentFromBlockInLang('DesignDepartmentModList.BlueprintsList.CargoHooks.' + tint_t + '.');",
              "            ItemExtraSpecialsAddByType(item, blueprint_bon, tint_t);",
              "            if(int(CT(block_path + 'CargoHook.' + rand + '.NoDrop'))) NoDropItem(item, 1);",
              "            AddItemToShip(ship, item);",
              "            ItemIsInUse(item, ship, 1);",
              "        }",
              "    }",
              "    if(GetEquipmentStats(hull, 7))",
              "    {",
              "        tint = CT(block_path + 'DefGenerator.Count');",
              "        if(tint)",
              "        {",
              "            item = ShipEqInSlot(ship, t_DefGenerator);",
              "            if(item) FreeItem(GetItemFromShip(ship, item));",
              "            rand = Rnd(1, tint);",
              "            tint_t = CT(block_path + 'DefGenerator.' + rand + '.BlueprintNum');",
              "            item = CreateEquipmentFromBlockInLang('DesignDepartmentModList.BlueprintsList.DefGenerators.' + tint_t + '.');",
              "            ItemExtraSpecialsAddByType(item, blueprint_bon, tint_t);",
              "            if(int(CT(block_path + 'DefGenerator.' + rand + '.NoDrop'))) NoDropItem(item, 1);",
              "            AddItemToShip(ship, item);",
              "            ItemIsInUse(item, ship, 1);",
              "        }",
              "    }",
              "    //Добавляем пушки, если можно или нужно",
              "    int rand;",
              "    tstr = '.';",
              "    dword old_gun;",
              "    for(i = 1; i <= GetEquipmentStats(hull, 1); i = i + 1)",
              "    {",
              "        tint = CT(block_path + 'Weapons.Slot' + i + '.Count');",
              "        if(!tint) continue;",
              "",
              "        rand = Rnd(1, tint);",
              "        tint_t = CT(block_path + 'Weapons.Slot' + i + '.' + rand + '.BlueprintNum');",
              "        item = CreateWeaponFromBlockInLang('DesignDepartmentModList.BlueprintsList.Weapons.' + tint_t + '.');",
              "        if(!item)",
              "            {",
              "            //Нa случай, если кастомную пушку такого типа не нашли",
              "            item = CreateEquipment(t_Weapon3, 20, 8, ShipPilotRace(ship));",
              "            ItemImprovement(item, 2, 0);",
              "            }",
              "        old_gun = ShipEqInSlot(ship, t_Weapon1, i);",
              "        if(old_gun) FreeItem(GetItemFromShip(ship, old_gun));",
              "        ItemExtraSpecialsAddByType(item, blueprint_bon, tint_t);",
              "        if(int(CT(block_path + 'Weapons.Slot' + i + '.' + rand + '.NoDrop'))) NoDropItem(item, 1);",
              "        AddItemToShip(ship, item);",
              "        ItemIsInUse(item, ship, 1, i);",
              "    }",
              "    //Добавляем артефакты, если можно или нужно",
              "    tstr = '.';",
              "    tint = CT(block_path + 'Artefacts.Count');",
              "    for(i = 1; i <= min(tint, GetEquipmentStats(hull, 2)); i = i + 1)",
              "    {",
              "        item = ShipEqInSlot(ship, t_Artefact, i);",
              "        if(item) FreeItem(GetArtFromShip(ship, item));",
              "",
              "        rand = Rnd(1, tint);",
              "        while(~findsubstr(tstr, '.' + rand + '.')) rand = Rnd(1, tint);",
              "        tstr = tstr + rand + '.';",
              "",
              "        item = CreateArtFromBlockInLang(block_path + 'Artefacts.' + rand + '.');",
              "        if(!item) continue; //На случай, если кастомного артефакта данного типа не нашли",
              "        if(int(CT(block_path + 'Artefacts.' + i + '.' + rand + '.NoDrop'))) NoDropItem(item, 1);",
              "        AddItemToShip(ship, item);",
              "        ItemIsInUse(item, ship, 1, i);",
              "    }",
              "    ShipTechLevelKnowledge(ship, 8);",
              "    if(transfer_to) TransferShip(ship, transfer_to);",
              "    FixOverweight(ship);",
              "",
              "    result = ship;",
              "}",
              "",
              "function FillEventObjectWithEventItemsFromStr(dword object, str items_str, int fortune_wheel_call, int rnd_seed, dword sub_object)",
              "{",
              "    int tint;",
              "    int tryExit = 0;",
              "    str tstr;",
              "    dword item;",
              "    int item_type;",
              "    int obj_type = ObjectType(object);",
              "    unknown items_arr = newarray(1);",
              "    ArrayDelete(items_arr, 0);",
              "    if(!rnd_seed) items_str = GetParFromString(items_str, ',', RndObject(1, ParsCountFromString(items_str, ','), Player()) - 1, 1);",
              "    else",
              "    {",
              "        tint = 1 + int(rnd_seed % ParsCountFromString(items_str, ','));",
              "        items_str = GetParFromString(items_str, ',', tint - 1, 1);",
              "    }",
              "",
              "    //Затем парсим строку по перечислениям предметов в выбранном варианте через '&&'",
              "    for(int i = 0; i < ParsCountFromString(items_str, '&&'); i = i + 1)",
              "    {",
              "        tstr = GetParFromString(items_str, '&&', i, 1);",
              "        ArrayAdd(items_arr, tstr);",
              "    }",
              "",
              "    //Приступаем к непосредственному созданию предметов из выбранного варианта",
              "    for(i = 0; i < ArrayDim(items_arr); i = i + 1)",
              "    {",
              "        str item_str = items_arr[i];",
              "",
              "        //Определение количество конкретных предметов",
              "        int items_count = GetItemsCountFromStr(GetParFromString(item_str, '_', ParsCountFromString(item_str, '_') - 1, 1));",
              "        //Создаём конкретные предметы",
              "        for(int j = 1; j <= items_count; j = j + 1)",
              "        {",
              "            //Определяем тип предмета",
              "            str item_str_type = GetParFromString(item_str, '_', 0, 1);",
              "//SFT(item_str_type);",
              "//SFT(GetParFromString(item_str, '_', 2, 1));",
              "//SFT(GetParFromString(item_str, '_', 1, 1));",
              "//SFT(GetParFromString(item_str, '_', 3, 1));",
              "            if(item_str_type == 'Blueprint' || item_str_type == 'CustomItem')",
              "            {",
              "                //Если создаём чертёж/предмет из списка предметов корабля",
              "                if(GetParFromString(item_str, '_', 2, 1) == 'Own')",
              "                {",
              "                    if(obj_type == 5) dword obj = object;",
              "                    //На случай, если в качестве object была получена ЧД",
              "                    else obj = sub_object;",
              "",
              "                    tint = FindBonusByNameInCfg('DesignDepartment_BlueprintNum');",
              "                    tstr = GetParFromString(item_str, '_', 1, 1);",
              "                    if(tstr == 'Equipment')",
              "                    {",
              "                        item = ShipEqInSlot(obj, RndObject(t_FuelTanks, t_DefGenerator, Player()));",
              "                        while(!item) item = ShipEqInSlot(obj, RndObject(t_FuelTanks, t_DefGenerator, Player()));",
              "                        if(!item) exit;",
              "                        if(ItemExtraSpecialsCountByType(item, tint) == 0) exit;",
              "                    }",
              "                    else if(tstr == 'Hull')",
              "                    {",
              "                        item = ShipEqInSlot(obj, t_Hull);",
              "                        if(!item) exit;",
              "                        if(ItemExtraSpecialsCountByType(item, tint) == 0) exit;",
              "                    }",
              "                    else if(tstr == 'Weapon')",
              "                    {",
              "                        tstr = GetParFromString(item_str, '_', 3, 1);",
              "                        if(tstr == 'Rnd')",
              "                        {",
              "                            item = 0;",
              "                            while(!item)",
              "                            {",
              "                                item = ShipEqInSlot(obj, t_Weapon1, RndObject(1, 5, Player()));",
              "                                if(item) break;",
              "                            }",
              "                        }",
              "                        else item = ShipEqInSlot(obj, t_Weapon1, int(tstr));",
              "                        if(!item) exit;",
              "                        if(ItemExtraSpecialsCountByType(item, tint) == 0) exit;",
              "                    }",
              "",
              "                    if(item_str_type == 'Blueprint')",
              "                    {",
              "                        item = MakeBlueprint(item, 0, 0);",
              "                        if(fortune_wheel_call)",
              "                        {",
              "                            SetName(item, Name(item) + ' ' + CT('UselessItems.DesignDepartment_Blueprint.NameAddWin'));",
              "                            UselessItemData(item, 3, 1);",
              "                        }",
              "                    }",
              "                    else",
              "                    {",
              "                        tint = ItemExtraSpecialsCountByType(item, tint);",
              "                        if(tint == -1) throw 'Event ship item blueprint number was not set.';",
              "                        item_type = ItemType(item);",
              "                        if(item_type >= t_Weapon1) item = CreateWeaponFromBlockInLang('DesignDepartmentModList.BlueprintsList.Weapons.' + tint + '.');",
              "                        else if(item_type == t_Hull) item = CreateHullFromBlockInLang('DesignDepartmentModList.BlueprintsList.Hulls.' + tint + '.', 0);",
              "                        else if(item_type == t_Engine) item = CreateEquipmentFromBlockInLang('DesignDepartmentModList.BlueprintsList.Engines.' + tint + '.');",
              "                        else if(item_type == t_FuelTanks) item = CreateEquipmentFromBlockInLang('DesignDepartmentModList.BlueprintsList.FuelTanks.' + tint + '.');",
              "                        else if(item_type == t_Radar) item = CreateEquipmentFromBlockInLang('DesignDepartmentModList.BlueprintsList.Radars.' + tint + '.');",
              "                        else if(item_type == t_Scaner) item = CreateEquipmentFromBlockInLang('DesignDepartmentModList.BlueprintsList.Scanners.' + tint + '.');",
              "                        else if(item_type == t_RepairRobot) item = CreateEquipmentFromBlockInLang('DesignDepartmentModList.BlueprintsList.RepairDroids.' + tint + '.');",
              "                        else if(item_type == t_CargoHook) item = CreateEquipmentFromBlockInLang('DesignDepartmentModList.BlueprintsList.CargoHooks.' + tint + '.');",
              "                        else if(item_type == t_DefGenerator) item = CreateEquipmentFromBlockInLang('DesignDepartmentModList.BlueprintsList.DefGenerators.' + tint + '.');",
              "                        else throw 'Incorrect item type was chosen.';",
              "                    }",
              "                }",
              "                //Если создаём чертёж/предмет из списка шаблонов",
              "                else",
              "                {",
              "                    tstr = GetParFromString(item_str, '_', 1, 1);",
              "                    if(tstr == 'Equipment')",
              "                    {",
              "                        tint = RndObject(1, 7, Player());",
              "                        if(tint == 1)",
              "                        {",
              "                            tstr = 'Engine';",
              "                            item_type = t_Engine;",
              "                        }",
              "                        else if(tint == 2)",
              "                        {",
              "                            tstr = 'FuelTank';",
              "                            item_type = t_FuelTanks;",
              "                        }",
              "                        else if(tint == 3)",
              "                        {",
              "                            tstr = 'Radar';",
              "                            item_type = t_Radar;",
              "                        }",
              "                        else if(tint == 4)",
              "                        {",
              "                            tstr = 'Scanner';",
              "                            item_type = t_Scaner;",
              "                        }",
              "                        else if(tint == 5)",
              "                        {",
              "                            tstr = 'RepairDroid';",
              "                            item_type = t_RepairRobot;",
              "                        }",
              "                        else if(tint == 6)",
              "                        {",
              "                            tstr = 'CargoHook';",
              "                            item_type = t_CargoHook;",
              "                        }",
              "                        else",
              "                        {",
              "                            tstr = 'DefGenerator';",
              "                            item_type = t_DefGenerator;",
              "                        }",
              "                    }",
              "                    else if(tstr == 'Hull') item_type = t_Hull;",
              "                    else if(tstr == 'Weapon') item_type = t_Weapon1;",
              "                    else throw 'Incorrect item type was chosen.';",
              "",
              "                    str str_num = GetParFromString(item_str, '_', 2, 1);",
              "                    if(str_num == 'Rnd')",
              "                    {",
              "                        //Выбираем подходящий случайный чертёж из списка",
              "                        while(1)",
              "                        {",
              "                            tint = RndObject(1, CT('DesignDepartmentModList.BlueprintsList.' + tstr + 's.Count'), Player());",
              "                            if(!BlockExist('DesignDepartmentModList.BlueprintsList.' + tstr + 's.' + tint)) continue;",
              "                            //Если не выполнено требование по подключённому для данного чертежа моду (если параметр RequiredMod пуст, будет всегда возвращать true)",
              "                            if(findsubstr(CurrentMods(-1), CT('DesignDepartmentModList.BlueprintsList.' + tstr + 's.' + tint + '.RequiredMod')) == -1) continue;",
              "                            break;",
              "                        }",
              "                    }",
              "                    else tint = str_num;",
              "",
              "                    if(item_str_type == 'Blueprint')",
              "                    {",
              "                        item = MakeBlueprint(0, item_type, tint);",
              "                        if(fortune_wheel_call)",
              "                        {",
              "                            SetName(item, Name(item) + ' ' + CT('UselessItems.DesignDepartment_Blueprint.NameAddWin'));",
              "                            UselessItemData(item, 3, 1);",
              "                        }",
              "                    }",
              "                    else",
              "                    {",
              "                        if(tstr == 'Hull') item = CreateHullFromBlockInLang('DesignDepartmentModList.BlueprintsList.Hulls.' + tint + '.', 0);",
              "                        else if(tstr == 'Weapon') item = CreateWeaponFromBlockInLang('DesignDepartmentModList.BlueprintsList.Weapons.' + tint + '.');",
              "                        else item = CreateEquipmentFromBlockInLang('DesignDepartmentModList.BlueprintsList.' + tstr + 's.' + tint + '.');",
              "                    }",
              "                }",
              "            }",
              "            else if(item_str_type == 'FakeBlueprint')",
              "            {",
              "                item = MakeFakeBlueprint(GetParFromString(item_str, '_', 1, 1));",
              "            }",
              "            else if(item_str_type == 'NirgendAzur')",
              "            {",
              "                tint = GetItemsCountFromStr(GetParFromString(item_str, '_', 1, 1));",
              "",
              "                //Если создаём ресурс не для кораблей в ЧД, то он будет записан в дроп в виде временного предмета",
              "                if(obj_type != 2)",
              "                {",
              "                    item = CreateNirgendAzurPiece(tint);",
              "                    ItemCost(item, ItemCost(item) * tint);",
              "                }",
              "                //Иначе, создаём как обычный сыпучий",
              "                else",
              "                {",
              "                    item = CreateNirgendAzurPiece(1);",
              "                    int temp_cost = ItemCost(item) * tint;",
              "                    FreeItem(item);",
              "                    item = CreateCustomCountableItem('DesignDepartment_NirgendAzur', ItemSize(cur_item));",
              "                    ItemCost(item, temp_cost);",
              "                }",
              "            }",
              "            else if(item_str_type == 'MM')",
              "            {",
              "                tint = FindBonusByNameInCfg(Format(GetParFromString(item_str, '_', 1, 1), '#', '_', ''));",
              "                if(tint > -1)item = CreateMM(FindBonusByNameInCfg(Format(GetParFromString(item_str, '_', 1, 1), '#', '_', '')));",
              "                else item = CreateMM(FindBonusByNameInCfg(0));",
              "            }",
              "            else if(item_str_type == 'Art' || item_str_type == 'CustomArt')",
              "            {",
              "                int race = GetValueFromScript('', GetParFromString(item_str, '_', 2, 1));",
              "                if(item_str_type == 'Art') item = CreateArt(GetValueFromScript('', 't_' + GetParFromString(item_str, '_', 1, 1)), race);",
              "                else",
              "                {",
              "                    str art_type = Format(GetParFromString(item_str, '_', 1, 1), '#', '_', '');",
              "                    item = CreateCustomArt(art_type, CustomArtSizeCalc(CT('Artefacts.CustomArtefacts.' + art_type + '.Size')), CustomArtCostCalc(CT('Artefacts.CustomArtefacts.' + art_type + '.Cost')), race);",
              "                }",
              "            }",
              "            else if(item_str_type == 'Goods')",
              "            {",
              "                item = CreateGoods(GetValueFromScript('', 't_' + GetParFromString(item_str, '_', 1, 1)), GetParFromString(item_str, '_', 2, 1));",
              "            }",
              "            else if(item_str_type == 'UselessItem')",
              "            {",
              "                if(GetParFromString(item_str, '_', 2, 1) != 'Rnd') item = CreateQuestItem(Format(GetParFromString(item_str, '_', 1, 1), '#', '_', ''), GetValueFromScript('', GetParFromString(item_str, '_', 2, 1)));",
              "                else item = CreateQuestItem(Format(GetParFromString(item_str, '_', 1, 1), '#', '_', ''));",
              "            }",
              "            else if(item_str_type == 'UselessCountableItem')",
              "            {",
              "                item = CreateCustomCountableItem(Format(GetParFromString(item_str, '_', 1, 1), '#', '_', ''), int(GetParFromString(item_str, '_', 2, 1)));",
              "            }",
              "            else if(item_str_type == 'Urine')",
              "            {",
              "                item = CreateCustomArt('UrineTincture', 1, 1, GetValueFromScript('', GetParFromString(item_str, '_', 1, 1)));",
              "            }",
              "            else if(item_str_type == 'Credits')",
              "            {",
              "                ShipMoney(object, ShipMoney(object) + GetParFromString(item_str, '_', 1, 1));",
              "                if(object == Player()) Sound('Sound.Buy');",
              "                continue;",
              "            }",
              "            else if(findsubstr(item_str_type, 'Nod') != -1)",
              "            {",
              "                tint = item_str_type;",
              "                item = CreateNodes(GetParFromString(item_str, '_', 1, 1), tint);",
              "                ItemOwner(item, 5);",
              "            }",
              "",
              "            if(!item) exit;",
              "",
              "            //Совершаем необходимые действия с предметом",
              "            //Если необходимо выбросить предмет в космосе",
              "            if(obj_type == 1)",
              "            {",
              "                //Берём случайный угол",
              "                float angle = 0.01 * RndObject(0, 200, Player());",
              "                //Расстояние от центра системы",
              "                tint = RndObject(700, PlanetOrbitRadius(StarPlanets(object, StarPlanets(object) - 1)) + RndObject(250, 500, Player()), Player());",
              "                int coordX = round(sin(angle * pi) * tint);",
              "                int coordY = round(cos(angle * pi) * tint);",
              "",
              "                DropItemInSystem(object, item, coordX, coordY, coordX, coordY);",
              "                StopMovingItem(object, item);",
              "            }",
              "            //Если необходимо закопать предмет на незаселёнке",
              "            else if(obj_type == 3)",
              "            {",
              "                AddItemToPlanet(object, item);",
              "            }",
              "            //Если объект - корабль",
              "            else if(obj_type == 5)",
              "            {",
              "                //Если необходимо добавить предмет в дроплист корабля",
              "                if(object != Player()) ShipAddDropItem(object, item);",
              "                //Если необходимо добавить предмет в трюм к игроку (функцию вызвали для колеса фортуны)",
              "                else AddItemToShip(object, item);",
              "            }",
              "            //Если необходимо создать набор предметов дропа для аркадных кораблей",
              "            //Предметами будет заполнен общий скриптовый массив, который предварительно необходимо очистить",
              "            //Для того, чтобы заполнить массив несколькими разными предметами,",
              "            //необходимо просто вызвать данную функцию несколько раз подряд",
              "            else if(obj_type == 2)",
              "            {",
              "                ArrayAdd(tarr2, item);",
              "            }",
              "        }",
              "    }",
              "}",
              "",
              "function SpinFortuneWheel()",
              "{",
              "    int prev_seed = FortuneWheelSeed;",
              "    FortuneWheelSeed = FortuneWheelSeed * 7981 + 567 + FortuneWheelSeed / 7981;",
              "    if(prev_seed == FortuneWheelSeed) //На случай, если FortuneWheelSeed \"зациклится\" на одном значении (косяк Даба, был исправлен Ковардом)",
              "    {",
              "        FortuneWheelSeed = FortuneWheelSeed * 7281 + 517 + FortuneWheelSeed / 7181;",
              "    }",
              "    int rand = 1 + int(FortuneWheelSeed % 1000);",
              "",
              "    int chance = 0;",
              "    str win;",
              "    str text;",
              "    int tint;",
              "    //for(int i = 1; i <= CT('DesignDepartmentModList.FortuneWheelWinsList.Count'); i = i + 1)",
              "    while(1)",
              "    {",
              "        i = Rnd(1, CT('DesignDepartmentModList.FortuneWheelWinsList.Count'));",
              "        chance = chance + CT('DesignDepartmentModList.FortuneWheelWinsList.' + i + '.Chance');",
              "        //SFT('' + i + ') ' + chance);",
              "        if(CT('DesignDepartmentModList.TestWheel') == 1)",
              "            {",
              "            i = TextBox('FortuneWheelWinsList:');",
              "            chance = 1000;",
              "            }",
              "        if(rand <= chance)",
              "        {",
              "            //SFT('passed');",
              "            win = CT('DesignDepartmentModList.FortuneWheelWinsList.' + i + '.Demand');",
              "            if(win == '') tint = 1;",
              "            else",
              "            {",
              "                //Проверяем подключённость нужного мода по скрипту",
              "                if(GetParFromString(win, ':', 0, 1) == 'Script')",
              "                {",
              "                    if(IsScriptActive(GetParFromString(win, ':', 1, 1))) tint = 2;",
              "                    else tint = 1;",
              "                }",
              "                //Проверяем подключённость нужного мода по блоку в Lang",
              "                else",
              "                {",
              "                    if(BlockExist(GetParFromString(win, ':', 1, 1))) tint = 2;",
              "                    else tint = 1;",
              "                }",
              "            }",
              "",
              "            if(tint == 1)",
              "            {",
              "                win = CT('DesignDepartmentModList.FortuneWheelWinsList.' + i + '.Win');",
              "                text = CT('DesignDepartmentModList.FortuneWheelWinsList.' + i + '.WinText');",
              "                win_dialog = '';",
              "            }",
              "            else",
              "            {",
              "                if(CT('DesignDepartmentModList.FortuneWheelWinsList.' + i + '.WinDialogDemand') == '')",
              "                {",
              "                    win = CT('DesignDepartmentModList.FortuneWheelWinsList.' + i + '.WinDemand');",
              "                    text = CT('DesignDepartmentModList.FortuneWheelWinsList.' + i + '.WinTextDemand');",
              "                    win_dialog = '';",
              "                }",
              "                //Если \"отправляем\" код выдавать игроку подарок из диалога другого скрипта",
              "                else",
              "                {",
              "                    win = CT('DesignDepartmentModList.FortuneWheelWinsList.' + i + '.WinDialogDemand');",
              "                    tint = Rnd(0, ParsCountFromString(win, '_') - 1);",
              "                    win = GetParFromString(win, '|', tint, 0);",
              "                    win_dialog = win;",
              "                    text = GetParFromString(CT('DesignDepartmentModList.FortuneWheelWinsList.' + i + '.WinTextDemand'), '|', tint, 0);",
              "                    win_answer = GetParFromString(CT('DesignDepartmentModList.FortuneWheelWinsList.' + i + '.WinAnswerDemand'), '|', tint, 0);",
              "                }",
              "            }",
              "            break;",
              "        }",
              "    }",
              "    if(win == '') throw 'No available win option was found in SpinFortuneWheel function.';",
              "",
              "    if(win != 'Nothing')",
              "    {",
              "        if(win_dialog == '')",
              "        {",
              "            prev_seed = FortuneWheelSeed;",
              "            FortuneWheelSeed = FortuneWheelSeed * 7981 + 567 + FortuneWheelSeed / 7981;",
              "            if(prev_seed == FortuneWheelSeed) //На случай, если FortuneWheelSeed \"зациклится\" на одном значении (косяк Даба, был исправлен Ковардом)",
              "            {",
              "                FortuneWheelSeed = FortuneWheelSeed * 7281 + 517 + FortuneWheelSeed / 7181;",
              "            }",
              "            FillEventObjectWithEventItemsFromStr(Player(), win, 1, FortuneWheelSeed, 0);",
              "            Sound('Sound.QuestOk');",
              "        }",
              "    }",
              "    else",
              "    {",
              "        Sound('Sound.QuestCancel');",
              "    }",
              "    result = text;",
              "}",
              "",
              "function SpawnDesignDepartment(dword star)",
              "{",
              "    dword ruin = SpawnCustomShip(-2, star, 0);",
              "    //Выбираем случайное имя КБ и следим, чтобы повторные имена не выпадали подряд",
              "    int tint = CT('DesignDepartmentNames.Count');",
              "    str new_name = CT('DesignDepartmentNames.' + Rnd(1, tint));",
              "    while(~findsubstr(DDNamesLine, new_name)) new_name = CT('DesignDepartmentNames.' + Rnd(1, tint));",
              "    DDNamesLine = DDNamesLine + new_name + ',';",
              "    if(ParsCountFromString(DDNamesLine, ',') > 3) DDNamesLine = substr(findsubstr(DDNamesLine, ','));",
              "    SetName(ruin, new_name);",
              "",
              "    //Вешаем на всю оборудку КБ маркера, что это собственность КБ",
              "    tint = FindBonusByNameInCfg('DesignDepartment_DDEquipMark');",
              "    for(int i = 0; i < ShipItems(ruin); i = i + 1)",
              "    {",
              "        dword item = ShipItems(ruin, i);",
              "        ItemExtraSpecialsAddByType(item, tint);",
              "    }",
              "    for(i = 0; i < ShipArts(ruin); i = i + 1)",
              "    {",
              "        item = ShipArts(ruin, i);",
              "        ItemExtraSpecialsAddByType(item, tint);",
              "    }",
              "",
              "    for(i = t_Food; i <= t_Narcotics; i = i + 1) GoodsAdd(ruin, i, -GoodsAdd(ruin, i, 0));",
              "    //NoShopUpdate(ruin, 2);",
              "    NoShopUpdate(ruin, 1);",
              "",
              "    ShipJoin(DDGroup, ruin, '', 0, int(CT('DesignDepartmentModList.FortuneWheelWinsList.MaxSpinsPerMonth')));",
              "    str customF = CT('DesignDepartmentModList.DesignDepartmentStats.CustomFaction');",
              "    if(customF != 'None') ShipCustomFaction(ruin, customF);",
              "    ruin_CF = customF;",
              "    ShipAddCustomShipInfo(ruin, 'DesignDepartment_DDMainInfo', 'NoShow', CurTurn() + Rnd(19, 23), CurTurn() + 30);",
              "",
              "    //[OLD]Снимаем с оборудования в магазине все акрины и апаем ТУ, если нужно",
              "    //обновляем магазины КБ",
              "    ChangeStoreItems(ruin);",
              "",
              "    result = ruin;",
              "}",
              "",
              "function ChangeStoreItems(dword ruin)",
              "{",
              "//ход следующего обновления",
              "    shopUpdate = CurTurn() + Rnd(CT('DesignDepartmentModList.ShopDD.ShopUpdateMin'), CT('DesignDepartmentModList.ShopDD.ShopUpdateMax'));",
              "",
              "//[del]костыль для КБ старой версии, убрать позже",
              "    if(NoShopUpdate(ruin) != 1) NoShopUpdate(ruin, 1);",
              "",
              "    dword item;",
              "    int a, a_max, t_type, iLvl, addLvl, chance, size, bonus, standartRace = CT('DesignDepartmentModList.CreateEquipment.StellarStandartRace');",
              "    str bonus_str, type;",
              "",
              "//очищаем магазин товаров",
              "    for(i = 0; i < 8; i = i + 1)",
              "    {",
              "        tint1 = GoodsAdd(ruin, i, 0);",
              "        if(tint1 > 0) GoodsAdd(ruin, i, -tint1);",
              "    }",
              "",
              "//очищаем магазин оборудования",
              "    for(i = ShopItems(ruin) - 1; i > -1; i = i - 1)",
              "    {",
              "        item = ShopItems(ruin, i);",
              "        if(item) FreeItem(GetItemFromShop(ruin, item));",
              "    }",
              "",
              "//***заполняем магазин***",
              "//добавляем корпуса",
              "    check = CT('DesignDepartmentModList.ShopDD.CountInShop.Hull');",
              "    for(i = 0; i < check; i = i + 1)",
              "    {",
              "        addLvl = Rnd(1,3);",
              "        while(GTL + addLvl > 8) addLvl = addLvl - 1;",
              "        iLvl = GTL + addLvl;",
              "        size = ItemSize(ShipItems(Player(),0));",
              "        size = Rnd(round(0.5 * size), max(size + 200, round(PortionInDiapason(iLvl, 1, 8, 0.7, 2.0) * CT('Items.Hull.AverageSize'))));",
              "        if(size < 200) size = Rnd(20,40) * 10;",
              "        if(size > 3000) size = 3000;",
              "        cur_item = CreateHull(Rnd(0,5), size, iLvl, Rnd(0,4));",
              "",
              "        bonus_str = CT('DesignDepartmentModList.ShopDD.AddBonus.Bonus.Hull.Akrin' + i);",
              "        tstr1 = '';",
              "        a_max = ParsCountFromString(bonus_str, ',');",
              "        for(a = 0; a < a_max; a = a + 1)",
              "        {",
              "            tstr2 = GetParFromString(bonus_str, ',', a, 1);",
              "            bonus = FindBonusByNameInCfg(tstr2);",
              "            if(bonus == -1) continue;",
              "            tstr1 = tstr1 + tstr2 + ', ';",
              "        }",
              "",
              "        if(tstr1 != '')",
              "        {",
              "            tstr1 = substr(tstr1, 0, count(tstr1) - 2);",
              "            tstr1 = GetParFromString(tstr1, ',', Rnd(1, ParsCountFromString(tstr1, ',')) - 1, 1);",
              "            bonus = FindBonusByNameInCfg(tstr1);",
              "            SpecialToEquipment(bonus, cur_item);",
              "        }",
              "",
              "        BonusForTechLevel(cur_item, 'Hull', addLvl);",
              "        if(ruin_CF != '') EqCustomFaction(cur_item, ruin_CF);",
              "        AddItemToShop(ruin, cur_item);",
              "    }",
              "",
              "//добавляем оборудку",
              "    for(a = 0; a < 7; a = a + 1)",
              "    {",
              "        type = CT('DesignDepartmentModList.ShopDD.Create.Eq.' + a);",
              "        size = CT('Items.'+ type +'.AverageSize');",
              "        check = CT('DesignDepartmentModList.ShopDD.CountInShop.' + type);",
              "        check = Rnd(1, check);",
              "        for(i = 0; i < check; i = i + 1)",
              "        {",
              "            addLvl = Rnd(1,3);",
              "            while(GTL + addLvl > 8) addLvl = addLvl - 1;",
              "            iLvl = GTL + addLvl;",
              "            t_type = GetValueFromScript('', 't_' + type);",
              "            cur_item = CreateEquipment(t_type, Rnd(size/2, size*2), iLvl, standartRace);",
              "            BonusForTechLevel(cur_item, type, addLvl);",
              "            if(ruin_CF != '') EqCustomFaction(cur_item, ruin_CF);",
              "            AddItemToShop(ruin, cur_item);",
              "        }",
              "    }",
              "",
              "//добавляем ванильные пухи",
              "    for(a = 0; a < 3; a = a + 1)",
              "    {",
              "        type = CT('DesignDepartmentModList.ShopDD.Create.Wpn.' + a);",
              "        tstr1 = CT('DesignDepartmentModList.ShopDD.' + type + '.' + GTL);",
              "        if(tstr1 != '')",
              "        {",
              "            check = CT('DesignDepartmentModList.ShopDD.CountInShop.' + Format(type, '.', '', ''));",
              "            check = Rnd(1, check);",
              "            for(i = 0; i < check; i = i + 1)",
              "            {",
              "                tstr2 = GetParFromString(tstr1, ',', Rnd(1, ParsCountFromString(tstr1, ',')) - 1, 1);",
              "                tint2 = tstr2;",
              "                t_type = GetValueFromScript('', tstr2);",
              "                size = GetCustomWeaponData(t_type, 'AverageSize');",
              "                iLvl = (GTL - GetCustomWeaponData(t_type, 'TechLevel')) / 2;",
              "                iLvl = min(Rnd(max(1, iLvl), GTL), 8);",
              "                addLvl = Rnd(1,3);",
              "                while(iLvl  + addLvl > 8) addLvl = addLvl - 1;",
              "                iLvl = iLvl + addLvl;",
              "                cur_item = CreateEquipment(t_type, Rnd(size/2, size*2), iLvl, standartRace);",
              "                BonusForTechLevel(cur_item, tint2, addLvl);",
              "                if(ruin_CF != '') EqCustomFaction(cur_item, ruin_CF);",
              "                AddItemToShop(ruin, cur_item);",
              "            }",
              "        }",
              "    }",
              "",
              "//добавляем кастомные пухи",
              "    tstr1 = CT('DesignDepartmentModList.ShopDD.Weapon.CustomWeapon.' + GTL);",
              "    if(tstr1 != '')",
              "    {",
              "        tstr5 = '|_|';",
              "        for(i = 0; i < CustomWeaponTypes(); i = i + 1) tstr5 = tstr5 + CustomWeaponTypes(i) + '|_|';",
              "",
              "        tstr2 = '';",
              "        check = ParsCountFromString(tstr1, ',');",
              "        for(i = 0; i < check; i = i + 1)",
              "        {",
              "            tstr3 = GetParFromString(tstr1, ',', i, 1);",
              "            if(findsubstr(tstr5, '|_|' + tstr3 + '|_|') !=-1) tstr2 = tstr2 + tstr3 + ', ';",
              "        }",
              "",
              "        check = 0;",
              "        if(tstr2 != '')",
              "        {",
              "            tstr2 = substr(tstr2, 0, count(tstr2) - 2);",
              "            check = CT('DesignDepartmentModList.ShopDD.CountInShop.CustomWeapon');",
              "            check = Rnd(1, check);",
              "        }",
              "",
              "        for(i = 0; i < check; i = i + 1)",
              "        {",
              "            tstr3 = GetParFromString(tstr2, ',', Rnd(1, ParsCountFromString(tstr2, ',')) - 1, 1);",
              "            size = GetCustomWeaponData(tstr3, 'AverageSize');",
              "            iLvl = (GTL - GetCustomWeaponData(tstr3, 'TechLevel')) / 2;",
              "            iLvl = min(Rnd(max(1, iLvl), GTL), 8);",
              "            addLvl = Rnd(1,3);",
              "            while(iLvl  + addLvl > 8) addLvl = addLvl - 1;",
              "            iLvl = iLvl + addLvl;",
              "            cur_item = CreateCustomWeapon(tstr3, Rnd(size/2, size*2), iLvl, standartRace);",
              "            BonusForTechLevel(cur_item, 'CustomWeapon.' + tstr3, addLvl);",
              "            if(ruin_CF != '') EqCustomFaction(cur_item, ruin_CF);",
              "            AddItemToShop(ruin, cur_item);",
              "        }",
              "    }",
              "",
              "//добавляем ящики с азурой",
              "    check = CT('DesignDepartmentModList.ShopDD.CountInShop.NirgendAzurBox');",
              "    for(i = 1; i < 7; i = i + 1)",
              "    {",
              "        tstr1 = 'DesignDepartment_NirgendAzurBox' + i;",
              "        if(!BlockExist('UselessItems.'+tstr1)) continue;",
              "        tint1 = CT('UselessItems.'+tstr1+'.SpawnChance');",
              "        if(Rnd(1,100) > tint1) continue;",
              "        cur_item = CreateQuestItem(tstr1, ShipOwner(ruin));",
              "        cost = CT('UselessItems.'+tstr1+'.CostCreate');",
              "        ItemCost(cur_item, cost);",
              "        tint1 = CT('UselessItems.'+tstr1+'.SizeCreate');",
              "        ItemSize(cur_item, tint1);",
              "        if(ruin_CF != '') EqCustomFaction(cur_item, ruin_CF);",
              "        AddItemToShop(ruin, cur_item);",
              "        check = check - 1;",
              "        if(check == 0)break;",
              "    }",
              "}",
              "",
              "function BonusForTechLevel(dword item, str itemType, int addLvl)",
              "{",
              "    int chance, roll, bon = -1, check_bonus, b, b_max;",
              "    str bonus, bon_str, bon_check;",
              "    if(BlockExist('DesignDepartmentModList.ShopDD.AddBonus.' + GTL))",
              "    {",
              "        for(j = 0; j < 4; j = j + 1)",
              "        {",
              "            if(EqModule(item) != -1) break;",
              "            chance = CT('DesignDepartmentModList.ShopDD.AddBonus.' + GTL + '.MM' + j);",
              "            roll = Rnd(1, 100);",
              "            if(roll > chance) continue;",
              "",
              "            bonus = CT('DesignDepartmentModList.ShopDD.AddBonus.Bonus.' + itemType + '.MM' + j);",
              "            bon_str = '';",
              "            b_max = ParsCountFromString(bonus, ',');",
              "            for(b = 0; b < b_max; b = b + 1)",
              "            {",
              "                bon_check = GetParFromString(bonus, ',', b, 1);",
              "                bon = FindBonusByNameInCfg(bon_check);",
              "                if(bon == -1) continue;",
              "                bon_str = bon_str + bon_check + ', ';",
              "            }",
              "",
              "            if(bon_str != '')",
              "            {",
              "                bon_str = substr(bon_str, 0, count(bon_str) - 2);",
              "                bon_str = GetParFromString(bon_str, ',', Rnd(1, ParsCountFromString(bon_str, ',')) - 1, 1);",
              "                bon = FindBonusByNameInCfg(bon_str);",
              "                ModuleToEquipment(bon, item);",
              "                break;",
              "            }",
              "        }",
              "        chance = CT('DesignDepartmentModList.ShopDD.AddBonus.' + GTL + '.Akrin');",
              "        roll = Rnd(1, 100);",
              "        if(roll <= chance && EqSpecial(item) == -1 && ItemType(item) != t_Hull)",
              "        {",
              "            bonus = CT('DesignDepartmentModList.ShopDD.AddBonus.Bonus.' + itemType + '.Akrin');",
              "            bon_str = '';",
              "            b_max = ParsCountFromString(bonus, ',');",
              "            for(b = 0; b < b_max; b = b + 1)",
              "            {",
              "                bon_check = GetParFromString(bonus, ',', b, 1);",
              "                bon = FindBonusByNameInCfg(bon_check);",
              "                if(bon == -1) continue;",
              "                if(!MayAddBonusToEq(bon, item)) continue;",
              "                bon_str = bon_str + bon_check + ', ';",
              "            }",
              "",
              "            if(bon_str != '')",
              "            {",
              "                bon_str = substr(bon_str, 0, count(bon_str) - 2);",
              "                bon_str = GetParFromString(bon_str, ',', Rnd(1, ParsCountFromString(bon_str, ',')) - 1, 1);",
              "                bon = FindBonusByNameInCfg(bon_str);",
              "                SpecialToEquipment(bon, item);",
              "            }",
              "        }",
              "        chance = CT('DesignDepartmentModList.ShopDD.AddBonus.' + GTL + '.Imp');",
              "        roll = Rnd(1, 100);",
              "        if(roll <= chance && !ItemImprovement(item)) ItemImprovement(item, 2, 0);",
              "    }",
              "    if(addLvl > -1)",
              "    {",
              "        if(ItemType(item) == t_Hull)",
              "        {",
              "            if(addLvl == 0) cost = Rnd(50, 100);",
              "            if(addLvl == 1) cost = Rnd(100, 250);",
              "            if(addLvl == 2) cost = Rnd(250, 500);",
              "            if(addLvl == 3) cost = Rnd(500, 2500);",
              "        }",
              "        else",
              "        {",
              "            if(addLvl == 0) cost = Rnd(25, 50);",
              "            if(addLvl == 1) cost = Rnd(50, 75);",
              "            if(addLvl == 2) cost = Rnd(75, 150);",
              "            if(addLvl == 3) cost = Rnd(150, 250);",
              "        }",
              "        ItemCost(item, ItemCost(item) + cost * 1000);",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  210,
          "Pos.y":  140,
          "Parent":  -1,
          "#":  9,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GTL = GalaxyTechLevel();",
              "",
              "//test",
              "//RandomEventLaunchTime=0;",
              "",
              "",
              "//азура не налипает на корпус игрока",
              "if(CurTurn() > nirgendOnHull)",
              "{",
              "    nirgendOnHull = CurTurn();",
              "    cur_item = ShipEqInSlot(Player(), t_Hull);",
              "    if(ItemSize(cur_item) > 1999)",
              "    {",
              "        if(ShipInNormalSpace(Player()) || ShipInHyperSpace(Player()) || ShipInHole(Player()))",
              "        {",
              "            NirgendAzurStuckOnPlayer(cur_item);",
              "        }",
              "    }",
              "}",
              "",
              "",
              "//Если таймер запущен (пока станция жива, таймер вырублен)",
              "if(DDSpawnTurn)",
              "{",
              "    if(DDSpawnTurn == CurTurn())",
              "    {",
              "//создаем массив систем где КБ может быть построена",
              "        ArrayClear(tarr1); ArrayDelete(tarr1,0);",
              "        tdwd1 = StarToCon(PlanetToStar(PlanetPirateClan()));",
              "        for(i=0;i<GalaxyStars();i=i+1)",
              "            {",
              "            cur_star = GalaxyStar(i);",
              "            if(StarOwner(cur_star)==1)continue;",
              "            if(StarCustomFaction(cur_star) != '')continue;",
              "            if(StarBattle(cur_star))continue;",
              "            if(StarRuins(cur_star)>2)continue;",
              "            if(ShipStar(Player()) == cur_star && ShipInNormalSpace(Player()))continue;",
              "            if(StarToCon(cur_star) == tdwd1) continue;",
              "            ArrayAdd(tarr1,i);",
              "            }",
              "//выбираем систему из массива и строим КБ",
              "        if(ArrayDim(tarr1)>1)",
              "            {",
              "            tint1 = Rnd(0,ArrayDim(tarr1)-1);",
              "            tint1 = tarr1[tint1];",
              "            cur_star = GalaxyStar(tint1);",
              "            cur_ruin = SpawnDesignDepartment(cur_star);",
              "            DDCreateDay = GameDateTxtByTurn(CurTurn()+1);",
              "            DDCreateDay = substr(DDCreateDay, 0, count(DDCreateDay) - 4);",
              "            CustomEther('DesDep_CustomEther', 0, 'DD_Create', Format(CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentNotifications.DDWasBuild' + Rnd(1, 3)), '<Name' + '>', Name(cur_ruin), '<Star' + '>', Name(cur_star), '255,240,100'));",
              "            DDSpawnTurn = 0;",
              "            tint1 = ShipFindCustomShipInfoByType(Player(), 'DesignDepartment_DDMemberCard');",
              "            if(tint1 > -1)",
              "                {",
              "                tint2 = CurTurn() + CT('DesignDepartmentModList.DesignDepartmentStats.MemberCardPayDate');",
              "                ShipCustomShipInfoData(Player(), tint1, 1, tint2);",
              "                ShipCustomShipInfoDescription(Player(), tint1, Format(CT('ShipInfo.AddInfo.CustomInfos.DesignDepartment_DDMemberCard.Description'), '<PayDate' + '>', GameDateTxtByTurn(tint2), '255,240,100'));",
              "                }",
              "            }",
              "        else DDSpawnTurn = CurTurn() + Rnd(10, 20);",
              "        //cur_star = PlanetToStar(GetShipHomePlanet(Player()));",
              "        //if(StarOwner(cur_star) != 1 && StarCustomFaction(cur_star) == '' && (ShipStar(Player()) != cur_star || !ShipInNormalSpace(Player())))",
              "        //{",
              "            //cur_ruin = SpawnDesignDepartment(cur_star);",
              "            //CustomEther('DesDep_CustomEther', 0, 'DD_Create', Format(CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentNotifications.DDWasBuild' + Rnd(1, 3)), '<Name' + '>', Name(cur_ruin), '<Star' + '>', Name(cur_star), '255,240,100'));",
              "            //DDSpawnTurn = 0;",
              "        //}",
              "        //На случай, если родная система игрока захвачена, либо он сам сейчас тусит в ней",
              "        //else DDSpawnTurn = CurTurn() + Rnd(10, 20);",
              "    }",
              "}",
              "else",
              "{",
              "    cur_ruin = GroupToShip(DDGroup);",
              "//Если КБ уничтожили",
              "    if(!GroupToShip(DDGroup))",
              "    {",
              "//очищаем переменную дня создания КБ",
              "        DDCreateDay = '';",
              "",
              "//очищаем массивы проектирования оборудования",
              "        ArrayClear(DD_weapon_cost); ArrayClear(DD_weapon_create);",
              "        ArrayClear(DD_hull_cost); ArrayClear(DD_hull_create);",
              "        ArrayClear(DD_Equipments_cost); ArrayClear(DD_Equipments_create);",
              "//обнуляем переменную хода создания оборудования",
              "        DD_weapon_ready=0; DD_hull_ready=0; DD_Equipments_ready=0;",
              "",
              "        //Очищаем предмет, который возможно находился в процессе сборки",
              "        cur_item = GetItemFromVault(BlueprintInWorkPath);",
              "        if(cur_item) FreeItem(cur_item);",
              "",
              "        //Удаляем членскую карту",
              "//        if(~ShipFindCustomShipInfoByType(Player(), 'DesignDepartment_DDMemberCard'))",
              "//            {",
              "//            ShipDeleteCustomShipInfo(Player(), 'DesignDepartment_DDMemberCard');",
              "//            }",
              "//",
              "//увеличиваем счетчик платы(чтобы плату не списывали пока КБ не создастся) и меняем описание пенис-карты",
              "        tint1 = ShipFindCustomShipInfoByType(Player(), 'DesignDepartment_DDMemberCard');",
              "        if(tint1 > -1)",
              "            {",
              "            ShipCustomShipInfoData(Player(), tint1, 1, CurTurn() + 999999);",
              "            ShipCustomShipInfoDescription(Player(), tint1, CT('ShipInfo.AddInfo.CustomInfos.DesignDepartment_DDMemberCard.Description_NoDD'));",
              "            }",
              "",
              "//ход постройки следующей КБ",
              "        tint1 = CT('DesignDepartmentModList.DesignDepartmentStats.DesignDepartmentRespawn');",
              "        if(~tint1)",
              "        {",
              "            if(!tint1) tint1 = 1;",
              "            DDSpawnTurn = CurTurn() + Rnd(CT('DesignDepartmentModList.DesignDepartmentStats.DesignDepartmentRespawnMin'), CT('DesignDepartmentModList.DesignDepartmentStats.DesignDepartmentRespawnMax'));",
              "        }",
              "    }",
              "    else",
              "    {",
              "        //позже удалить этот костыль, ruin_CF должно обновляться при создании новой КБ",
              "        //на старых версиях скрипта может не обновляться",
              "        ruin_CF = ShipCustomFaction(cur_ruin);",
              "        if(CurTurn() > shopUpdate)",
              "        {",
              "//обновляем магазины КБ",
              "            ChangeStoreItems(cur_ruin);",
              "        }",
              "",
              "//сообщаем игорьку что проектировка пухи кончена",
              "        if(ArrayDim(DD_weapon_create)>1)",
              "            {",
              "            if(DD_weapon_ready!=0)",
              "                {",
              "                if(DD_weapon_Stat!='')",
              "                    {",
              "                    if(ArrayDim(DD_weapon_cost)==1 && CurTurn()>=DD_weapon_ready)",
              "                        {",
              "                        CustomEther('DesDep_CustomEther', 0, '', CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentNotifications.GunReady'));",
              "                        DD_weapon_Stat='';",
              "                        }",
              "                    }",
              "                }",
              "            }",
              "//сообщаем игорьку что проектировка корпуса кончена",
              "        if(ArrayDim(DD_hull_create)>1)",
              "            {",
              "            if(DD_hull_ready!=0)",
              "                {",
              "                if(DD_hull_Stat!='')",
              "                    {",
              "                    if(ArrayDim(DD_hull_cost)==1 && CurTurn()>=DD_hull_ready)",
              "                        {",
              "                        CustomEther('DesDep_CustomEther', 0, '', CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentNotifications.HullReady'));",
              "                        DD_hull_Stat='';",
              "                        }",
              "                    }",
              "                }",
              "            }",
              "//сообщаем игорьку что проектировка стандартного оборудования кончена",
              "        if(ArrayDim(DD_Equipments_create)>1)",
              "            {",
              "            if(DD_Equipments_ready!=0)",
              "                {",
              "                if(DD_Equipments_Stat!='')",
              "                    {",
              "                    if(ArrayDim(DD_Equipments_cost)==1 && CurTurn()>=DD_Equipments_ready)",
              "                        {",
              "                        CustomEther('DesDep_CustomEther', 0, '', CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentNotifications.EquipmentsReady'));",
              "                        DD_Equipments_Stat='';",
              "                        }",
              "                    }",
              "                }",
              "            }",
              "",
              "        check = GetData(0, cur_ruin);",
              "        //Чертёж изучается",
              "        if(check == 1)",
              "        {",
              "            //Если исследование чертежа завершилось",
              "            if(BlueprintInResearchTimer <= CurTurn())",
              "            {",
              "                if(BlueprintInWorkPath == 'FakeBlueprint')",
              "                {",
              "                    cost = 0.15 * ShipMoney(Player());",
              "//                    if(GetShipRuins(Player()) != cur_ruin) CustomEther('DesDep_CustomEther', 0, '', Format(CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentNotifications.FakeResearchDone'), '<Cost' + '>', cost));",
              "                    CustomEther('DesDep_CustomEther', 0, '', Format(CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentNotifications.FakeResearchDone'), '<Cost' + '>', cost));",
              "                    ShipMoney(Player(), ShipMoney(Player()) - cost);",
              "                    Sound('Sound.Sell');",
              "                    SetData(0, 0, cur_ruin);",
              "                    BlueprintInResearchTimer = 0;",
              "                }",
              "                else",
              "                {",
              "                    if(GetShipRuins(Player()) != cur_ruin) CustomEther('DesDep_CustomEther', 0, '', CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentNotifications.ResearchDone'));",
              "                    SetData(2, 0, cur_ruin); //Ставим маркер, что чертёж исследован",
              "                    BlueprintInResearchTimer = 0;",
              "                }",
              "            }",
              "        }",
              "        //Чертёж изучен",
              "        else if(check == 2)",
              "        {}",
              "        //Предмет по чертежу собирается",
              "        else if(check == 3)",
              "        {",
              "            //Если исследование чертежа завершилось",
              "            if(BlueprintInAssemblyTimer <= CurTurn())",
              "            {",
              "                if(GetShipRuins(Player()) != cur_ruin) CustomEther('DesDep_CustomEther', 0, '', CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentNotifications.AssembleDone'));",
              "                SetData(4, 0, cur_ruin); //Ставим маркер, что чертёж исследован",
              "                BlueprintInAssemblyTimer = 0;",
              "            }",
              "        }",
              "        //Предмет по чертежу собран",
              "        else if(check == 4)",
              "        {}",
              "    }",
              "}",
              "",
              "if(CT('DesignDepartmentModList.EventsList.EventsVersion') != EventsVersion)",
              "{",
              "    CreateEventsListForCurrentPlaytrhrough();",
              "}",
              "",
              "//Запускаем случайное подходящие событие, если подошло время",
              "if(RandomEventLaunchTime <= CurTurn())",
              "{",
              "//TESTING",
              "//LaunchEvent(1);",
              "//SFT('LaunchEvent_start');",
              "    LaunchEvent(ChooseRandomEventToLaunch());",
              "//SFT('LaunchEvent_end');",
              "}",
              "",
              "//Обнуляем маркер залёта игрока в ЧД вместе с другими кораблями",
              "if(ShipInNormalSpace(Player())) CurABWasVisited = 0;",
              "",
              "//Удаляем из массива с эвентовыми ЧД айдишники ЧД, которые закрылись сами по себе, если игрок до них не добрался",
              "for(i = 1; i < ArrayDim(EventBlackHolesArray); i = i + 1)",
              "{",
              "    check = 0;",
              "    for(j = 1; j < GalaxyHoles(); j = j + 1)",
              "    {",
              "        tdwd1 = Id(GalaxyHoles(j));",
              "        if(tdwd1 == GetParFromString(EventBlackHolesArray[i], ',', 0, 0))",
              "        {",
              "            check = 1;",
              "            break;",
              "        }",
              "    }",
              "    if(!check) ArrayDelete(EventBlackHolesArray, i);",
              "}",
              "",
              "//Если игрок залетел в ЧД",
              "if(ShipInHole(Player()))",
              "{",
              "    if(!StartAB() && !GABStatus)",
              "    {",
              "        if(!CurABWasVisited)",
              "        {",
              "            //Создаём цикл только для возможности прервать исполнение кода в любой момент",
              "            while(1)",
              "            {",
              "                tdwd1 = ShipOrderObj(Player());",
              "",
              "                //Выставляем маркер, препятствующий повторному исполнению данного кода за одно посещение ЧД",
              "                CurABWasVisited = 1;",
              "                //На всякий случай запрещаем игроку повторный влёт в данную ЧД (боты могут случайно продлить её время жизни своими залётами)",
              "                if(HoleMap(tdwd1) != 'SkipAB') HoleMap(tdwd1, 'NoEntry');",
              "",
              "                //Проверяем, влетел ли игрок в эвентовую ЧД",
              "                check = 0;",
              "                tint1 = Id(tdwd1);",
              "                for(i = 1; i < ArrayDim(EventBlackHolesArray); i = i + 1)",
              "                {",
              "                    if(tint1 == GetParFromString(EventBlackHolesArray[i], ',', 0, 0))",
              "                    {",
              "                        check = GetParFromString(EventBlackHolesArray[i], ',', 1, 0);",
              "                        ArrayDelete(EventBlackHolesArray, i);",
              "                        break;",
              "                    }",
              "                }",
              "                if(!check) break;",
              "",
              "                //Ищем корабли, влетевшие в ЧД одновременно с игроком",
              "                cur_star = HoleStar1(tdwd1);",
              "                tint2 = StarShips(cur_star);",
              "                tint3 = tint2 + StarShips(HoleStar2(tdwd1));",
              "                for(i = 0; i < tint3; i = i + 1)",
              "                {",
              "                    if(i < tint2) cur_ship = StarShips(cur_star, i);",
              "                    else cur_ship = StarShips(HoleStar2(tdwd1), i - tint2);",
              "",
              "                    if(IsPlayer(cur_ship)) continue;",
              "                    if(!ShipInHole(cur_ship)) continue;",
              "                    if(HoleStar1(ShipOrderObj(cur_ship)) != HoleStar1(ShipOrderObj(Player()))) continue;",
              "",
              "                    //Проверяем отношение корабля к игроку, если оно враждебно, то корабль останется врагом игрока и в АБ",
              "                    if(RelationToShip(cur_ship, Player()) <= 9)",
              "                    {",
              "                        tstr1 = '' + ShipTypeN(cur_ship) + ',' + ShipSubType(cur_ship) + ',' + ShipType(cur_ship) + ',' + ShipName(cur_ship) + ',' + Name(cur_ship) + ',' + ShipOwner(cur_ship) + ',' + 'ShipId_' + Id(cur_ship);",
              "                        tint1 = 2;",
              "                    }",
              "                    else",
              "                    {",
              "                        tstr1 = '' + ShipTypeN(cur_ship) + ',' + ShipSubType(cur_ship) + ',' + ShipType(cur_ship) + '_Friend' + ',' + ShipName(cur_ship) + ',' + Name(cur_ship) + ',' + ShipOwner(cur_ship) + ',' + 'ShipId_' + Id(cur_ship);",
              "                        tint1 = 1;",
              "                    }",
              "",
              "                    //Включаем этот корабль в будущую аркадную битву",
              "                    tdwd2 = ConvertToABShip(cur_ship, tint1, 100, 100, tstr1);",
              "                    //Добавляем автореген за каждого экипированного младшего дроида",
              "                    ABShipModifiers(tdwd2, 'regen', 100 * ArtefactTypeInUse(cur_ship, t_ArtefactDroid));",
              "                    //Ставим кораблю метку, что он попал в ЧД вместе с игроком",
              "                    tint1 = ShipFindCustomShipInfoByType(cur_ship, 'BraveExplorer');",
              "                    if(~tint1)",
              "                    {",
              "                        //Если данный корабль является партнёром игрока, то артефактов после боя он не получит",
              "                        if(ShipIsPartner(cur_ship) == Player()) ShipCustomShipInfoData(cur_ship, tint1, 1, 5);",
              "                        else ShipCustomShipInfoData(cur_ship, tint1, 1, 4);",
              "                    }",
              "                }",
              "",
              "                //Создаём эвентовые враждебные аркадные корабли",
              "                free(tarr1);",
              "                tarr1 = newarray(1);",
              "                ArrayDelete(tarr1, 0);",
              "                //Сперва выбираем один случайный из перечисленных вариантов подборки кораблей",
              "                tstr1 = GetParFromString(EventsListArray[check, 'EventShipsList'], ',', Rnd(1, ParsCountFromString(EventsListArray[check, 'EventShipsList'], ',')) - 1, 1);",
              "                //Затем парсим строку по перечислениям кораблей в выбранном варианте через '&&'",
              "                for(i = 0; i < ParsCountFromString(tstr1, '&&'); i = i + 1)",
              "                {",
              "                    tstr2 = GetParFromString(tstr1, '&&', i, 1);",
              "                    ArrayAdd(tarr1, tstr2);",
              "                }",
              "                //Приступаем к непосредственному созданию кораблей",
              "                for(i = 0; i < ArrayDim(tarr1); i = i + 1)",
              "                {",
              "                    tstr2 = tarr1[i];",
              "",
              "                    //Определяем количество конкретных кораблей",
              "                    tint2 = GetItemsCountFromStr(GetParFromString(tstr2, '_', ParsCountFromString(tstr2, '_') - 1, 1));",
              "                    for(j = 1; j <= tint2; j = j + 1)",
              "                    {",
              "                        if(GetParFromString(tstr2, '_', 1, 1) == 'Rnd') tint1 = Rnd(1, CT('DesignDepartmentModList.CustomShips.Count'));",
              "                        else tint1 = GetParFromString(tstr2, '_', 1, 1);",
              "                        cur_ship = SpawnCustomShip(tint1, StarPlanets(StarNearbyStars(ShipStar(Player()), 1), 0), 0);",
              "                        ArrayClear(tarr2);",
              "                        FillEventObjectWithEventItemsFromStr(ShipOrderObj(Player()), EventsListArray[check, 'EventItemsList'], 0, 0, cur_ship);",
              "                        ConvertToABShip(cur_ship, 0, 100, 100, '' + ShipTypeN(cur_ship) + ',' + ShipSubType(cur_ship) + ',' + ShipType(cur_ship) + ',' + ShipName(cur_ship) + ',' + Name(cur_ship) + ',' + ShipOwner(cur_ship), tarr2[1]);",
              "                        ShipDestroy(cur_ship, 1);",
              "                    }",
              "                }",
              "",
              "                //Начинаем аркадный бой",
              "                tint1 = 1+2+4+8+16+32+64+128+256+512+1024+2048+4096+8192; //14 оригинальных карт",
              "                //Проверяем, подключёны ли моды RevABMaps и/или SR1ABMaps",
              "                if(ResourceExist('ABMap.Tachanka')) tint1 = tint1 + 16384+32768+65536+131072+262144+524288; //+6",
              "                if(ResourceExist('ABMap.Azure')) tint1 = tint1 + 1048576+2097152+4194304+8388608; //+4",
              "                tint2 = Rnd(0, 23);",
              "                while(!(tint1 & (1 << tint2))) tint2 = Rnd(0, 23); //Максимальная выборка - 24 карты",
              "                //Если выпала оригинальная карта",
              "                if(tint2 <= 13) StartAB('ABMap.map_' + (tint2 + 1));",
              "                //Если выпала карта из мода",
              "                else",
              "                {",
              "                    if(tint2 == 14) StartAB('ABMap.Nonsense');",
              "                    else if(tint2 == 15) StartAB('ABMap.Pulsar');",
              "                    else if(tint2 == 16) StartAB('ABMap.Strolocobs');",
              "                    else if(tint2 == 17) StartAB('ABMap.Tachanka');",
              "                    else if(tint2 == 18) StartAB('ABMap.Fifth_Dimension');",
              "                    else if(tint2 == 19) StartAB('ABMap.Spider\\\\\\'s_Lair');",
              "                    else if(tint2 == 20) StartAB('ABMap.Azure', 1); //Для \"Синевы\" всегда синий фон",
              "                    else if(tint2 == 21) StartAB('ABMap.Pseudoball');",
              "                    else if(tint2 == 22) StartAB('ABMap.Thor');",
              "                    else StartAB('ABMap.Bowling_Alley');",
              "                }",
              "                break;",
              "            }",
              "        }",
              "    }",
              "    //Игрок завершил аркадный бой, в котором с ним также оказался другой корабль",
              "    else if(GABStatus == 2)",
              "    {",
              "        //Перебираем галаэвенты и выясняем, что стало с копией корабля, влетевшего в ЧД вместе с игроком",
              "        for(i = GalaxyEvents() - 1; i >= 0; i = i - 1)",
              "        {",
              "            if(GalaxyEventDate(i) < CurTurn()) break;",
              "            tstr1 = GalaxyEventType(i);",
              "            //Если он погиб",
              "            if(tstr1 == 'LabeledShipKilledInAB')",
              "            {",
              "                tstr1 = GetParFromString(GalaxyEventsTextData(i, 0), ',', 6, 0);",
              "                if(~findsubstr(tstr1, 'ShipId_'))",
              "                {",
              "                    //Определяем Id, а затем ищем и убиваем этот корабль в нормальном гиперпространстве, до его выхода из ЧД",
              "                    HullHP(IdToShip(int(tstr1)), -100000); //Выставляем минусовое ХП, чтобы никакой дроид не успел отхилить его за один ход",
              "                }",
              "            }",
              "            //Если выжил",
              "            else if(tstr1 == 'LabeledShipSurvivedInAB')",
              "            {",
              "                tstr1 = GetParFromString(GalaxyEventsTextData(i, 0), ',', 6, 0);",
              "                if(~findsubstr(tstr1, 'ShipId_'))",
              "                {",
              "                    //Выставляем ему уровень здоровья, который остался у этого корабля под конец аркадного боя",
              "                    tdwd1 = IdToShip(int(tstr1));",
              "                    HullHP(tdwd1, GalaxyEventData(i, 0));",
              "                    //Проверка на случай, если корабль закончил АБ с минимальным количеством ХП и на выходе получил из события нулевое здоровье",
              "                    if(HullHP(tdwd1) < 1) HullHP(tdwd1, round(0.01 * ItemSize(ShipItems(tdwd1, 0))) + 1);",
              "",
              "                    //Выставляем этому кораблю время вылета из ЧД, идентичное времени вылета игрока",
              "                    ShipOrderData1(tdwd1, ShipOrderData1(Player()));",
              "                }",
              "            }",
              "        }",
              "    }",
              "}",
              "",
              "//Перебираем все корабли в Галактике и \"обрабатываем\" их",
              "i = BuildListOfNewShips(tarr1, lastShipId, 1+8+16, 1+2+4+8+16+32+64+128, 1, ',SubFactionFixedStanding', ',Dreadnought,PirateFrigate,PirateCorvette,PirateGalleon,Klissan1,Machpella,None,Superdominator,AMod_Invaders2');",
              "if(i) //Если был обнаружен хотя бы один корабль, подходящий по заданным фильтрам",
              "{",
              "    for(i = 0; i < ArrayDim(tarr1); i = i + 1)",
              "    {",
              "        cur_ship = tarr1[i];",
              "",
              "        if(!cur_ship) continue; //Проверка на \"мертворождённый\" корабль",
              "        //Доп. проверка только для ванильных кораблей",
              "        cur_item = ShipEqInSlot(cur_ship,t_Hull);",
              "        if(findsubstr('Superdominator,Dreadnought,PirateCorvette,PirateFrigate,PirateGalleon,Klissan1,None,AMod_Invaders2', ShipType(cur_ship)) == -1)",
              "        {",
              "            if(ShipTypeN(cur_ship) == t_Pirate)",
              "                {",
              "                if(ItemSize(cur_item)>1999)ShipAddCustomShipInfo(cur_ship, 'DesignDepartment_NirgendAzurDropShip_2K', 'NoShow');",
              "                //if(ItemSize(cur_item)>1999)Ether(7,'1234'+cur_ship,'2k+ nirgend: '+Name(cur_ship)+'-'+Name(ShipStar(cur_ship)));",
              "                continue;",
              "                }",
              "            if(ShipTypeN(cur_ship) == t_Kling && ShipSubType(cur_ship) != 6)",
              "                {",
              "                if(ItemSize(cur_item)>1999)ShipAddCustomShipInfo(cur_ship, 'DesignDepartment_NirgendAzurDropShip_2K', 'NoShow');",
              "                //if(ItemSize(cur_item)>1999)Ether(7,'1234'+cur_ship,'2k+ nirgend: '+Name(cur_ship)+'-'+Name(ShipStar(cur_ship)));",
              "                continue;",
              "                }",
              "            if(ShipTypeN(cur_ship) == t_Warrior && !ShipSubType(cur_ship))",
              "                {",
              "                if(ItemSize(cur_item)>1999)ShipAddCustomShipInfo(cur_ship, 'DesignDepartment_NirgendAzurDropShip_2K', 'NoShow');",
              "                //if(ItemSize(cur_item)>1999)Ether(7,'1234'+cur_ship,'2k+ nirgend: '+Name(cur_ship)+'-'+Name(ShipStar(cur_ship)));",
              "                continue;",
              "                }",
              "        }",
              "        //доп проверка для эгемонов",
              "        if(findsubstr('Klissan1', ShipType(cur_ship)) != -1)",
              "            {",
              "            check = EqSpecial(cur_item);",
              "            tint1 = FindBonusByCustomTag('Gigas');",
              "            if(check != tint1)",
              "                {",
              "                //if(ItemSize(cur_item)>1999)Ether(7,'1234'+cur_ship,'egemon 2k+: '+Name(cur_ship)+'-'+Name(ShipStar(cur_ship)));",
              "                if(ItemSize(cur_item)>1999)ShipAddCustomShipInfo(cur_ship, 'DesignDepartment_NirgendAzurDropShip_2K', 'NoShow');",
              "                else continue;",
              "                }",
              "            }",
              "        if(ShipType(cur_ship) == 'Pirate')",
              "            {",
              "            if(ItemSize(cur_item)>1999)ShipAddCustomShipInfo(cur_ship, 'DesignDepartment_NirgendAzurDropShip_2K', 'NoShow');",
              "            //if(ItemSize(cur_item)>1999)Ether(7,'1234'+cur_ship,'2k+ nirgend: '+Name(cur_ship)+'-'+Name(ShipStar(cur_ship)));",
              "            continue; //Потому что из-за 'PirateFrigate' и 'PirateGalleon' выше не фильтруется",
              "            }",
              "        //Ether(7,'123'+cur_ship,'ship nirgend: '+Name(cur_ship)+'-'+Name(ShipStar(cur_ship)));",
              "        ShipAddCustomShipInfo(cur_ship, 'DesignDepartment_NirgendAzurDropShip', 'NoShow');",
              "    }",
              "}",
              "lastShipId = GalaxyShipId();",
              "",
              "//Для отладки",
              "//NewsAdd(SpinFortuneWheel());"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  230,
          "Pos.y":  140,
          "Parent":  -1,
          "#":  19,
          "Code.Type":  "DialogBegin",
          "Code":          
          [
              "cur_ruin = GetShipRuins(Player());",
              "if(cur_ruin)",
              "{",
              "    ruin_CF = ShipCustomFaction(cur_ruin);",
              "",
              "    tstr1 = Format(ShipType(cur_ruin), '_licensed', '', '');",
              "    if(tstr1 == 'DD')",
              "    {",
              "        AddDialogBlock(CT('FormRuins.GN.Modern.PlayerAsk'), 2);",
              "        //Если игроком уже куплена пенисная карта",
              "        if(~ShipFindCustomShipInfoByType(Player(), 'DesignDepartment_DDMemberCard'))",
              "        {",
              "//testing dialog",
              "            if(CT('DesignDepartmentModList.TestDialog')==1)AddDialogInject('DDTestDialog', '', 'DD_Test', 100);",
              "",
              "            //Если опция выигрыша предусматривает выдачу приза из другого скрипта",
              "            //Ждём, пока игрок соизволит нажать ответ и получить приз",
              "            if(win_dialog != '')",
              "            {",
              "                AddDialogOverride('DDFortuneWheelEndSpecial', 100);",
              "            }",
              "            else",
              "            {",
              "                //Разблокируем стандартные кнопки магазинов и инфоцентра, заменяем их на свои",
              "                InterfaceState('RuinsTalk', 'PR_Shop', 1);",
              "                InterfaceState('RuinsTalk', 'PR_ShopBlock', 0);",
              "                InterfaceState('RuinsTalk', 'PR_Goods', 1);",
              "                InterfaceState('RuinsTalk', 'PR_GoodsBlock', 0);",
              "                InterfaceState('RuinsTalk', 'PR_Info', 1);",
              "                InterfaceState('RuinsTalk', 'PR_InfoBlock', 0);",
              "                InterfaceState('RuinsTalk', 'PM_EndTurn', 1);",
              "                InterfaceState('RuinsTalk', 'RT_EndTurn_Block', 0);",
              "                //Включаем панель Ассистента",
              "                if(findsubstr(CurrentMods(-1), 'OtherMods\\Assistant') > -1)",
              "                {",
              "                    if(InterfaceState('RuinsTalk', 'AstAddRuins') != 1) InterfaceState('RuinsTalk', 'AstAddRuins', 1);",
              "                }",
              "                else",
              "                {",
              "                    if(InterfaceState('RuinsTalk', 'AstAddRuins') != -1) InterfaceState('RuinsTalk', 'AstAddRuins', -1);",
              "                }",
              "                //Открываем доступ к КБ",
              "                if(~ShipFindCustomShipInfoByType(Player(), 'DesignDepartment_DDBlock'))",
              "                {",
              "                    ShipDeleteCustomShipInfo(Player(), 'DesignDepartment_DDBlock');",
              "                }",
              "",
              "                tstr1 = Format(CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.DDGreetings') '<Name'+'>', Name(cur_ruin));",
              "                check = GetData(0, cur_ruin);",
              "                //Чертёж изучается",
              "                if(check == 1)",
              "                {",
              "                    tstr1 = tstr1 + \"<br>\" + Format(CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.DDGreetingsAddOnResearching'), '<EndDate'+'>', GameDateTxtByTurn(BlueprintInResearchTimer + 1));",
              "                }",
              "                //Чертёж изучен",
              "                else if(check == 2)",
              "                {",
              "                    tstr1 = tstr1 + \"<br>\" + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.DDGreetingsAddOnResearchDone');",
              "                    AddDialogInject('DDBlueprintAssemblyStart', '', CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.PlayerOnResearchDone'), 5, 0, 0);",
              "                }",
              "                //Предмет по чертежу собирается",
              "                else if(check == 3)",
              "                {",
              "                    tstr1 = tstr1 + \"<br>\" + Format(CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.DDGreetingsAddOnAssembling'), '<EndDate'+'>', GameDateTxtByTurn(BlueprintInAssemblyTimer + 1));",
              "                }",
              "                //Предмет по чертежу собран",
              "                else if(check == 4)",
              "                {",
              "                    if(CT(BlueprintInWorkPath + 'ScriptDialogGet') == '')",
              "                    {",
              "                        tstr1 = tstr1 + \"<br>\" + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.DDAddGreetingsOnAssembleDone');",
              "                        SetData(0, 0, cur_ruin);",
              "                        cur_item = GetItemFromVault(BlueprintInWorkPath);",
              "                        if(ItemLevel(cur_item) < GalaxyTechLevel()) ItemLevel(cur_item,GalaxyTechLevel());",
              "                        AddItemToStorage(cur_ruin, cur_item);",
              "                        Sound('Sound.QuestOk');",
              "                    }",
              "                    else",
              "                    {",
              "                        tstr1 = tstr1 + \"<br>\" + CT(BlueprintInWorkPath + 'ScriptDialogGetText');",
              "                        //InjectAnswer(CT(BlueprintInWorkPath + 'ScriptDialogGet'), CT(BlueprintInWorkPath + 'ScriptDialogGetAnswer'), 0, 'SetData(0, 0, cur_ruin);Sound(\\\\\\'Sound.QuestOk\\\\\\');');",
              "                        AddDialogInject(CT(BlueprintInWorkPath + 'ScriptDialogGet'), '', CT(BlueprintInWorkPath + 'ScriptDialogGetAnswer'), 10, 0, 0, 'SetData(0, 0, cur_ruin);Sound(\\\\\\'Sound.QuestOk\\\\\\');');",
              "                    }",
              "                }",
              "                //Сейчас чертежей в работе нет",
              "                else",
              "                {",
              "                    //Ищем у игрока в трюме подходящие для изучения чертежи",
              "                    check2 = 0;",
              "                    for(i = 0; i < ShipItems(Player()); i = i + 1)",
              "                    {",
              "                        cur_item = ShipItems(Player(), i);",
              "                        if(ItemType(cur_item) != t_UselessItem) continue;",
              "                        if(EquipmentImageName(cur_item) != 'DesignDepartment_Blueprint') continue;",
              "",
              "                        check2 = 1;",
              "                        break;",
              "                    }",
              "//                    if(!check2) AddDialogBlock(CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.PlayerBlueprintResearchStart'), 1);",
              "                    if(check2) AddDialogInject('DDBlueprintResearchStart', '', CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.PlayerBlueprintResearchStart'), 5);",
              "                }",
              "                AddDialogBlock('HideThisAnswer', 2);",
              "                AddDialogInject('Blocked', tstr1, 'HideThisAnswer', 100, 1);",
              "",
              "                //Реплика о возможности крутануть колесо удачи",
              "                tstr1 = CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.DDFortuneWheelOffer');",
              "                tstr2 = CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.PlayerAskFortuneWheel');",
              "                check2 = GetData(1, cur_ruin);",
              "                if(!check2)",
              "                {",
              "                    tstr1 = '';",
              "                    AddDialogBlock(tstr2, 1);",
              "                }",
              "                AddDialogInject('DDFortuneWheel', tstr1, tstr2, 2);",
              "",
              "//реплика заказ оборудки",
              "                tstr2 = CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.PlayerAskCreateEquipment');",
              "                AddDialogInject('DDCreateEquipment', '', tstr2, 3);",
              "",
              "//реплика переработки оборудки",
              "                tstr2 = CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentRecycle.Talks.PlayerAskRecycle');",
              "                AddDialogInject('DDRecycle', '', tstr2, 3);",
              "",
              "//реплика покупки ММ",
              "                tstr2 = CT('Script.Mod_ArtiDesignDepartment.BuyMM.PlayerSend');",
              "                AddDialogInject('DDBuyMM', '', tstr2, 3);",
              "",
              "//реплика о акссесуарах",
              "                tstr2 = CT('Script.Mod_ArtiDesignDepartment.Accessory.PlayerSend');",
              "                AddDialogInject('DD_Accessory', '', tstr2, 2);",
              "",
              "//реплика о КБ",
              "                tstr2 = CT('Script.Mod_ArtiDesignDepartment.AboutDD.PlayerSend');",
              "                AddDialogInject('AboutDD', '', tstr2, 1);",
              "",
              "                //Реплика для возможности апгрейда базы",
              "                if(RuinsAllowModernization(cur_ruin)) tstr1 = CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.PlayerAskDDImprove');",
              "                else tstr1 = CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.PlayerAskDDImproveLocked');",
              "                AddDialogInject('DDImprove', '', tstr1, 0);",
              "            }",
              "        }",
              "        //Если ещё не куплена",
              "        else",
              "        {",
              "            //Блочим доступ к КБ",
              "            //Блокируем стандартные кнопки магазинов и инфоцентра, заменяем их на свои",
              "            InterfaceState('RuinsTalk', 'PR_Shop', 0);",
              "            InterfaceState('RuinsTalk', 'PR_ShopBlock', 1);",
              "            InterfaceState('RuinsTalk', 'PR_Goods', 0);",
              "            InterfaceState('RuinsTalk', 'PR_GoodsBlock', 1);",
              "            InterfaceState('RuinsTalk', 'PR_Info', 0);",
              "            InterfaceState('RuinsTalk', 'PR_InfoBlock', 1);",
              "            InterfaceState('RuinsTalk', 'PM_EndTurn', 0);",
              "            InterfaceState('RuinsTalk', 'RT_EndTurn_Block', 1);",
              "            //Выключаем панель Ассистента",
              "            if(findsubstr(CurrentMods(-1), 'OtherMods\\Assistant') > -1)",
              "            {",
              "                if(InterfaceState('RuinsTalk', 'AstAddRuins') != 0) InterfaceState('RuinsTalk', 'AstAddRuins', 0);",
              "            }",
              "            else",
              "            {",
              "                if(InterfaceState('RuinsTalk', 'AstAddRuins') != -1) InterfaceState('RuinsTalk', 'AstAddRuins', -1);",
              "            }",
              "",
              "            if(ShipFindCustomShipInfoByType(Player(), 'DesignDepartment_DDBlock') == -1)",
              "            {",
              "                ShipAddCustomShipInfo(Player(), 'DesignDepartment_DDBlock', 'NoShow');",
              "            }",
              "",
              "            tstr1 = Format(CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.DDGreetingsNoCard') '<Name'+'>', Name(cur_ruin));",
              "            AddDialogBlock('HideThisAnswer', 2);",
              "            AddDialogInject('Blocked', tstr1, 'HideThisAnswer', 100, 1);",
              "",
              "            AddDialogInject('DDMemberCardBuy', '', CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.PlayerAskBuyCard'), 5, 1);",
              "        }",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  190,
          "Pos.y":  160,
          "Parent":  -1,
          "#":  41,
          "Code.Type":  "Init",
          "Code":          
          [
              "function FindHullSerieByNameInCfg(str cfg_name)",
              "{",
              "    for(int i = 0; i < SeriesCount(); i = i + 1)",
              "    {",
              "        if(SeriesNumInCfg(i) == cfg_name)",
              "        {",
              "            result = i;",
              "            exit;",
              "        }",
              "    }",
              "    result = -1;",
              "}",
              "",
              "//Функция для исправления перевеса корабля (если он есть): расширяет вместимость корпуса, повышает HP до максимума",
              "function FixOverweight(ship)",
              "{",
              "    ShipCalcParam(ship);",
              "    int space = ShipFreeSpace(ship);",
              "    if(space < 0)",
              "    {",
              "        dword hull = ShipItems(ship, 0);",
              "        ItemSize(hull, ItemSize(hull) + abs(space) + Rnd(1, 3));",
              "        HullHP(hull, ItemSize(hull));",
              "        ShipCalcParam(ship);",
              "    }",
              "}",
              "",
              "function CreateHullFromBlockInLang(str block_path, dword hull)",
              "{",
              "    int race;",
              "    int tint;",
              "    str tstr = CT(block_path + 'Race');",
              "    if(tstr == 'Any')",
              "    {",
              "        race = Rnd(0, 7);",
              "    }",
              "    else",
              "    {",
              "        tint = BuildRaceSetFromString(CT(block_path + 'Race'));",
              "        race = Rnd(0, 7);",
              "        while(!(tint & (1 << race))) race = Rnd(0, 7);",
              "    }",
              "    //Проверка на серию для доминаторской расы",
              "    if(race == 5)",
              "    {",
              "        int serie;",
              "        if((tint & 256+512+1024))",
              "        {",
              "            serie = Rnd(8, 10);",
              "            while(!(tint & (1 << serie))) serie = Rnd(8, 10);",
              "            serie = serie - 8;",
              "        }",
              "    }",
              "    int tech_level = GTL;",
              "    tstr = CT(block_path + 'TechLevel');",
              "    if(tstr != 'Current') tech_level = tstr;",
              "",
              "    str item_type = CT(block_path + 'Type');",
              "    int hull_serie = -1;",
              "    tstr = CT(block_path + 'Serie');",
              "    if(tstr != 'None')",
              "    {",
              "        hull_serie = FindHullSerieByNameInCfg(GetParFromString(tstr, ',', Rnd(1, ParsCountFromString(tstr, ',')) - 1, 1));",
              "    }",
              "",
              "    //Если в качестве второго аргумента уже был передан готовый корпус, значит, речь идёт про корпус станции",
              "    if(!hull) hull = CreateHull(int(CT(block_path + 'HullType')), Rnd(400, 800), tech_level, race, hull_serie, CT(block_path + 'PirateMade'));",
              "    else ItemOwner(hull, race);",
              "    if(race == 5) ItemSubrace(hull, serie);",
              "",
              "    tstr = CT(block_path + 'HullBridge');",
              "    if(int(tstr))",
              "    {",
              "        CapitalShipStats(hull, int(tstr));",
              "    }",
              "    tstr = CT(block_path + 'Size');",
              "    if(tstr != 'Base')",
              "    {",
              "        ItemSize(hull, int(tstr));",
              "        HullHP(hull, 'To100');",
              "    }",
              "    tstr = CT(block_path + 'Cost');",
              "    if(tstr != 'Base')",
              "    {",
              "        ItemCost(hull, int(tstr));",
              "    }",
              "    tstr = CT(block_path + 'CustomFaction');",
              "    if(tstr != 'None')",
              "    {",
              "        if(GetMainData('Data.Race.Emblem.2' + tstr) != '' || tstr == 'SubFactionFixedStanding')",
              "        {",
              "            EqCustomFaction(hull, tstr);",
              "        }",
              "    }",
              "",
              "    //Вешаем на предмет возможный акткод и юзкод (и заодно делаем его неопределённым скриптовым)",
              "    if(BlockExist(block_path + 'ScriptItemActCode')) str act_code = GenerateCodeStringFromBlock(block_path + 'ScriptItemActCode');",
              "    if(BlockExist(block_path + 'ScriptItemUseCode')) str use_code = GenerateCodeStringFromBlock(block_path + 'ScriptItemUseCode');",
              "    if(act_code != '' || use_code != '')",
              "    {",
              "        LinkItemToScript(hull);",
              "        tstr = CT(block_path + 'ScriptItemInitVars');",
              "        ScriptItemData(hull, 1, GetParFromString(tstr, ',', 0, 1));",
              "        ScriptItemData(hull, 2, GetParFromString(tstr, ',', 1, 1));",
              "        ScriptItemData(hull, 3, GetParFromString(tstr, ',', 2, 1));",
              "        ScriptItemTextData(hull, 1, GetParFromString(tstr, ',', 3, 1));",
              "        ScriptItemTextData(hull, 2, GetParFromString(tstr, ',', 4, 1));",
              "        ScriptItemTextData(hull, 3, GetParFromString(tstr, ',', 5, 1));",
              "",
              "        if(act_code != '') ItemOnActCode(hull, act_code);",
              "        if(use_code != '') ItemOnUseCode(hull, use_code);",
              "    }",
              "",
              "    tstr = CT(block_path + 'Armor');",
              "    if(tstr != 'Base')",
              "    {",
              "        SetEquipmentStats(hull, int(tstr), 0);",
              "    }",
              "",
              "    tstr = CT(block_path + 'WeaponSlots');",
              "    if(tstr != 'Base')",
              "    {",
              "        tint = FindBonusByNameInCfg('DesignDepartment_AddWeaponSlot');",
              "        while(GetEquipmentStats(hull, 1) < tstr) ItemExtraSpecialsAddByType(hull, tint);",
              "    }",
              "    tstr = CT(block_path + 'ArtefactSlots');",
              "    if(tstr != 'Base')",
              "    {",
              "        tint = FindBonusByNameInCfg('DesignDepartment_AddArtSlot');",
              "        while(GetEquipmentStats(hull, 2) < tstr) ItemExtraSpecialsAddByType(hull, tint);",
              "    }",
              "    tstr = CT(block_path + 'ForsageSlot');",
              "    if(tstr != 'Base')",
              "    {",
              "        tint = FindBonusByNameInCfg('DesignDepartment_AddForsageSlot');",
              "        while(GetEquipmentStats(hull, 8) < tstr) ItemExtraSpecialsAddByType(hull, tint);",
              "    }",
              "    tstr = CT(block_path + 'RadarSlot');",
              "    if(tstr != 'Base')",
              "    {",
              "        tint = FindBonusByNameInCfg('DesignDepartment_AddRadarSlot');",
              "        while(GetEquipmentStats(hull, 3) < tstr) ItemExtraSpecialsAddByType(hull, tint);",
              "    }",
              "    tstr = CT(block_path + 'ScannerSlot');",
              "    if(tstr != 'Base')",
              "    {",
              "        tint = FindBonusByNameInCfg('DesignDepartment_AddScannerSlot');",
              "        while(GetEquipmentStats(hull, 4) < tstr) ItemExtraSpecialsAddByType(hull, tint);",
              "    }",
              "    tstr = CT(block_path + 'RepairDroidSlot');",
              "    if(tstr != 'Base')",
              "    {",
              "        tint = FindBonusByNameInCfg('DesignDepartment_AddRepairDroidSlot');",
              "        while(GetEquipmentStats(hull, 5) < tstr) ItemExtraSpecialsAddByType(hull, tint);",
              "    }",
              "    tstr = CT(block_path + 'CargoHookSlot');",
              "    if(tstr != 'Base')",
              "    {",
              "        tint = FindBonusByNameInCfg('DesignDepartment_AddCargoHookSlot');",
              "        while(GetEquipmentStats(hull, 6) < tstr) ItemExtraSpecialsAddByType(hull, tint);",
              "    }",
              "    tstr = CT(block_path + 'DefGeneratorSlot');",
              "    if(tstr != 'Base')",
              "    {",
              "        tint = FindBonusByNameInCfg('DesignDepartment_AddDefGeneratorSlot');",
              "        while(GetEquipmentStats(hull, 7) < tstr) ItemExtraSpecialsAddByType(hull, tint);",
              "    }",
              "",
              "    //Вставляем ММ и акрины до выставления восприимчивости из чертежа",
              "    tstr = CT(block_path + 'Micromodule');",
              "    if(tstr != 'None')",
              "    {",
              "        tint = FindBonusByNameInCfg(GetParFromString(tstr, ',', Rnd(1, ParsCountFromString(tstr, ',')) - 1, 1));",
              "        if(~tint) ModuleToEquipment(tint, hull);",
              "    }",
              "    tstr = CT(block_path + 'Acryn');",
              "    if(tstr != 'None')",
              "    {",
              "        tint = FindBonusByNameInCfg(GetParFromString(tstr, ',', Rnd(1, ParsCountFromString(tstr, ',')) - 1, 1));",
              "        if(~tint) SpecialToEquipment(tint, hull);",
              "    }",
              "",
              "    int tint_t;",
              "    tstr = CT(block_path + 'SuspectibilityEnergy');",
              "    if(tstr != 'Base')",
              "    {",
              "        tint = FindBonusByNameInCfg('DesignDepartment_SuspectibilityEnergyPlus');",
              "        tint_t = FindBonusByNameInCfg('DesignDepartment_SuspectibilityEnergyMinus');",
              "        while(HullDamageSuspectibility(hull, 0) != tstr)",
              "        {",
              "            if(HullDamageSuspectibility(hull, 0) < tstr) ItemExtraSpecialsAddByType(hull, tint);",
              "            else ItemExtraSpecialsAddByType(hull, tint_t);",
              "        }",
              "    }",
              "    tstr = CT(block_path + 'SuspectibilitySplinter');",
              "    if(tstr != 'Base')",
              "    {",
              "        tint = FindBonusByNameInCfg('DesignDepartment_SuspectibilitySplinterPlus');",
              "        tint_t = FindBonusByNameInCfg('DesignDepartment_SuspectibilitySplinterMinus');",
              "        while(HullDamageSuspectibility(hull, 1) != tstr)",
              "        {",
              "            if(HullDamageSuspectibility(hull, 1) < tstr) ItemExtraSpecialsAddByType(hull, tint);",
              "            else ItemExtraSpecialsAddByType(hull, tint_t);",
              "        }",
              "    }",
              "    tstr = CT(block_path + 'SuspectibilityMissile');",
              "    if(tstr != 'Base')",
              "    {",
              "        tint = FindBonusByNameInCfg('DesignDepartment_SuspectibilityMissilePlus');",
              "        tint_t = FindBonusByNameInCfg('DesignDepartment_SuspectibilityMissileMinus');",
              "        while(HullDamageSuspectibility(hull, 2) != tstr)",
              "        {",
              "            if(HullDamageSuspectibility(hull, 2) < tstr) ItemExtraSpecialsAddByType(hull, tint);",
              "            else ItemExtraSpecialsAddByType(hull, tint_t);",
              "        }",
              "    }",
              "",
              "    result = hull;",
              "}",
              "",
              "function CreateWeaponFromBlockInLang(str block_path)",
              "{",
              "    dword gun;",
              "    int race;",
              "    int tint;",
              "    str tstr = CT(block_path + 'Race');",
              "    if(tstr == 'Any') race = Rnd(0, 7);",
              "    else",
              "    {",
              "        tint = BuildRaceSetFromString(CT(block_path + 'Race'));",
              "        race = Rnd(0, 7);",
              "        while(!(tint & (1 << race))) race = Rnd(0, 7);",
              "    }",
              "    //Проверка на серию для доминаторской расы",
              "    if(race == 5)",
              "    {",
              "        int serie;",
              "        if((tint & 256+512+1024))",
              "        {",
              "            serie = Rnd(8, 10);",
              "            while(!(tint & (1 << serie))) serie = Rnd(8, 10);",
              "            serie = serie - 8;",
              "        }",
              "    }",
              "    int tech_level = GTL;",
              "    tstr = CT(block_path + 'TechLevel');",
              "    if(tstr != 'Current') tech_level = tstr;",
              "",
              "    str item_type = CT(block_path + 'Type');",
              "    if(CT(block_path + 'Class') == 'Original') gun = CreateEquipment(GetValueFromScript('', item_type), Rnd(25, 45), tech_level, race);",
              "    else",
              "    {",
              "        if(CT('Items.Weapon.Name.' + item_type) != '') gun = CreateCustomWeapon(item_type, Rnd(25, 45), GTL, race);",
              "        //Если такой кастомной пушки среди подключённых модов",
              "        else",
              "        {",
              "            result = 0;",
              "            exit;",
              "        }",
              "    }",
              "    if(race == 5) ItemSubrace(gun, serie);",
              "",
              "    tstr = CT(block_path + 'Size');",
              "    if(tstr != 'Base')",
              "    {",
              "        ItemSize(gun, int(tstr));",
              "    }",
              "    tstr = CT(block_path + 'Cost');",
              "    if(tstr != 'Base')",
              "    {",
              "        ItemCost(gun, int(tstr));",
              "    }",
              "    tstr = CT(block_path + 'CustomFaction');",
              "    if(tstr != 'None')",
              "    {",
              "        if(GetMainData('Data.Race.Emblem.2' + tstr) != '' || tstr == 'SubFactionFixedStanding')",
              "        {",
              "            EqCustomFaction(gun, tstr);",
              "        }",
              "    }",
              "",
              "    tstr = CT(block_path + 'MaxDamage');",
              "    if(tstr != 'Base')",
              "    {",
              "        SetEquipmentStats(gun, int(tstr), 0);",
              "    }",
              "    tstr = CT(block_path + 'MinDamage');",
              "    if(tstr != 'Base')",
              "    {",
              "        SetEquipmentStats(gun, int(tstr), 1);",
              "    }",
              "    tstr = CT(block_path + 'Range');",
              "    if(tstr != 'Base')",
              "    {",
              "        SetEquipmentStats(gun, int(tstr), 2);",
              "    }",
              "",
              "    tstr = CT(block_path + 'Micromodule');",
              "    if(tstr != 'None')",
              "    {",
              "        tint = FindBonusByNameInCfg(GetParFromString(tstr, ',', Rnd(1, ParsCountFromString(tstr, ',')) - 1, 1));",
              "        if(~tint) ModuleToEquipment(tint, gun);",
              "    }",
              "    tstr = CT(block_path + 'Acryn');",
              "    if(tstr != 'None')",
              "    {",
              "        tint = FindBonusByNameInCfg(GetParFromString(tstr, ',', Rnd(1, ParsCountFromString(tstr, ',')) - 1, 1));",
              "        if(~tint) SpecialToEquipment(tint, gun);",
              "    }",
              "",
              "    //Вешаем на предмет возможный акткод и юзкод (и заодно делаем его неопределённым скриптовым)",
              "    if(BlockExist(block_path + 'ScriptItemActCode')) str act_code = GenerateCodeStringFromBlock(block_path + 'ScriptItemActCode');",
              "    if(BlockExist(block_path + 'ScriptItemUseCode')) str use_code = GenerateCodeStringFromBlock(block_path + 'ScriptItemUseCode');",
              "    if(act_code != '' || use_code != '')",
              "    {",
              "        LinkItemToScript(gun);",
              "        tstr = CT(block_path + 'ScriptItemInitVars');",
              "        ScriptItemData(gun, 1, GetParFromString(tstr, ',', 0, 1));",
              "        ScriptItemData(gun, 2, GetParFromString(tstr, ',', 1, 1));",
              "        ScriptItemData(gun, 3, GetParFromString(tstr, ',', 2, 1));",
              "        ScriptItemTextData(gun, 1, GetParFromString(tstr, ',', 3, 1));",
              "        ScriptItemTextData(gun, 2, GetParFromString(tstr, ',', 4, 1));",
              "        ScriptItemTextData(gun, 3, GetParFromString(tstr, ',', 5, 1));",
              "",
              "        if(act_code != '') ItemOnActCode(gun, act_code);",
              "        if(use_code != '') ItemOnUseCode(gun, use_code);",
              "    }",
              "",
              "    result = gun;",
              "}",
              "",
              "function CreateEquipmentFromBlockInLang(str block_path)",
              "{",
              "    dword item;",
              "    int race;",
              "    int tint;",
              "    str tstr = CT(block_path + 'Race');",
              "    if(tstr == 'Any') race = Rnd(0, 7);",
              "    else",
              "    {",
              "        tint = BuildRaceSetFromString(CT(block_path + 'Race'));",
              "        race = Rnd(0, 7);",
              "        while(!(tint & (1 << race))) race = Rnd(0, 7);",
              "    }",
              "    //Проверка на серию для доминаторской расы",
              "    if(race == 5)",
              "    {",
              "        int serie;",
              "        if((tint & 256+512+1024))",
              "        {",
              "            serie = Rnd(8, 10);",
              "            while(!(tint & (1 << serie))) serie = Rnd(8, 10);",
              "            serie = serie - 8;",
              "        }",
              "    }",
              "    int tech_level = GTL;",
              "    tstr = CT(block_path + 'TechLevel');",
              "    if(tstr != 'Current') tech_level = tstr;",
              "",
              "    int item_type = GetValueFromScript('', CT(block_path + 'Type'));",
              "    item = CreateEquipment(item_type, Rnd(25, 45), tech_level, race);",
              "    if(race == 5) ItemSubrace(item, serie);",
              "",
              "    tstr = CT(block_path + 'Size');",
              "    if(tstr != 'Base')",
              "    {",
              "        ItemSize(item, int(tstr));",
              "    }",
              "    tstr = CT(block_path + 'Cost');",
              "    if(tstr != 'Base')",
              "    {",
              "        ItemCost(item, int(tstr));",
              "    }",
              "    tstr = CT(block_path + 'CustomFaction');",
              "    if(tstr != 'None')",
              "    {",
              "        if(GetMainData('Data.Race.Emblem.2' + tstr) != '' || tstr == 'SubFactionFixedStanding')",
              "        {",
              "            EqCustomFaction(item, tstr);",
              "        }",
              "    }",
              "",
              "    if(item_type == t_Engine)",
              "    {",
              "        tstr = CT(block_path + 'Speed');",
              "        if(tstr != 'Base')",
              "        {",
              "            SetEquipmentStats(item, int(tstr), 0);",
              "        }",
              "        tstr = CT(block_path + 'Jump');",
              "        if(tstr != 'Base')",
              "        {",
              "            SetEquipmentStats(item, int(tstr), 1);",
              "        }",
              "    }",
              "    else if(item_type == t_FuelTanks)",
              "    {",
              "        tstr = CT(block_path + 'Capacity');",
              "        if(tstr != 'Base')",
              "        {",
              "            SetEquipmentStats(item, int(tstr), 0);",
              "        }",
              "    }",
              "    else if(item_type == t_Radar)",
              "    {",
              "        tstr = CT(block_path + 'Range');",
              "        if(tstr != 'Base')",
              "        {",
              "            SetEquipmentStats(item, int(tstr), 0);",
              "        }",
              "    }",
              "    else if(item_type == t_Scaner)",
              "    {",
              "        tstr = CT(block_path + 'Power');",
              "        if(tstr != 'Base')",
              "        {",
              "            SetEquipmentStats(item, int(tstr), 0);",
              "        }",
              "    }",
              "    else if(item_type == t_RepairRobot)",
              "    {",
              "        tstr = CT(block_path + 'Performance');",
              "        if(tstr != 'Base')",
              "        {",
              "            SetEquipmentStats(item, int(tstr), 0);",
              "        }",
              "    }",
              "    else if(item_type == t_CargoHook)",
              "    {",
              "        tstr = CT(block_path + 'Power');",
              "        if(tstr != 'Base')",
              "        {",
              "            SetEquipmentStats(item, int(tstr), 0);",
              "        }",
              "        tstr = CT(block_path + 'Range');",
              "        if(tstr != 'Base')",
              "        {",
              "            SetEquipmentStats(item, int(tstr), 1);",
              "        }",
              "        tstr = CT(block_path + 'SpeedFar');",
              "        if(tstr != 'Base')",
              "        {",
              "            SetEquipmentStats(item, int(tstr), 2);",
              "        }",
              "        tstr = CT(block_path + 'SpeedClose');",
              "        if(tstr != 'Base')",
              "        {",
              "            SetEquipmentStats(item, int(tstr), 3);",
              "        }",
              "    }",
              "    else if(item_type == t_DefGenerator)",
              "    {",
              "        tstr = CT(block_path + 'Power');",
              "        if(tstr != 'Base')",
              "        {",
              "            SetEquipmentStats(item, int(tstr), 0);",
              "        }",
              "    }",
              "    else",
              "    {",
              "        FreeItem(item);",
              "        exit;",
              "    }",
              "",
              "    tstr = CT(block_path + 'Micromodule');",
              "    if(tstr != 'None')",
              "    {",
              "        tint = FindBonusByNameInCfg(GetParFromString(tstr, ',', Rnd(1, ParsCountFromString(tstr, ',')) - 1, 1));",
              "        if(~tint) ModuleToEquipment(tint, item);",
              "    }",
              "    tstr = CT(block_path + 'Acryn');",
              "    if(tstr != 'None')",
              "    {",
              "        tint = FindBonusByNameInCfg(GetParFromString(tstr, ',', Rnd(1, ParsCountFromString(tstr, ',')) - 1, 1));",
              "        if(~tint) SpecialToEquipment(tint, item);",
              "    }",
              "",
              "    //Вешаем на предмет возможный акткод и юзкод (и заодно делаем его неопределённым скриптовым)",
              "    if(BlockExist(block_path + 'ScriptItemActCode')) str act_code = GenerateCodeStringFromBlock(block_path + 'ScriptItemActCode');",
              "    if(BlockExist(block_path + 'ScriptItemUseCode')) str use_code = GenerateCodeStringFromBlock(block_path + 'ScriptItemUseCode');",
              "    if(act_code != '' || use_code != '')",
              "    {",
              "        LinkItemToScript(item);",
              "        tstr = CT(block_path + 'ScriptItemInitVars');",
              "        ScriptItemData(item, 1, GetParFromString(tstr, ',', 0, 1));",
              "        ScriptItemData(item, 2, GetParFromString(tstr, ',', 1, 1));",
              "        ScriptItemData(item, 3, GetParFromString(tstr, ',', 2, 1));",
              "        ScriptItemTextData(item, 1, GetParFromString(tstr, ',', 3, 1));",
              "        ScriptItemTextData(item, 2, GetParFromString(tstr, ',', 4, 1));",
              "        ScriptItemTextData(item, 3, GetParFromString(tstr, ',', 5, 1));",
              "",
              "        if(act_code != '') ItemOnActCode(item, act_code);",
              "        if(use_code != '') ItemOnUseCode(item, use_code);",
              "    }",
              "",
              "    if(item_type == t_FuelTanks) ContainerFuel(item, GetEquipmentStats(item, 0));",
              "",
              "    result = item;",
              "}",
              "",
              "function CreateArtFromBlockInLang(str block_path)",
              "{",
              "    dword art;",
              "    int race;",
              "    int tint;",
              "    str tstr = CT(block_path + 'Race');",
              "    if(tstr == 'Any') race = Rnd(0, 7);",
              "    else",
              "    {",
              "        tint = BuildRaceSetFromString(CT(block_path + 'Race'));",
              "        race = Rnd(0, 7);",
              "        while(!(tint & (1 << race))) race = Rnd(0, 7);",
              "    }",
              "    //Проверка на серию для доминаторской расы",
              "    if(race == 5)",
              "    {",
              "        int serie;",
              "        if((tint & 256+512+1024))",
              "        {",
              "            serie = Rnd(8, 10);",
              "            while(!(tint & (1 << serie))) serie = Rnd(8, 10);",
              "            serie = serie - 8;",
              "        }",
              "    }",
              "",
              "    str art_type = CT(block_path + 'Type');",
              "    if(CT(block_path + 'Class') == 'Original') art = CreateArt(GetValueFromScript('', art_type), race);",
              "    else if(BlockExist('Artefacts.CustomArtefacts.' + CT(block_path + 'Type'))) art = CreateCustomArt(CT(block_path + 'Type'), CustomArtSizeCalc(CT('Artefacts.CustomArtefacts.' + art_type + '.Size')), CustomArtCostCalc(CT('Artefacts.CustomArtefacts.' + art_type + '.Cost')), race);",
              "    //Если кастомного артефакта данного типа не нашли",
              "    else",
              "    {",
              "        result = 0;",
              "        exit;",
              "    }",
              "    if(race == 5) ItemSubrace(art, serie);",
              "",
              "    tstr = CT(block_path + 'Size');",
              "    if(tstr != 'Base')",
              "    {",
              "        ItemSize(art, int(tstr));",
              "    }",
              "    tstr = CT(block_path + 'Cost');",
              "    if(tstr != 'Base')",
              "    {",
              "        ItemCost(art, int(tstr));",
              "    }",
              "    tstr = CT(block_path + 'CustomFaction');",
              "    if(tstr != 'None')",
              "    {",
              "        if(GetMainData('Data.Race.Emblem.2' + tstr) != '' || tstr == 'SubFactionFixedStanding')",
              "        {",
              "            EqCustomFaction(art, tstr);",
              "        }",
              "    }",
              "",
              "    result = art;",
              "}",
              "",
              "function GetItemsCountFromStr(str count_str)",
              "{",
              "    int items_count;",
              "    if(findsubstr(count_str, ':') == -1) items_count = count_str;",
              "    else items_count = Rnd(GetParFromString(count_str, ':', 0, 1), GetParFromString(count_str, ':', 1, 1));",
              "",
              "    result = items_count;",
              "}",
              "",
              "//Создаёт чертёж либо из конкретной вещи, либо, если в первом аргументе передан 0, из указанного номера",
              "function MakeBlueprint(dword item, int item_type, int blueprint_num)",
              "{",
              "    if(DesignDepartment_SpecItemsCountArray[0] >= CT('DesignDepartmentModList.EventsList.MaxBlueprintsInGalaxy'))",
              "    {",
              "        result = CreateQuestItem('Usl_64');",
              "        exit;",
              "    }",
              "",
              "    dword blueprint;",
              "    if(item)",
              "    {",
              "        item_type = ItemType(item);",
              "        blueprint_num = ItemExtraSpecialsCountByType(item, FindBonusByNameInCfg('DesignDepartment_BlueprintNum'));",
              "    }",
              "    if(blueprint_num <= 0) throw 'Blueprint number for MakeBlueprint function was not set.';",
              "",
              "    blueprint = CreateQuestItem('DesignDepartment_Blueprint');",
              "    ItemSize(blueprint, 1);",
              "    if(item_type >= t_Weapon1 && item_type <= t_CustomWeapon)",
              "    {",
              "        //Если попалось кастомное оружие, оно должно находится в списке подключённых модов",
              "        if(",
              "           CT('DesignDepartmentModList.BlueprintsList.Weapons.' + blueprint_num + '.Class') == 'Original' ||",
              "           CT('Items.Weapon.Name.' + CT('DesignDepartmentModList.BlueprintsList.Weapons.' + blueprint_num + '.Type')) != ''",
              "          )",
              "        {",
              "            UselessItemData(blueprint, 1, item_type);",
              "            UselessItemData(blueprint, 2, blueprint_num);",
              "            SetName(blueprint, CT('UselessItems.DesignDepartment_Blueprint.NameWeapon'));",
              "            UselessItemText(blueprint, CT('UselessItems.DesignDepartment_Blueprint.TextWeapon'));",
              "        }",
              "        else",
              "        {",
              "            result = 0;",
              "            exit;",
              "        }",
              "    }",
              "    else if(item_type == t_Hull)",
              "    {",
              "        UselessItemData(blueprint, 1, item_type);",
              "        UselessItemData(blueprint, 2, blueprint_num);",
              "        SetName(blueprint, CT('UselessItems.DesignDepartment_Blueprint.NameHull'));",
              "        UselessItemText(blueprint, CT('UselessItems.DesignDepartment_Blueprint.TextHull'));",
              "    }",
              "    else if(item_type == t_Engine)",
              "    {",
              "        UselessItemData(blueprint, 1, item_type);",
              "        UselessItemData(blueprint, 2, blueprint_num);",
              "        SetName(blueprint, CT('UselessItems.DesignDepartment_Blueprint.NameEngine'));",
              "        UselessItemText(blueprint, CT('UselessItems.DesignDepartment_Blueprint.TextEngine'));",
              "    }",
              "    else if(item_type == t_FuelTanks)",
              "    {",
              "        UselessItemData(blueprint, 1, item_type);",
              "        UselessItemData(blueprint, 2, blueprint_num);",
              "        SetName(blueprint, CT('UselessItems.DesignDepartment_Blueprint.NameFuelTank'));",
              "        UselessItemText(blueprint, CT('UselessItems.DesignDepartment_Blueprint.TextFuelTank'));",
              "    }",
              "    else if(item_type == t_Radar)",
              "    {",
              "        UselessItemData(blueprint, 1, item_type);",
              "        UselessItemData(blueprint, 2, blueprint_num);",
              "        SetName(blueprint, CT('UselessItems.DesignDepartment_Blueprint.NameRadar'));",
              "        UselessItemText(blueprint, CT('UselessItems.DesignDepartment_Blueprint.TextRadar'));",
              "    }",
              "    else if(item_type == t_Scaner)",
              "    {",
              "        UselessItemData(blueprint, 1, item_type);",
              "        UselessItemData(blueprint, 2, blueprint_num);",
              "        SetName(blueprint, CT('UselessItems.DesignDepartment_Blueprint.NameScanner'));",
              "        UselessItemText(blueprint, CT('UselessItems.DesignDepartment_Blueprint.TextScanner'));",
              "    }",
              "    else if(item_type == t_RepairRobot)",
              "    {",
              "        UselessItemData(blueprint, 1, item_type);",
              "        UselessItemData(blueprint, 2, blueprint_num);",
              "        SetName(blueprint, CT('UselessItems.DesignDepartment_Blueprint.NameRepairDroid'));",
              "        UselessItemText(blueprint, CT('UselessItems.DesignDepartment_Blueprint.TextRepairDroid'));",
              "    }",
              "    else if(item_type == t_CargoHook)",
              "    {",
              "        UselessItemData(blueprint, 1, item_type);",
              "        UselessItemData(blueprint, 2, blueprint_num);",
              "        SetName(blueprint, CT('UselessItems.DesignDepartment_Blueprint.NameCargoHook'));",
              "        UselessItemText(blueprint, CT('UselessItems.DesignDepartment_Blueprint.TextCargoHook'));",
              "    }",
              "    else if(item_type == t_DefGenerator)",
              "    {",
              "        UselessItemData(blueprint, 1, item_type);",
              "        UselessItemData(blueprint, 2, blueprint_num);",
              "        SetName(blueprint, CT('UselessItems.DesignDepartment_Blueprint.NameDefGenerator'));",
              "        UselessItemText(blueprint, CT('UselessItems.DesignDepartment_Blueprint.TextDefGenerator'));",
              "    }",
              "    else",
              "    {",
              "        throw 'Item type for MakeBlueprint function was not set.';",
              "    }",
              "",
              "    DesignDepartment_SpecItemsCountArray[0] = DesignDepartment_SpecItemsCountArray[0] + 1;",
              "    result = blueprint;",
              "}",
              "",
              "//Создаёт поддельный чертёж с имитацией указанного типа оборудования",
              "//Имеет маркер -1 в UselessItemData2 (у обычного чертежа там хранится номер вещи из списка)",
              "function MakeFakeBlueprint(str fake_type)",
              "{",
              "    if(DesignDepartment_SpecItemsCountArray[0] >= CT('DesignDepartmentModList.EventsList.MaxBlueprintsInGalaxy'))",
              "    {",
              "        result = CreateQuestItem('Usl_64');",
              "        exit;",
              "    }",
              "",
              "    dword fake_blueprint = CreateQuestItem('DesignDepartment_Blueprint');",
              "    ItemSize(fake_blueprint, 1);",
              "",
              "    if(fake_type == 'Equipment')",
              "    {",
              "        int rand = Rnd(1, 7);",
              "        if(rand == 1) fake_type = 'Engine';",
              "        else if(rand == 2) fake_type = 'FuelTank';",
              "        else if(rand == 3) fake_type = 'Radar';",
              "        else if(rand == 4) fake_type = 'Scanner';",
              "        else if(rand == 5) fake_type = 'RepairDroid';",
              "        else if(rand == 6) fake_type = 'CargoHook';",
              "        else fake_type = 'DefGenerator';",
              "    }",
              "",
              "    UselessItemData(fake_blueprint, 2, -1);",
              "    SetName(fake_blueprint, CT('UselessItems.DesignDepartment_Blueprint.Name' + fake_type));",
              "    UselessItemText(fake_blueprint, CT('UselessItems.DesignDepartment_Blueprint.Text' + fake_type));",
              "",
              "    //Фейковый чертёж также учитывается в общем числе созданных чертежей",
              "    DesignDepartment_SpecItemsCountArray[0] = DesignDepartment_SpecItemsCountArray[0] + 1;",
              "    result = fake_blueprint;",
              "}",
              "",
              "//Возвращает путь к разделу конкретного чертежа",
              "function GetBlueprintLangPath(dword blueprint)",
              "{",
              "    str path, name = Name(blueprint);",
              "    int item_type = UselessItemData(blueprint, 1);",
              "",
              "//костыль для баганых фейковых чертежей",
              "    if(item_type == 0)",
              "    {",
              "        if(findsubstr(name, CT('UselessItems.DesignDepartment_Blueprint.NameCargoHook')) > -1) item_type = t_CargoHook;",
              "        else if(findsubstr(name, CT('UselessItems.DesignDepartment_Blueprint.NameDefGenerator')) > -1) item_type = t_DefGenerator;",
              "        else if(findsubstr(name, CT('UselessItems.DesignDepartment_Blueprint.NameEngine')) > -1) item_type = t_Engine;",
              "        else if(findsubstr(name, CT('UselessItems.DesignDepartment_Blueprint.NameFuelTank')) > -1) item_type = t_FuelTanks;",
              "        else if(findsubstr(name, CT('UselessItems.DesignDepartment_Blueprint.NameHull')) > -1) item_type = t_Hull;",
              "        else if(findsubstr(name, CT('UselessItems.DesignDepartment_Blueprint.NameRadar')) > -1) item_type = t_Radar;",
              "        else if(findsubstr(name, CT('UselessItems.DesignDepartment_Blueprint.NameRepairDroid')) > -1) item_type = t_RepairRobot;",
              "        else if(findsubstr(name, CT('UselessItems.DesignDepartment_Blueprint.NameScanner')) > -1) item_type = t_Scaner;",
              "        else if(findsubstr(name, CT('UselessItems.DesignDepartment_Blueprint.NameWeapon')) > -1) item_type = t_Weapon1;",
              "",
              "        if(item_type != 0) UselessItemData(blueprint, 1, item_type);",
              "    }",
              "",
              "    int blueprint_num = UselessItemData(blueprint, 2);",
              "",
              "//костыль для баганых фейковых чертежей",
              "    if(blueprint_num == -1) blueprint_num = 1;",
              "",
              "    if(item_type >= t_Weapon1 && item_type <= t_CustomWeapon) path = 'DesignDepartmentModList.BlueprintsList.Weapons.' + blueprint_num + '.';",
              "    else if(item_type == t_Hull) path = 'DesignDepartmentModList.BlueprintsList.Hulls.' + blueprint_num + '.';",
              "    else if(item_type == t_Engine) path = 'DesignDepartmentModList.BlueprintsList.Engines.' + blueprint_num + '.';",
              "    else if(item_type == t_FuelTanks) path = 'DesignDepartmentModList.BlueprintsList.FuelTanks.' + blueprint_num + '.';",
              "    else if(item_type == t_Radar) path = 'DesignDepartmentModList.BlueprintsList.Radars.' + blueprint_num + '.';",
              "    else if(item_type == t_Scaner) path = 'DesignDepartmentModList.BlueprintsList.Scanners.' + blueprint_num + '.';",
              "    else if(item_type == t_RepairRobot) path = 'DesignDepartmentModList.BlueprintsList.RepairDroids.' + blueprint_num + '.';",
              "    else if(item_type == t_CargoHook) path = 'DesignDepartmentModList.BlueprintsList.CargoHooks.' + blueprint_num + '.';",
              "    else if(item_type == t_DefGenerator) path = 'DesignDepartmentModList.BlueprintsList.DefGenerators.' + blueprint_num + '.';",
              "    else throw 'Incorrect blueprint type was set.';",
              "",
              "    result = path;",
              "}",
              "",
              "function CreateNirgendAzurPiece(int size)",
              "{",
              "    if(DesignDepartment_SpecItemsCountArray[1] >= CT('DesignDepartmentModList.EventsList.MaxNirgendAzurPiecesInGalaxy'))",
              "    {",
              "        result = CreateQuestItem('Usl_64');",
              "        exit;",
              "    }",
              "",
              "    if(size == -1) size = Rnd(1, 5);",
              "    dword piece = CreateQuestItem('DesignDepartment_NirgendAzurPiece', None);",
              "    ItemSize(piece, size);",
              "    UselessItemData(piece, 1, size);",
              "    //Нужно, чтобы заоверрайдить дефолтный текст",
              "    UselessItemText(piece, CT('UselessItems.DesignDepartment_NirgendAzurPiece.Text'));",
              "",
              "    DesignDepartment_SpecItemsCountArray[1] = DesignDepartment_SpecItemsCountArray[1] + 1;",
              "    result = piece;",
              "}",
              "",
              "function GetExpendablesFromHoldAndStock(dword ship, str res_type, dword place, int to_remove)",
              "{",
              "    int quantity_hold;",
              "    int quantity_stock;",
              "    if(res_type == 'Nodes')",
              "    {",
              "        quantity_hold = GetNodesFromShip(ship);",
              "        if(to_remove)",
              "        {",
              "            GetNodesFromShip(ship, min(to_remove, quantity_hold));",
              "            to_remove = max(to_remove - quantity_hold, 0);",
              "        }",
              "        if(ship == Player())",
              "        {",
              "            quantity_stock = GetNodesFromStorage(place);",
              "            if(to_remove)",
              "            {",
              "                GetNodesFromStorage(place, min(to_remove, quantity_stock));",
              "                to_remove = max(to_remove - quantity_stock, 0);",
              "            }",
              "        }",
              "    }",
              "    else if(res_type == 'Food' ||",
              "            res_type == 'Medicine' ||",
              "            res_type == 'Technics' ||",
              "            res_type == 'Luxury' ||",
              "            res_type == 'Minerals' ||",
              "            res_type == 'Alcohol' ||",
              "            res_type == 'Arms' ||",
              "            res_type == 'Narcotics'",
              "      )",
              "    {",
              "        quantity_hold = GoodsCount(ship, GetValueFromScript('', 't_' + res_type));",
              "        if(to_remove)",
              "        {",
              "            ShipGoods(ship, GetValueFromScript('', 't_' + res_type), -min(to_remove, quantity_hold));",
              "            to_remove = max(to_remove - quantity_hold, 0);",
              "        }",
              "        if(ship == Player())",
              "        {",
              "            for(int i = 0; i < StorageItems(); i = i + 1)",
              "            {",
              "                if(StorageItemLocation(i) != place) continue;",
              "                dword item = StorageItems(i);",
              "                if(ItemType(item) != GetValueFromScript('', 't_' + res_type)) continue;",
              "                quantity_stock = quantity_stock + ItemSize(item);",
              "",
              "                if(to_remove)",
              "                {",
              "                    if(to_remove < ItemSize(item))",
              "                    {",
              "                        ItemSize(item, ItemSize(item) - to_remove);",
              "                        to_remove = 0;",
              "                    }",
              "                    else if(to_remove > ItemSize(item))",
              "                    {",
              "                        to_remove = to_remove - ItemSize(item);",
              "                        FreeItem(GetItemFromStorage(i));",
              "                    }",
              "                    else //if(to_remove == ItemSize(item))",
              "                    {",
              "                        FreeItem(GetItemFromStorage(i));",
              "                        to_remove = 0;",
              "                    }",
              "                }",
              "            }",
              "        }",
              "    }",
              "    if(res_type == 'NoneEquipment')",
              "    {",
              "        for(i = 1; i < ShipItems(ship); i = i + 1)",
              "        {",
              "            item = ShipItems(ship, i);",
              "            if(ItemIsInUse(item)) continue;",
              "            if(ItemIsInSet(item)) continue;",
              "            if(ItemType(item) < t_FuelTanks || ItemType(item) > t_CustomWeapon) continue;",
              "            if(ItemInScript(item))",
              "            {",
              "                int acryn = EqSpecial(item);",
              "                if(acryn == -1) continue;",
              "                if(!CT('MicroModuls.' + BonusNumInCfg(acryn) + '.ScriptItemIgnore')) continue;",
              "            }",
              "            if(ItemOwner(item) != None) continue;",
              "            quantity_hold = quantity_hold + ItemSize(item);",
              "",
              "            if(to_remove)",
              "            {",
              "                to_remove = max(to_remove - ItemSize(item), 0);",
              "                FreeItem(GetItemFromShip(ship, item));",
              "            }",
              "        }",
              "",
              "        if(ship == Player())",
              "        {",
              "            for(i = 0; i < StorageItems(); i = i + 1)",
              "            {",
              "                if(StorageItemLocation(i) != place) continue;",
              "                item = StorageItems(i);",
              "                if(ItemType(item) < t_FuelTanks || ItemType(item) > t_CustomWeapon) continue;",
              "                if(ItemInScript(item))",
              "                {",
              "                    acryn = EqSpecial(item);",
              "                    if(acryn == -1) continue;",
              "                    if(!CT('MicroModuls.' + BonusNumInCfg(acryn) + '.ScriptItemIgnore')) continue;",
              "                }",
              "                if(ItemOwner(item) != None) continue;",
              "                quantity_stock = quantity_stock + ItemSize(item);",
              "",
              "                if(to_remove)",
              "                {",
              "                    to_remove = max(to_remove - ItemSize(item), 0);",
              "                    FreeItem(GetItemFromStorage(i));",
              "                }",
              "            }",
              "        }",
              "    }",
              "    else",
              "    {",
              "        for(i = 1; i < ShipItems(ship); i = i + 1)",
              "        {",
              "            item = ShipItems(ship, i);",
              "            if(ItemType(item) != t_UselessCountableItem) continue;",
              "            if(EquipmentImageName(item) != res_type) continue;",
              "            quantity_hold = quantity_hold + ItemSize(item);",
              "            if(to_remove)",
              "            {",
              "                if(to_remove < ItemSize(item))",
              "                {",
              "                    ItemSize(item, ItemSize(item) - to_remove);",
              "                    to_remove = 0;",
              "                }",
              "                else if(to_remove > ItemSize(item))",
              "                {",
              "                    to_remove = to_remove - ItemSize(item);",
              "                    FreeItem(GetItemFromShip(ship, item));",
              "                }",
              "                else //if(to_remove == ItemSize(item))",
              "                {",
              "                    FreeItem(GetItemFromShip(ship, item));",
              "                    to_remove = 0;",
              "                }",
              "            }",
              "        }",
              "",
              "        if(ship == Player())",
              "        {",
              "            for(i = 0; i < StorageItems(); i = i + 1)",
              "            {",
              "                if(StorageItemLocation(i) != place) continue;",
              "                item = StorageItems(i);",
              "                if(ItemType(item) != t_UselessCountableItem) continue;",
              "                if(EquipmentImageName(item) != res_type) continue;",
              "                quantity_stock = quantity_stock + ItemSize(item);",
              "",
              "                if(to_remove)",
              "                {",
              "                    if(to_remove < ItemSize(item))",
              "                    {",
              "                        ItemSize(item, ItemSize(item) - to_remove);",
              "                        to_remove = 0;",
              "                    }",
              "                    else if(to_remove > ItemSize(item))",
              "                    {",
              "                        to_remove = to_remove - ItemSize(item);",
              "                        FreeItem(GetItemFromStorage(i));",
              "                    }",
              "                    else //if(to_remove == ItemSize(item))",
              "                    {",
              "                        FreeItem(GetItemFromStorage(i));",
              "                        to_remove = 0;",
              "                    }",
              "                }",
              "            }",
              "        }",
              "    }",
              "",
              "    result = quantity_hold + quantity_stock;",
              "}",
              "function NirgendAzurStuckOnPlayer(dword hull)",
              "{",
              "    int nirgend_max, nirgend_on_hull, nirgend_bon, nirgend_stuck;",
              "",
              "    nirgend_bon = FindBonusByNameInCfg('DesignDepartment_NirgendOnHull');",
              "    nirgend_on_hull = ItemExtraSpecialsCountByType(hull, nirgend_bon);",
              "    nirgend_on_hull = nirgend_on_hull / 100;",
              "    nirgend_max = PortionInDiapason(ItemSize(hull), 2000, 10000, 100, 500);",
              "    if(nirgend_on_hull >= nirgend_max) exit;",
              "",
              "    nirgend_stuck = PortionInDiapason(ItemSize(hull), 2000, 10000, 100, 1700);",
              "",
              "    if(ShipInNormalSpace(Player())) nirgend_stuck = nirgend_stuck / 20;",
              "    if(ShipInHyperSpace(Player())) nirgend_stuck = nirgend_stuck / 2;",
              "    if(ShipInHole(Player())) nirgend_stuck = nirgend_stuck * 5;",
              "",
              "    if(nirgend_on_hull + (nirgend_stuck / 100) > nirgend_max)",
              "    {",
              "        nirgend_stuck = 100 * (nirgend_max - nirgend_on_hull);",
              "    }",
              "    ItemExtraSpecialsAddByType(hull, nirgend_bon, nirgend_stuck);",
              "",
              "    //Ether(7, 'azure_on_hull', GameDateTxtByTurn(CurTurn())+' на корпусе: '+ItemExtraSpecialsCountByType(hull, nirgend_bon)+' добавленно: '+nirgend_stuck);",
              "}",
              "",
              "function DDActCode() {",
              "    if(ScriptItemActParam(t_OnStep)) exit;",
              "",
              "    if(!GetData(3,GroupToShip(DDGroup))) {",
              "        if(HullDamage(GroupToShip(DDGroup)) > 80) {",
              "            SetData(1,3,GroupToShip(DDGroup));",
              "        }",
              "    }",
              "    else {",
              "        if(HullDamage(GroupToShip(DDGroup)) < 30) {",
              "            SetData(0,3,GroupToShip(DDGroup));",
              "        }",
              "    }",
              "}",
              "",
              "//Спавним наёмника (всегда рейнджеры)",
              "function SpawnPatrol(dword planet, dword transfer_to)",
              "{",
              "    //Обеспечиваем случайную расу появившегося наёмника",
              "    int planet_owner = PlanetOwner(planet);",
              "    int planet_race = PlanetRace(planet);",
              "",
              "        //Определяем расу будущего наёмника",
              "        int new_planet_race = RndObject(Maloc, Gaal, planet);",
              "        PlanetOwner(planet, new_planet_race);",
              "        PlanetRace(planet, new_planet_race);",
              "        //Проверка на \"таухитовую\" заразу",
              "        if(CurTurn() < 666)",
              "        {",
              "            if(!(CurTurn() % 6))",
              "            {",
              "                if(new_planet_race == People)",
              "                {",
              "                    while(new_planet_race == People) new_planet_race = RndObject(0, 4, planet);",
              "                }",
              "            }",
              "        }",
              "",
              "        dword ship = BuyRanger(planet, 400 + 200 * GTL);",
              "        ShipType(ship,'Freelancer');",
              "        RangerExcludedFromRating(ship, 1);",
              "        ShipJoinToScript(ship, 'Mod_ArtiDesignDepartment.PatrolWait');",
              "",
              "        dword hull = ShipItems(ship, 0);",
              "        HullSeries(hull, -1);",
              "        ItemSize(hull, max(ItemSize(hull), 100 * GTL, 230)); //Ограничение, чтобы на поздних ГТУ не спавнились совсем уж утырки (акрин срежет 20%)",
              "        ItemSize(hull, ItemSize(hull) + RndObject(-10, 10, ship));",
              "        HullHP(hull, 'To100');",
              "        SpecialToEquipment(FindBonusByNameInCfg('DesignDepartment_CreateHull_Akrin_War_Shop10'), hull);",
              "        //EqCustomFaction(hull, 'SubFactionFreelancersFixedStanding');",
              "        Chameleon(ship);",
              "",
              "        ShipOwner(ship, ShipOwner(transfer_to));",
              "",
              "        str customF = CT('DesignDepartmentModList.DesignDepartmentStats.CustomFaction');",
              "        if(customF != 'None') ShipCustomFaction(ship, customF);",
              "        ShipStanding(ship, 5); //Выставляем фрилансеру полный нейтралитет в конфликте Коалиции и пиратов",
              "",
              "        //Вручную корректируем характер наёмника",
              "        ShipStatus(ship, 0, 15); //Торговец",
              "        ShipStatus(ship, 1, 42); //Пират",
              "        ShipStatus(ship, 2, 43); //Воин",
              "        //\"Внутренний\" неизменный характер - \"Воин\"",
              "        ShipSubType(ship, 2);",
              "",
              "        //Приставка имени организации наёмника зависит от расы пилота",
              "        //SetName(ship, PlayerHQMainArray['Main', 'OrganisationName'] + ' ' + ShipName(ship));",
              "",
              "    for(i = 1; i <= 5; i = i + 1) ShipRefit(ship,250*GalaxyTechLevel(),10000000);",
              "",
              "    //Обновляем переменную корпуса на случай, если наёмник сменил его при рефите",
              "    hull = ShipItems(ship, 0);",
              "    NoDropItem(hull, 1);",
              "",
              "    //Накидываем ботам халявного опыта (распределяют пускай сами)",
              "    ShipFreeExp(ship, ShipFreeExp(ship) + 600 * GTL);",
              "    SetShipExpByType(ship, GetShipExpByType(ship) + 600 * GTL, 0);",
              "    //Унижаем наёмникам лидерство, чтобы они не могли нанимать другие корабли",
              "    ShipSkill(ship, 'Leadership', 0);",
              "    ShipSpecialBonuses(ship, bonSkill6, -30);",
              "",
              "    PlanetOwner(planet, planet_owner);",
              "    PlanetRace(planet, planet_race);",
              "",
              "    TransferShip(ship, transfer_to);",
              "",
              "    //Также проводим дополнительный рефит, но уже из ЦН",
              "    for(i = 1; i <= 3; i = i + 1) ShipRefit(ship);",
              "",
              "    dword radar = ShipEqInSlot(ship, t_Radar);",
              "    if(!radar) //Если тупой рейнджер установил себе всего одну пушку",
              "    {",
              "        //Выдаём ему лезку, ракетомёт или третон",
              "        radar = CreateEquipment(t_Radar, RndObject(25, 50, ship), PlanetInventionLevel(planet, 7), new_planet_race);",
              "        AddItemToShip(ship, radar);",
              "        ItemIsInUse(radar, ship, 1);",
              "    }",
              "",
              "    dword gun = ShipWeapon(ship, 1);",
              "    if(gun) //Если рейнджер решил не ставить пушки, ну а почему бы и нет",
              "    {",
              "        if(ItemType(gun) == t_Weapon1) //Если тупой рейнджер снова экипировался промлазером",
              "        {",
              "            FreeItem(GetItemFromShip(ship, gun));",
              "            //Выдаём ему вместо него лезку, ракетомёт или третон",
              "            gun = CreateEquipment(GetValueFromScript('', 't_Weapon' + RndObject(3, 5, ship)), RndObject(25, 50, ship), PlanetInventionLevel(planet, 7), new_planet_race);",
              "            AddItemToShip(ship, gun);",
              "        }",
              "    }",
              "    gun = ShipWeapon(ship, 2);",
              "    if(!gun) //Если тупой рейнджер установил себе всего одну пушку",
              "    {",
              "        //Выдаём ему лезку, ракетомёт или третон",
              "        gun = CreateEquipment(GetValueFromScript('', 't_Weapon' + RndObject(3, 5, ship)), RndObject(25, 50, ship), PlanetInventionLevel(planet, 7), new_planet_race);",
              "        AddItemToShip(ship, gun);",
              "    }",
              "",
              "    ShipImproveItems(ship, RndObject(1, 3, ship));",
              "",
              "    ArrangeItems(ship);",
              "",
              "    result = ship;",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  46,
          "#":  53,
          "Code.Type":  "Turn",
          "Code":          
          [
              "cost = CT('DesignDepartmentModList.DesignDepartmentStats.MemberCardBuy');",
              "tstr1 = '</color>' + Format(CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.DDCardCost'), '<Cost' + '>', cost, '<MonthlyCost' + '>', CT('DesignDepartmentModList.DesignDepartmentStats.MemberCardPay'), '<PayPeriod' + '>', CT('DesignDepartmentModList.DesignDepartmentStats.MemberCardPayDate'));",
              "tstr2 = '</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.PlayerBuyCardYes');",
              "tstr3 = '</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.PlayerBuyCardNo');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  50,
          "#":  54,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tint1 = CurTurn() + CT('DesignDepartmentModList.DesignDepartmentStats.MemberCardPayDate');",
              "ShipAddCustomShipInfo(Player(), 'DesignDepartment_DDMemberCard', Format(CT('ShipInfo.AddInfo.CustomInfos.DesignDepartment_DDMemberCard.Description'), '<PayDate' + '>', GameDateTxtByTurn(tint1), '255,240,100'), tint1);",
              "tstr1 = '</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.DDGreetingsCardBought');",
              "//ShipMoney(Player(), ShipMoney(Player()) - cost); //Типа деньги не снимают, а просто проверяют их наличие",
              "Sound('Sound.DelMsg');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  58,
          "#":  59,
          "Code.Type":  "Turn",
          "Code":          
          [
              "check2 = GetData(1, cur_ruin);",
              "cost = CT('DesignDepartmentModList.FortuneWheelWinsList.NirgendAzurSpinCost');",
              "if(CT('DesignDepartmentModList.TestWheel') == 1) cost = 0;",
              "tint1 = GetExpendablesFromHoldAndStock(Player(), 'DesignDepartment_NirgendAzur', cur_ruin, 0);",
              "tint2 = 1;",
              "tstr1 = '</color>' + Format(CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.DDFortuneWheel'), '<Cost' + '>', cost, '<SpinsLeft' + '>', check2);",
              "tstr2 = '</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.PlayerAskHowToFindNirgendAzur');",
              "tstr3 = '</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.PlayerFortuneWheelYes');",
              "tstr4 = '</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.PlayerFortuneWheelNo');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  66,
          "#":  67,
          "Code.Type":  "Turn",
          "Code":          
          [
              "check2 = check2 - 1;",
              "if(cost>0)",
              "    {",
              "    GetExpendablesFromHoldAndStock(Player(), 'DesignDepartment_NirgendAzur', cur_ruin, cost);",
              "    SetData(check2, 1, cur_ruin);",
              "    }",
              "win_text = '</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.DDFortuneWheelWin') + SpinFortuneWheel();",
              "if(check2) win_text = win_text + \"<br>\" + Format(CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.DDFortuneWheelSpinsLeft'), '<SpinsLeft' + '>', check2);",
              "else win_text = win_text + \"<br>\" + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.DDFortuneWheelNoMoreSpins');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  70,
          "#":  71,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tstr1 = '</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.DDBlueprintChoose');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  76,
          "#":  78,
          "Code.Type":  "Turn",
          "Code":          
          [
              "cost = CT('DesignDepartmentModList.DesignDepartmentStats.DesignDepartmentImproveCost');",
              "tstr1 = '</color>' + Format(CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.DDImprove'), '<Cost' + '>', cost);",
              "tstr2 = '</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.PlayerDDImproveYes');",
              "tstr3 = '</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.PlayerDDImproveNo');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  77,
          "#":  79,
          "Code.Type":  "Turn",
          "Code":          
          [
              "FormChange('Ship', cur_ruin);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  84,
          "#":  87,
          "Code.Type":  "Turn",
          "Code":          
          [
              "RuinsAllowModernization(cur_ruin, 1);",
              "tstr1 = '</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.DDImproveDone');",
              "ShipMoney(Player(), ShipMoney(Player()) - cost);",
              "Sound('Sound.Buy');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  72,
          "#":  90,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Ищем у игрока в трюме подходящие для изучения чертежи",
              "for(i = 0; i < ShipItems(Player()); i = i + 1)",
              "{",
              "    cur_item = ShipItems(Player(), i);",
              "    if(ItemType(cur_item) != t_UselessItem) continue;",
              "    if(EquipmentImageName(cur_item) != 'DesignDepartment_Blueprint') continue;",
              "",
              "    InjectAnswer('DDBlueprintResearchChoose', Format(Name(cur_item), '<color=0,255,0' + '>', '<color=0,125,0' + '>'), cur_item);",
              "}",
              "DAnswer('restart~' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.PlayerBlueprintChooseNo'));"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  91,
          "#":  92,
          "Code.Type":  "Turn",
          "Code":          
          [
              "check2 = 0;",
              "tstr1 = GetBlueprintLangPath(GAnswerData);",
              "if(UselessItemData(GAnswerData, 3) == 1 || !CT(tstr1 + 'Expenses.ResearchingTime'))",
              "{",
              "    check2 = 1;",
              "}",
              "else if(GetVariableType(ResearchedBlueprintsArray[0]))",
              "{",
              "    //Ищем текущий чертёж в списке уже исследованных",
              "    for(i = 0; i < ArrayDim(ResearchedBlueprintsArray); i = i + 1)",
              "    {",
              "        if(ResearchedBlueprintsArray[i] == tstr1)",
              "        {",
              "            check2 = 1;",
              "            break;",
              "        }",
              "    }",
              "}",
              "",
              "//Если чертёж был выигран в колесе, либо уже ранее изучен (либо имеет нулевое время изучения в Lang), то сразу переводим диалог на сборку",
              "if(check2)",
              "{",
              "    check2 = -1;",
              "}",
              "//Если это просто обычный ещё неисследованный чертёж",
              "else if(~UselessItemData(GAnswerData, 2))",
              "{",
              "    tint1 = CT(tstr1 + 'Expenses.ResearchingTime');",
              "}",
              "//Если чертёж фейковый",
              "else",
              "{",
              "    tint1 = Rnd(1, 3);",
              "    if(tint1 == 1) tint1 = 30;",
              "    else if(tint1 == 2) tint1 = 75;",
              "    else tint1 = 120;",
              "}",
              "",
              "if(~check2)",
              "{",
              "    tint1 = CurTurn() + tint1;",
              "    tstr1 = '</color>' + Format(CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.DDBlueprintStartResearch'), '<EndDate' + '>', GameDateTxtByTurn(tint1 + 1));",
              "    tstr2 = '</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.PlayerBlueprintStartResearchYes');",
              "    tstr3 = '</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.PlayerBlueprintStartResearchNo');",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  97,
          "#":  100,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(~UselessItemData(GAnswerData, 2))",
              "{",
              "    BlueprintInWorkPath = GetBlueprintLangPath(GAnswerData);",
              "    //Запоминаем изученный чертёж, чтобы не пришлось изучать его повторно",
              "    if(ArrayDim(ResearchedBlueprintsArray) < 2) ResearchedBlueprintsArray[0] = BlueprintInWorkPath;",
              "    else ArrayAdd(ResearchedBlueprintsArray, BlueprintInWorkPath);",
              "}",
              "//Если чертёж оказался фейковым",
              "else BlueprintInWorkPath = 'FakeBlueprint';",
              "BlueprintInResearchTimer = tint1;",
              "SetData(1, 0, cur_ruin); //Ставим маркер, что исследование чертежа началось",
              "FreeItem(GetItemFromShip(Player(), GAnswerData));",
              "CustomEther('DesDep_CustomEther', 7, '', Format(CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentNotifications.ItemInResearchReminder'), '<EndDate' + '>', GameDateTxtByTurn(BlueprintInResearchTimer + 1), '255,240,100'));",
              "Sound('Sound.Scan');",
              "tstr1 = '</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.DDBlueprintStartResearchDone');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  107,
          "#":  108,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(GAnswerData) BlueprintInWorkPath = GetBlueprintLangPath(GAnswerData); //На случай, если игрок хочет собрать предмет по выигранному чертежу",
              "",
              "if(CT(BlueprintInWorkPath + 'ScriptDialogGet') != '')",
              "{",
              "    tstr1 = CT(BlueprintInWorkPath + 'ScriptDialogGetDescription');",
              "}",
              "else",
              "{",
              "    //Заранее создаём по чертежу предмет",
              "    cur_item = GetItemFromVault(BlueprintInWorkPath); //На случай, если игрок обращается сюда повторно",
              "    if(!cur_item)",
              "    {",
              "        tstr1 = GetParFromString(BlueprintInWorkPath, '.', 2, 0);",
              "        if(tstr1 == 'Weapons') cur_item = CreateWeaponFromBlockInLang(BlueprintInWorkPath);",
              "        else if(tstr1 == 'Hulls') cur_item = CreateHullFromBlockInLang(BlueprintInWorkPath, 0);",
              "        else cur_item = CreateEquipmentFromBlockInLang(BlueprintInWorkPath);",
              "        PutItemInVault(BlueprintInWorkPath, cur_item);",
              "    }",
              "    //Суть изъятия предмета из хранилища была в том, чтобы получить на него указатель",
              "    else PutItemInVault(BlueprintInWorkPath, cur_item);",
              "",
              "    //Выписываем название и размер предмета",
              "    tstr1 = '<color=255,240,100>' + Name(cur_item) + ' [<color=0,255,0>' + ItemSize(cur_item) + '</color>]</color>' + \"<br>\";",
              "",
              "    //Выписываем ТУ предмета (для оружия здесь же указывается его тип)",
              "    tint1 = ItemType(cur_item);",
              "    if(tint1 >= t_Weapon1)",
              "    {",
              "        tint2 = ItemLevel(cur_item);",
              "        if(tint2 >= 8) tstr2 = 'H';",
              "        else if(tint2 == 7) tstr2 = 'G';",
              "        else if(tint2 == 6) tstr2 = 'F';",
              "        else if(tint2 == 5) tstr2 = 'E';",
              "        else if(tint2 == 4) tstr2 = 'D';",
              "        else if(tint2 == 3) tstr2 = 'C';",
              "        else if(tint2 == 2) tstr2 = 'B';",
              "        else if(tint2 <= 1) tstr2 = 'A';",
              "",
              "        if(GetEquipmentStats(cur_item, 3) == 0) tstr1 = tstr1 + CT('FormInfo.ISType') + ' <color=255,240,100>' + CT('FormInfo.Equipment.EnergyType') + '</color>' + ' <color=255,240,100>(' + tstr2 + ')</color>' + \"<br>\";",
              "        else if(GetEquipmentStats(cur_item, 3) == 1) tstr1 = tstr1 + CT('FormInfo.ISType') + ' <color=255,240,100>' + CT('FormInfo.Equipment.SplinterType') + '</color>' + ' <color=255,240,100>(' + tstr2 + ')</color>' + \"<br>\";",
              "        else tstr1 = tstr1 + CT('FormInfo.ISType') + ' <color=255,240,100>' + CT('FormInfo.Equipment.MissileType') + '</color>' + ' <color=255,240,100>(' + tstr2 + ')</color>' + \"<br>\";",
              "    }",
              "    else tstr1 = tstr1 + DeleteTags(CT('FormInfo.Equipment.Tech')) + '<color=255,240,100>' + ItemLevel(cur_item) + '</color>' + \"<br>\";",
              "",
              "    //Выписываем модификацию оружия (если искали оружие и если модификация есть)",
              "    if(tint1 >= t_Weapon1)",
              "    {",
              "        tint2 = EqSpecial(cur_item);",
              "        if(~tint2)",
              "        {",
              "            tstr1 = tstr1 + CT('Items.Weapon.WSpecial') + ' <color=255,240,100>' + BonusName(tint2) + '</color>' + \"<br>\";",
              "        }",
              "    }",
              "",
              "    //Выписываем статы предмета",
              "    if(tint1 >= t_Weapon1)",
              "    {",
              "        tstr1 = tstr1 + Format(DeleteTags(CT('FormInfo.Equipment.Damage')), ' -', GetEquipmentStats(cur_item, ' <MinDamage' + '><color=248,252,216>-</color><' + 'MaxDamage><' + 'Bonus>')) + ', ' + Format(DeleteTags(CT('FormInfo.Equipment.Radius')), ' ', GetEquipmentStats(cur_item, ' <Radius' + '>'));",
              "        //Для ракетного оружия также добавляем максимальный боезапас",
              "        if(GetEquipmentStats(cur_item, 3) == 2) tstr1 = tstr1 + ', ' + Format(CT('FormInfo.Equipment.MaxAmmo'), '#MaxCount#', GetEquipmentStats(cur_item, '<MaxCount' + '>')) + \"<br>\";",
              "        else tstr1 = tstr1 + \"<br>\";",
              "    }",
              "    else if(tint1 == t_Hull)",
              "    {",
              "        tint2 = HullSeries(cur_item);",
              "        if(~tint2) tstr1 = tstr1 + Format(DeleteTags(CT('FormInfo.Equipment.Series')), ' ', ' ' + CT('HullType.' + SeriesNumInCfg(tint2) + '.Name')) + \"<br>\";",
              "        tstr1 = tstr1 + Format(CT('FormInfo.Equipment.SusceptibilitySearch'), '#1#', GetEquipmentStats(cur_item, '<FragilityE' + '>'), '#2#', GetEquipmentStats(cur_item, '<FragilityS' + '>'), '#3#', GetEquipmentStats(cur_item, '<FragilityM' + '>')) + \"<br>\";",
              "        tstr1 = tstr1 + Format(DeleteTags(CT('FormInfo.Equipment.Protect')), ' ', GetEquipmentStats(cur_item, ' <HitProtect' + '>')) + \"<br>\";",
              "    }",
              "    else if(tint1 == t_Engine)",
              "    {",
              "        tstr1 = tstr1 + Format(DeleteTags(CT('FormInfo.Equipment.Speed')), ' ', GetEquipmentStats(cur_item, ' <Speed' + '>')) + ', ' + Format(DeleteTags(CT('FormInfo.Equipment.Jump')), ' ', GetEquipmentStats(cur_item, ' <Parsec' + '>')) + \"<br>\";",
              "    }",
              "    else if(tint1 == t_FuelTanks)",
              "    {",
              "        tstr1 = tstr1 + Format(DeleteTags(CT('FormInfo.Equipment.Fuel')), ' ', GetEquipmentStats(cur_item, ' <Capacity' + '>')) + \"<br>\";",
              "    }",
              "    else if(tint1 == t_Radar)",
              "    {",
              "        tstr1 = tstr1 + Format(DeleteTags(CT('FormInfo.Equipment.Radar')), ' ', GetEquipmentStats(cur_item, ' <Radius' + '>')) + \"<br>\";",
              "    }",
              "    else if(tint1 == t_Scaner)",
              "    {",
              "        tstr1 = tstr1 + Format(DeleteTags(CT('FormInfo.Equipment.Scaner')), ' ', GetEquipmentStats(cur_item, ' <Percent' + '>')) + \"<br>\";",
              "    }",
              "    else if(tint1 == t_RepairRobot)",
              "    {",
              "        tstr1 = tstr1 + Format(DeleteTags(CT('FormInfo.Equipment.Droid')), ' ', GetEquipmentStats(cur_item, ' <RecoverHitPoints' + '>')) + \"<br>\";",
              "    }",
              "    else if(tint1 == t_CargoHook)",
              "    {",
              "        tstr1 = tstr1 + Format(DeleteTags(CT('FormInfo.Equipment.Hook')), ' ', GetEquipmentStats(cur_item, ' <PickUpSize' + '>')) + ', ' + Format(DeleteTags(CT('FormInfo.Equipment.HookRadius')), ' ', GetEquipmentStats(cur_item, ' <Radius' + '>')) + ', ' + Format(DeleteTags(CT('FormInfo.Equipment.HookSpeed')), ' -', GetEquipmentStats(cur_item, ' <SpeedMin' + '><color=248,252,216>-</color><SpeedMax' + '>')) + \"<br>\";",
              "    }",
              "    else if(tint1 == t_DefGenerator)",
              "    {",
              "        tstr1 = tstr1 + Format(DeleteTags(CT('FormInfo.Equipment.Defend')), ' ', GetEquipmentStats(cur_item, ' <Percent' + '>')) + \"<br>\";",
              "    }",
              "",
              "    if(tint1 != t_Hull)",
              "    {",
              "        //Выписываем надёжность предмета",
              "        tflt1 = ItemFragility(cur_item);",
              "        tflt2 = 0.60;",
              "        tflt3 = 5.00;",
              "        tint2 = 0;",
              "        for(i = 0; i <= 6; i = i + 1)",
              "        {",
              "            if(i <= 3) tflt2 = tflt2 + 0.10;",
              "            else tflt2 = tflt2 + 0.20;",
              "            if(abs(tflt1 - tflt2) < tflt3)",
              "            {",
              "                tflt3 = abs(tflt1 - tflt2);",
              "                tint2 = i;",
              "            }",
              "        }",
              "        tstr1 = tstr1 + CT('FormInfo.Equipment.Reliability') + '<color=255,240,100>' + CT('FormInfo.Equipment.QualityGrade' + tint2) + '</color>';",
              "    }",
              "}",
              "",
              "//Нормализуем некоторые цвета для дальнейшего отображения в диалоге",
              "tstr1 = Format(tstr1, '<color=0,255,0' + '>', '<color=0,125,0' + '>', '<color=255,167,84' + '>', '<color=255,95,18' + '>', '');",
              "",
              "//Готовим строку стоимости сборки",
              "tstr2 = '';",
              "check2 = 1;",
              "free(tarr1);",
              "tarr1 = newarray(1);",
              "for(i = 1; i <= 13; i = i + 1)",
              "{",
              "    tstr3 = '0,50,200';",
              "    if(i == 1)",
              "    {",
              "        tint1 = CT(BlueprintInWorkPath + 'Expenses.AssemblingCredits');",
              "        if(tint1)",
              "        {",
              "            if(tstr2 != '') tstr2 = tstr2 + \"<br>\";",
              "            if(ShipMoney(Player()) < tint1)",
              "            {",
              "                check2 = 0;",
              "                tstr3 = '255,0,0';",
              "            }",
              "            tstr2 = tstr2 + Format(CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.BlueprintCostCredits'), '<Cost' + '>', tint1, tstr3);",
              "        }",
              "        ArrayAdd(tarr1, tint1, 'Credits');",
              "    }",
              "    else if(i == 2)",
              "    {",
              "        tint1 = CT(BlueprintInWorkPath + 'Expenses.AssemblingNodes');",
              "        if(tint1)",
              "        {",
              "            if(tstr2 != '') tstr2 = tstr2 + \"<br>\";",
              "            if(GetExpendablesFromHoldAndStock(Player(), 'Nodes', cur_ruin, 0) < tint1)",
              "            {",
              "                check2 = 0;",
              "                tstr3 = '255,0,0';",
              "            }",
              "            tstr2 = tstr2 + Format(CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.BlueprintCostNodes'), '<Cost' + '>', tint1, tstr3);",
              "        }",
              "        ArrayAdd(tarr1, tint1, 'Nodes');",
              "    }",
              "    else if(i == 3)",
              "    {",
              "        tint1 = CT(BlueprintInWorkPath + 'Expenses.AssemblingProtoplasm');",
              "        if(tint1)",
              "        {",
              "            if(tstr2 != '') tstr2 = tstr2 + \"<br>\";",
              "            if(GetExpendablesFromHoldAndStock(Player(), 'KlissanProtoplasm', cur_ruin, 0) < tint1)",
              "            {",
              "                check2 = 0;",
              "                tstr3 = '255,0,0';",
              "            }",
              "            tstr2 = tstr2 + Format(CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.BlueprintCostProtoplasm'), '<Cost' + '>', tint1, tstr3);",
              "        }",
              "        ArrayAdd(tarr1, tint1, 'KlissanProtoplasm');",
              "    }",
              "    else if(i == 4)",
              "    {",
              "        tint1 = CT(BlueprintInWorkPath + 'Expenses.AssemblingNirgendAzur');",
              "        if(tint1)",
              "        {",
              "            if(tstr2 != '') tstr2 = tstr2 + \"<br>\";",
              "            if(GetExpendablesFromHoldAndStock(Player(), 'DesignDepartment_NirgendAzur', cur_ruin, 0) < tint1)",
              "            {",
              "                check2 = 0;",
              "                tstr3 = '255,0,0';",
              "            }",
              "            tstr2 = tstr2 + Format(CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.BlueprintCostNirgendAzur'), '<Cost' + '>', tint1, tstr3);",
              "        }",
              "        ArrayAdd(tarr1, tint1, 'NirgendAzur');",
              "    }",
              "    else if(i == 5)",
              "    {",
              "        tint1 = CT(BlueprintInWorkPath + 'Expenses.AssemblingNoneEquipment');",
              "        if(tint1)",
              "        {",
              "            if(tstr2 != '') tstr2 = tstr2 + \"<br>\";",
              "            //if(GetExpendablesFromHoldAndStock(Player(), 'NoneEquipment', cur_ruin, 0) < tint1)",
              "            if(GetExpendablesFromHoldAndStock(Player(), 'DesignDepartment_NoneItem', cur_ruin, 0) < tint1)",
              "            {",
              "                check2 = 0;",
              "                tstr3 = '255,0,0';",
              "            }",
              "            tstr2 = tstr2 + Format(CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.BlueprintCostNoneEquipment'), '<Cost' + '>', tint1, tstr3);",
              "        }",
              "        ArrayAdd(tarr1, tint1, 'DesignDepartment_NoneItem');",
              "    }",
              "    else if(i == 6)",
              "    {",
              "        tint1 = CT(BlueprintInWorkPath + 'Expenses.AssemblingFood');",
              "        if(tint1)",
              "        {",
              "            if(tstr2 != '') tstr2 = tstr2 + \"<br>\";",
              "            if(GetExpendablesFromHoldAndStock(Player(), 'Food', cur_ruin, 0) < tint1)",
              "            {",
              "                check2 = 0;",
              "                tstr3 = '255,0,0';",
              "            }",
              "            tstr2 = tstr2 + Format(CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.BlueprintCostFood'), '<Cost' + '>', tint1, tstr3);",
              "        }",
              "        ArrayAdd(tarr1, tint1, 'Food');",
              "    }",
              "    else if(i == 7)",
              "    {",
              "        tint1 = CT(BlueprintInWorkPath + 'Expenses.AssemblingMedicine');",
              "        if(tint1)",
              "        {",
              "            if(tstr2 != '') tstr2 = tstr2 + \"<br>\";",
              "            if(GetExpendablesFromHoldAndStock(Player(), 'Medicine', cur_ruin, 0) < tint1)",
              "            {",
              "                check2 = 0;",
              "                tstr3 = '255,0,0';",
              "            }",
              "            tstr2 = tstr2 + Format(CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.BlueprintCostMedicine'), '<Cost' + '>', tint1, tstr3);",
              "        }",
              "        ArrayAdd(tarr1, tint1, 'Medicine');",
              "    }",
              "    else if(i == 8)",
              "    {",
              "        tint1 = CT(BlueprintInWorkPath + 'Expenses.AssemblingTechnics');",
              "        if(tint1)",
              "        {",
              "            if(tstr2 != '') tstr2 = tstr2 + \"<br>\";",
              "            if(GetExpendablesFromHoldAndStock(Player(), 'Technics', cur_ruin, 0) < tint1)",
              "            {",
              "                check2 = 0;",
              "                tstr3 = '255,0,0';",
              "            }",
              "            tstr2 = tstr2 + Format(CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.BlueprintCostTechnics'), '<Cost' + '>', tint1, tstr3);",
              "        }",
              "        ArrayAdd(tarr1, tint1, 'Technics');",
              "    }",
              "    else if(i == 9)",
              "    {",
              "        tint1 = CT(BlueprintInWorkPath + 'Expenses.AssemblingLuxury');",
              "        if(tint1)",
              "        {",
              "            if(tstr2 != '') tstr2 = tstr2 + \"<br>\";",
              "            if(GetExpendablesFromHoldAndStock(Player(), 'Luxury', cur_ruin, 0) < tint1)",
              "            {",
              "                check2 = 0;",
              "                tstr3 = '255,0,0';",
              "            }",
              "            tstr2 = tstr2 + Format(CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.BlueprintCostLuxury'), '<Cost' + '>', tint1, tstr3);",
              "        }",
              "        ArrayAdd(tarr1, tint1, 'Luxury');",
              "    }",
              "    else if(i == 10)",
              "    {",
              "        tint1 = CT(BlueprintInWorkPath + 'Expenses.AssemblingMinerals');",
              "        if(tint1)",
              "        {",
              "            if(tstr2 != '') tstr2 = tstr2 + \"<br>\";",
              "            if(GetExpendablesFromHoldAndStock(Player(), 'Minerals', cur_ruin, 0) < tint1)",
              "            {",
              "                check2 = 0;",
              "                tstr3 = '255,0,0';",
              "            }",
              "            tstr2 = tstr2 + Format(CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.BlueprintCostMinerals'), '<Cost' + '>', tint1, tstr3);",
              "        }",
              "        ArrayAdd(tarr1, tint1, 'Minerals');",
              "    }",
              "    else if(i == 11)",
              "    {",
              "        tint1 = CT(BlueprintInWorkPath + 'Expenses.AssemblingAlcohol');",
              "        if(tint1)",
              "        {",
              "            if(tstr2 != '') tstr2 = tstr2 + \"<br>\";",
              "            if(GetExpendablesFromHoldAndStock(Player(), 'Alcohol', cur_ruin, 0) < tint1)",
              "            {",
              "                check2 = 0;",
              "                tstr3 = '255,0,0';",
              "            }",
              "            tstr2 = tstr2 + Format(CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.BlueprintCostAlcohol'), '<Cost' + '>', tint1, tstr3);",
              "        }",
              "        ArrayAdd(tarr1, tint1, 'Alcohol');",
              "    }",
              "    else if(i == 12)",
              "    {",
              "        tint1 = CT(BlueprintInWorkPath + 'Expenses.AssemblingArms');",
              "        if(tint1)",
              "        {",
              "            if(tstr2 != '') tstr2 = tstr2 + \"<br>\";",
              "            if(GetExpendablesFromHoldAndStock(Player(), 'Arms', cur_ruin, 0) < tint1)",
              "            {",
              "                check2 = 0;",
              "                tstr3 = '255,0,0';",
              "            }",
              "            tstr2 = tstr2 + Format(CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.BlueprintCostArms'), '<Cost' + '>', tint1, tstr3);",
              "        }",
              "        ArrayAdd(tarr1, tint1, 'Arms');",
              "    }",
              "    else if(i == 13)",
              "    {",
              "        tint1 = CT(BlueprintInWorkPath + 'Expenses.AssemblingNarcotics');",
              "        if(tint1)",
              "        {",
              "            if(tstr2 != '') tstr2 = tstr2 + \"<br>\";",
              "            if(GetExpendablesFromHoldAndStock(Player(), 'Narcotics', cur_ruin, 0) < tint1)",
              "            {",
              "                check2 = 0;",
              "                tstr3 = '255,0,0';",
              "            }",
              "            tstr2 = tstr2 + Format(CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.BlueprintCostNarcotics'), '<Cost' + '>', tint1, tstr3);",
              "        }",
              "        ArrayAdd(tarr1, tint1, 'Narcotics');",
              "    }",
              "}",
              "",
              "tstr1 = Format(CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.BlueprintInfo'), '<Text' + '>', tstr1, '<CostText' + '>', tstr2, '');",
              "//if(tarr1['NoneEquipment']) tstr1 = tstr1 + \"<br>\" + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.BlueprintInfoAddIfNoneEquipment');",
              "tint1 = CT(BlueprintInWorkPath + 'Expenses.AssemblingTime');",
              "tint1 = CurTurn() + tint1;",
              "if(!GAnswerData) tstr1 = '</color>' + Format(CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.DDResearchDone'), '<Blueprint' + '>', tstr1, '<EndDate' + '>', '<color=0,50,200>' + GameDateTxtByTurn(tint1 + 1) + '</color>', '');",
              "else tstr1 = '</color>' + Format(CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.DDBlueprintStartNoNeedToResearch'), '<Blueprint' + '>', tstr1, '<EndDate' + '>', '<color=0,50,200>' + GameDateTxtByTurn(tint1 + 1) + '</color>', '');",
              "tstr2 = '</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.PlayerAssembleYes');",
              "tstr3 = '</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.PlayerAssembleWait');",
              "tstr4 = '</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.PlayerAssembleNo');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  113,
          "#":  116,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//На чертеже висит акткод, зачищающий его хранилище, поэтому временно убираем оттуда готовый предмет",
              "//Позже этот предмет будет выдан игроку",
              "cur_item = GetItemFromVault(BlueprintInWorkPath);",
              "if(GAnswerData) FreeItem(GetItemFromShip(Player(), GAnswerData)); //Если надо, удаляем из трюма чертёж",
              "if(CT(BlueprintInWorkPath + 'ScriptDialogGet') == '' && cur_item) PutItemInVault(BlueprintInWorkPath, cur_item);",
              "",
              "//NewsAdd(Name(cur_item));",
              "",
              "//Изымаем у игрока все необходимые ресурсы",
              "for(i = 1; i < ArrayDim(tarr1); i = i + 1)",
              "{",
              "    if(i == 1)",
              "    {",
              "        if(tarr1['Credits']) ShipMoney(Player(), ShipMoney(Player()) - tarr1['Credits']);",
              "    }",
              "    else",
              "    {",
              "        if(tarr1[i]) GetExpendablesFromHoldAndStock(Player(), GetVariableName(tarr1[i]), cur_ruin, tarr1[i]);",
              "    }",
              "}",
              "",
              "BlueprintInAssemblyTimer = tint1;",
              "SetData(3, 0, cur_ruin); //Ставим маркер, что чертёж перешёл в стадию сборки",
              "CustomEther('DesDep_CustomEther', 7, '', Format(CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentNotifications.ItemInAssemblyReminder'), '<EndDate' + '>', GameDateTxtByTurn(BlueprintInAssemblyTimer + 1), '255,240,100'));",
              "Sound('Sound.NewMsg'); //Вывод напоминалки не проигрывает звук",
              "",
              "tstr1 = '</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.DDAssembleYes');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  114,
          "#":  119,
          "Code.Type":  "Turn",
          "Code":          
          [
              "cur_item = GetItemFromVault(BlueprintInWorkPath);",
              "if(cur_item) FreeItem(cur_item);",
              "if(GAnswerData) FreeItem(GetItemFromShip(Player(), GAnswerData)); //Если надо, удаляем из трюма чертёж",
              "BlueprintInWorkPath = '';",
              "SetData(0, 0, cur_ruin); //Ставим маркер, что изучение/сборка предмета завершены",
              "tstr1 = '</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.DDAssembleNo');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  115,
          "#":  125,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tstr1 = '</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.DDAssembleWait');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  134,
          "#":  135,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Линкор",
              "tstr1 = '- ' + '<color=0,50,200>' + CT('ShipType.TypeName.WarriorBig') + '</color>' + \"<br>\";",
              "//Дредноут",
              "tstr2 = CT('ShipType.TypeName.Dreadnought');",
              "if(tstr2 != '') tstr1 = tstr1 + '- ' + '<color=0,50,200>' + tstr2 + '</color>' + \"<br>\";",
              "//Корвет",
              "tstr2 = CT('ShipType.TypeName.PirateCorvette');",
              "if(tstr2 != '') tstr1 = tstr1 + '- ' + '<color=0,50,200>' + tstr2 + '</color>' + \"<br>\";",
              "//Фригат",
              "tstr2 = CT('ShipType.TypeName.PirateFrigate');",
              "if(tstr2 != '') tstr1 = tstr1 + '- ' + '<color=0,50,200>' + tstr2 + '</color>' + \"<br>\";",
              "//Галеон",
              "tstr2 = CT('ShipType.TypeName.PirateGalleon');",
              "if(tstr2 != '') tstr1 = tstr1 + '- ' + '<color=0,50,200>' + tstr2 + '</color>' + \"<br>\";",
              "//Бертор",
              "tstr1 = tstr1 + '- ' + '<color=0,50,200>' + CT('ShipType.Dominator.Blazer.6') + '</color>' + \"<br>\";",
              "//Супердрочинатор",
              "tstr2 = CT('ShipType.TypeName.Superdominator');",
              "if(tstr2 != '') tstr1 = tstr1 + '- ' + '<color=0,50,200>' + tstr2 + '</color>' + \"<br>\";",
              "//Эгемон",
              "tstr2 = CT('ShipType.Dominator.Blazer.Klissan1');",
              "if(tstr2 != '') tstr1 = tstr1 + '- ' + '<color=0,50,200>' + tstr2 + '</color>' + \"<br>\";",
              "//Аркс какой-то",
              "tstr2 = CT('ShipType.Dominator.Keller.AMod_Invaders0');",
              "if(tstr2 != '') tstr1 = tstr1 + '- ' + '<color=0,50,200>' + tstr2 + '</color>' + \"<br>\";",
              "//Неизвестный",
              "//tstr2 = CT('ShipType.TypeName.None');",
              "//if(tstr2 != '') tstr1 = tstr1 + '- ' + '<color=0,50,200>' + tstr2 + '</color>' + \"<br>\";",
              "tstr1 = '</color>' + Format(CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentTalks.DDHowToFindNirgendAzur'), '<TypesList' + '>', tstr1, '');",
              "tint2 = 0;"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  0,
          "Parent":  138,
          "#":  140,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Если опция выигрыша предусматривает выдачу приза из другого скрипта",
              "AddDialogOverride('DDFortuneWheelEndSpecial', 100);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  143,
          "#":  144,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tstr1 = '</color>' + CT(BlueprintInWorkPath + 'ScriptDialogText2');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  145,
          "#":  146,
          "Code.Type":  "Turn",
          "Code":          
          [
              "InjectAnswer(CT(BlueprintInWorkPath + 'ScriptDialogGet'), CT(BlueprintInWorkPath + 'ScriptDialogGetAnswer'), 0, 'SetData(0, 0,  cur_ruin);Sound(\\\\\\'Sound.QuestOk\\\\\\');');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  560,
          "Pos.y":  430,
          "Parent":  -1,
          "#":  148,
          "Code.Type":  "Turn",
          "Code":          
          [
              "InjectAnswer(win_dialog, win_answer, 0, 'win_dialog = \\\\\\'\\\\\\';');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1150,
          "Pos.y":  350,
          "Parent":  -1,
          "#":  154,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tstr1='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.DDCreateEquipmentGreetings');",
              "tstr2='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.DDCreateEquipmentA1');",
              "tstr3='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.DDCreateEquipmentA2');",
              "tstr4='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.DDCreateEquipmentA3');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1180,
          "Pos.y":  400,
          "Parent":  -1,
          "#":  159,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//сдача азуры и нодов",
              "if(GAnswerData>10000)",
              "    {",
              "    cur_item=GAnswerData;",
              "    Sound('Sound.Drop');",
              "    for(i=0;i<ArrayDim(DD_weapon_cost);i=i+1)",
              "        {",
              "        tstr1=GetVariableName(DD_weapon_cost[i]);",
              "        if(tstr1=='Time')continue;",
              "        if(tstr1=='Credits')continue;",
              "        if(ItemType(cur_item)==t_UselessCountableItem)",
              "            {",
              "            if(EquipmentImageName(cur_item)!=tstr1)continue;",
              "            tint1=DD_weapon_cost[i]-ItemSize(cur_item);",
              "            if(tint1>=0)tint1=ItemSize(cur_item);",
              "            else tint1=DD_weapon_cost[i];",
              "            DD_weapon_cost[i]=DD_weapon_cost[i]-tint1;",
              "            if(DD_weapon_cost[i]==0)ArrayDelete(DD_weapon_cost,i);",
              "            ItemSize(cur_item,ItemSize(cur_item)-tint1);",
              "            if(ItemSize(cur_item)==0)",
              "                {",
              "                cur_item=GetItemFromShip(Player(),cur_item);",
              "                FreeItem(cur_item);",
              "                }",
              "            break;",
              "            }",
              "        if(ItemType(cur_item)==t_Protoplasm)",
              "            {",
              "            if(findsubstr(tstr1,'t_Protoplasm')==-1)continue;",
              "            tint2=tstr1;",
              "            if(ItemSubrace(cur_item)!=tint2)continue;",
              "            tint1=DD_weapon_cost[i]-ItemSize(cur_item);",
              "            if(tint1>=0)tint1=ItemSize(cur_item);",
              "            else tint1=DD_weapon_cost[i];",
              "            DD_weapon_cost[i]=DD_weapon_cost[i]-tint1;",
              "            if(DD_weapon_cost[i]==0)ArrayDelete(DD_weapon_cost,i);",
              "            GetNodesFromShip(Player(),tint1,tint2);",
              "            break;",
              "            }",
              "        }",
              "    if(ArrayDim(DD_weapon_cost)!=1)GAnswerData=102;",
              "    else",
              "        {",
              "        GAnswerData=101;",
              "        tint1=CurTurn()+DD_weapon_cost['Time'];",
              "        DD_weapon_ready=tint1;",
              "        }",
              "    }",
              "//сдача товаров(типа еды)",
              "if(GAnswerData<t_Artefact)",
              "    {",
              "    check=GAnswerData;",
              "    Sound('Sound.Drop');",
              "    for(i=0;i<ArrayDim(DD_weapon_cost);i=i+1)",
              "        {",
              "        tstr1=GetVariableName(DD_weapon_cost[i]);",
              "        if(tstr1=='Time')continue;",
              "        if(tstr1=='Credits')continue;",
              "        if(findsubstr(tstr1,'DesignDepartment')!=-1)continue;",
              "        if(findsubstr(tstr1,'t_Protoplasm')!=-1)continue;",
              "        tint1=GetValueFromScript('',tstr1);",
              "        if(tint1!=check)continue;",
              "        tint2=DD_weapon_cost[i]-GoodsCount(Player(),tint1);",
              "        if(tint2>=0)tint2=GoodsCount(Player(),tint1);",
              "        else tint2=DD_weapon_cost[i];",
              "        DD_weapon_cost[i]=DD_weapon_cost[i]-tint2;",
              "        if(DD_weapon_cost[i]==0)ArrayDelete(DD_weapon_cost,i);",
              "        ShipGoods(Player(),tint1,-tint2);",
              "        break;",
              "        }",
              "    if(ArrayDim(DD_weapon_cost)!=1)GAnswerData=102;",
              "    else",
              "        {",
              "        GAnswerData=101;",
              "        tint1=CurTurn()+DD_weapon_cost['Time'];",
              "        DD_weapon_ready=tint1;",
              "        }",
              "    }",
              "//сдача кредитов",
              "if(GAnswerData==99)",
              "    {",
              "    Sound('Sound.Sell');",
              "    for(i=0;i<ArrayDim(DD_weapon_cost);i=i+1)",
              "        {",
              "        tstr1=GetVariableName(DD_weapon_cost[i]);",
              "        if(tstr1!='Credits')continue;",
              "        tint1=DD_weapon_cost[i]-ShipMoney(Player());",
              "        if(tint1>=0)tint1=ShipMoney(Player());",
              "        else tint1=DD_weapon_cost[i];",
              "        DD_weapon_cost[i]=DD_weapon_cost[i]-tint1;",
              "        if(DD_weapon_cost[i]==0)ArrayDelete(DD_weapon_cost,i);",
              "        ShipMoney(Player(),ShipMoney(Player())-tint1);",
              "        break;",
              "        }",
              "    if(ArrayDim(DD_weapon_cost)!=1)GAnswerData=102;",
              "    else",
              "        {",
              "        GAnswerData=101;",
              "        tint1=CurTurn()+DD_weapon_cost['Time'];",
              "        DD_weapon_ready=tint1;",
              "        }",
              "    }",
              "//диалог нет активных проектов",
              "if(GAnswerData==100)",
              "    {",
              "    check2=0;",
              "    tstr1='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.DDCreateEquipmentWD0');",
              "    tstr2='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.DDCreateEquipmentWA1');",
              "    }",
              "//диалог покажите статы собираемого предмета",
              "if(GAnswerData==101)",
              "    {",
              "    tstr2='';",
              "    tstr2=CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Cost.Time');",
              "    tstr1=DD_weapon_Stat;",
              "    if(DD_weapon_ready==0)tstr2=Format(tstr2,'[var]',DD_weapon_cost['Time']);",
              "    else",
              "        {",
              "        if(CurTurn()<DD_weapon_ready)tstr2=Format(tstr2,'[var]',DD_weapon_ready-CurTurn());",
              "        }",
              "    tstr1=DD_weapon_Stat+tstr2;",
              "    tstr1='</color>'+DeleteTags(tstr1);",
              "    }",
              "//диалог покажите цену собираемого предмета(что надо сдать)",
              "if(GAnswerData==102)",
              "    {",
              "    tstr1='';",
              "    tint1=CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Cost',arr0);",
              "    for(i=0;i<ArrayDim(DD_weapon_cost);i=i+1)",
              "        {",
              "        if(GetVariableName(DD_weapon_cost[i])=='Time')continue;",
              "        tstr1=tstr1+\"<br>\"+Format(arr0[GetVariableName(DD_weapon_cost[i])],'[var]',DD_weapon_cost[i]);",
              "        }",
              "    tstr2=CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.DDCreateEquipmentWCost');",
              "    tstr1='</color>'+Format(tstr2,'[var]',tstr1);",
              "    }"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1150,
          "Pos.y":  600,
          "Parent":  -1,
          "#":  161,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//если у игрока нету активного проекта орудий",
              "if(ArrayDim(DD_weapon_create)<2)InjectAnswer('DDCreateEquipment0',tstr2,100);",
              "else",
              "    {",
              "//если есть, но ещё не все ресурсы сданы",
              "    if(DD_weapon_ready==0)InjectAnswer('DDCreateEquipment0',tstr2,102);",
              "    else",
              "        {",
              "//если есть и ресурсы сданы",
              "//если уже собрано",
              "//иначе не собрано",
              "        if(ArrayDim(DD_weapon_cost)==1 && CurTurn()>=DD_weapon_ready) InjectAnswer('DDGetItem',tstr2,999);",
              "        else InjectAnswer('DDCreateEquipment0',tstr2,101);",
              "        }",
              "    }",
              "//если у игрока нету активного проекта оборудки",
              "if(ArrayDim(DD_Equipments_create)<2)InjectAnswer('Equipments0',tstr3,100);",
              "else",
              "    {",
              "//если есть, но ещё не все ресурсы сданы",
              "    if(DD_Equipments_ready==0)InjectAnswer('Equipments0',tstr3,102);",
              "    else",
              "        {",
              "//если есть и ресурсы сданы",
              "//если уже собрано",
              "//иначе не собрано",
              "        if(ArrayDim(DD_Equipments_cost)==1 && CurTurn()>=DD_Equipments_ready) InjectAnswer('DDGetItem',tstr3,799);",
              "        else InjectAnswer('Equipments0',tstr3,101);",
              "        }",
              "    }",
              "//если у игрока нету активного проекта корпуса",
              "if(ArrayDim(DD_hull_create)<2)InjectAnswer('CreateHull0',tstr4,100);",
              "else",
              "    {",
              "//если есть, но ещё не все ресурсы сданы",
              "    if(DD_hull_ready==0)InjectAnswer('CreateHull0',tstr4,102);",
              "    else",
              "        {",
              "//если есть и ресурсы сданы",
              "//если уже собрано",
              "//иначе не собрано",
              "        if(ArrayDim(DD_hull_cost)==1 && CurTurn()>=DD_hull_ready) InjectAnswer('DDGetItem',tstr4,899);",
              "        else InjectAnswer('CreateHull0',tstr4,101);",
              "        }",
              "    }"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1330,
          "Pos.y":  400,
          "Parent":  -1,
          "#":  162,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//реплика нового проекта",
              "if(GAnswerData==100)InjectAnswer('DDCreateEquipmentW',tstr2,0);",
              "//реплика забрать готовый предмет",
              "if(ArrayDim(DD_weapon_cost)>1)",
              "    {",
              "    if(ArrayDim(DD_weapon_create)>2)",
              "        {",
              "        tstr3='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.CancelCreateWeaponR');",
              "        InjectAnswer('DDGetItem',tstr3,900);",
              "        }",
              "    }",
              "//реплика покажите цену",
              "if(GAnswerData==101)",
              "    {",
              "    if(ArrayDim(DD_weapon_cost)!=1)",
              "        {",
              "        tstr2='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.DDCreateEquipmentWShowCost');",
              "        InjectAnswer('DDCreateEquipment0',tstr2,102);",
              "        }",
              "    if(ArrayDim(DD_weapon_create)>2 && CT('DesignDepartmentModList.TestCreate')==1)",
              "        {",
              "        //тестовая реплика",
              "        tstr3='I TESTER give my gun now!';",
              "        InjectAnswer('DDGetItem',tstr3,999);",
              "        }",
              "    }",
              "//реплика покажите статистику предмета",
              "if(GAnswerData==102)",
              "    {",
              "    tstr2=CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.DDCreateEquipmentWShowStat');",
              "    if(ArrayDim(DD_weapon_create)>2 && CT('DesignDepartmentModList.TestCreate')==1)",
              "        {",
              "        //тестовая реплика",
              "        tstr3='I TESTER give my gun now!';",
              "        InjectAnswer('DDGetItem',tstr3,999);",
              "        }",
              "    InjectAnswer('DDCreateEquipment0',tstr2,101);",
              "//реплики сдачи предметов",
              "    ArrayClear(arr0); ArrayDelete(arr0,0);",
              "//перебираем предметы, ищем ноды, кастомные сыпучие",
              "    for(i=0;i<ShipItems(Player());i=i+1)",
              "        {",
              "        cur_item=ShipItems(Player(),i);",
              "        if(ItemType(cur_item)<t_Protoplasm)continue;",
              "        ArrayAdd(arr0,ItemType(cur_item),cur_item);",
              "        }",
              "    for(i=0;i<ArrayDim(DD_weapon_cost);i=i+1)",
              "        {",
              "        tstr1=GetVariableName(DD_weapon_cost[i]);",
              "        if(tstr1=='Time')continue;",
              "        if(tstr1=='Credits')",
              "            {",
              "//реплика сдача кредитов",
              "            if(ShipMoney(Player()) < 1) continue;",
              "            tint1=DD_weapon_cost[i]-ShipMoney(Player());",
              "            if(tint1>=0)tint1=ShipMoney(Player());",
              "            else tint1=DD_weapon_cost[i];",
              "            tstr2=CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Pay.Credits');",
              "            tstr2=tstr2+' '+lowercase(CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Cost.'+tstr1));",
              "            tstr2='</color>' + Format(tstr2,'[var]',tint1);",
              "            InjectAnswer('DDCreateEquipment0',tstr2,99);",
              "            }",
              "        if(tstr1=='Credits')continue;",
              "        if(findsubstr(tstr1,'DesignDepartment')!=-1)",
              "            {",
              "//реплика сдача азуры и нанов",
              "            tint1=t_UselessCountableItem;",
              "            for(j=0;j<ArrayDim(arr0);j=j+1)",
              "                {",
              "                cur_item=GetVariableName(arr0[j]);",
              "                if(arr0[j]!=tint1)continue;",
              "                if(EquipmentImageName(cur_item)!=tstr1)continue;",
              "                tint1=DD_weapon_cost[i]-ItemSize(cur_item);",
              "                if(tint1>=0)tint1=ItemSize(cur_item);",
              "                else tint1=DD_weapon_cost[i];",
              "                tstr2=CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Pay.Items');",
              "                tstr2=tstr2+' '+lowercase(CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Cost.'+tstr1));",
              "                tstr2='</color>' + Format(tstr2,'[var]',tint1);",
              "                InjectAnswer('DDCreateEquipment0',tstr2,cur_item);",
              "                }",
              "            }",
              "        else if(findsubstr(tstr1,'t_Protoplasm')!=-1)",
              "            {",
              "//реплика сдачи нодов",
              "            tint1=t_Protoplasm;",
              "            for(j=0;j<ArrayDim(arr0);j=j+1)",
              "                {",
              "                cur_item=GetVariableName(arr0[j]);",
              "                tint2=tstr1;",
              "                if(arr0[j]!=tint1)continue;",
              "                if(ItemSubrace(cur_item)!=tint2)continue;",
              "                tint1=DD_weapon_cost[i]-ItemSize(cur_item);",
              "                if(tint1>=0)tint1=ItemSize(cur_item);",
              "                else tint1=DD_weapon_cost[i];",
              "                tstr2=CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Pay.Items');",
              "                tstr2=tstr2+' '+lowercase(CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Cost.'+tstr1));",
              "                tstr2='</color>' + Format(tstr2,'[var]',tint1);",
              "                InjectAnswer('DDCreateEquipment0',tstr2,cur_item);",
              "                }",
              "            }",
              "        else",
              "            {",
              "//реплика сдачи товаров",
              "            tint1=GetValueFromScript('',tstr1);",
              "            if(tint1>t_Narcotics)continue;",
              "            if(GoodsCount(Player(),tint1)>0)",
              "                {",
              "                tint2=DD_weapon_cost[i]-GoodsCount(Player(),tint1);",
              "                if(tint2>=0)tint2=GoodsCount(Player(),tint1);",
              "                else tint2=DD_weapon_cost[i];",
              "                tstr2=CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Pay.Items');",
              "                tstr2=tstr2+' '+lowercase(CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Cost.'+tstr1));",
              "                tstr2='</color>' + Format(tstr2,'[var]',tint2);",
              "                InjectAnswer('DDCreateEquipment0',tstr2,tint1);",
              "                }",
              "            }",
              "        }",
              "    }",
              "tstr4='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.Restart0');",
              "if(GAnswerData==100)tstr4='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.Restart3');",
              "DAnswer('restart~' + tstr4);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1210,
          "Pos.y":  380,
          "Parent":  -1,
          "#":  164,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//открываем кастомную форму создания пух",
              "OpenCustomForm('CustomForm_DDCreateEquipment_Weapon');",
              "//очищаем и заполняем массивы для проекта",
              "ArrayClear(DD_weapon_create); DD_weapon_create[0]=-1;",
              "ArrayClear(DD_weapon_cost); ArrayDelete(DD_weapon_cost,0);",
              "tint1=CT('DesignDepartmentModList.CreateEquipment.Weapon',arr0);",
              "for(i=0;i<tint1;i=i+1)",
              "    {",
              "    tstr1=GetVariableName(arr0[i]);",
              "    if(tstr1=='Special')continue;",
              "    ArrayAdd(DD_weapon_create,InterfaceText('Ship','CFDD_'+tstr1),tstr1);",
              "    }",
              "tint1=CT('DesignDepartmentModList.CreateEquipment.WeaponAdd',arr0);",
              "for(i=0;i<tint1;i=i+1)",
              "    {",
              "    ArrayAdd(DD_weapon_create,InterfaceText('Ship','CFDD_'+arr0[i]),arr0[i]);",
              "    }",
              "tint1=DD_weapon_create['Count'];",
              "//разбираем строку с ценой на типы ресурсов для создания проекта",
              "if(tint1>0)",
              "    {",
              "    tint1=CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Cost',arr0);",
              "    tstr2=DD_weapon_create['CalculateCost_Text'];",
              "    for(i=0;i<tint1;i=i+1)",
              "        {",
              "        tstr1=arr0[i];",
              "        tstr1=substr(tstr1,0,findsubstr(tstr1, '['));",
              "        if(findsubstr(tstr2, tstr1)!=-1)",
              "            {",
              "            tint2=findsubstr(tstr2, tstr1);",
              "            tint2=tint2+count(tstr1);",
              "            tint3=0; tstr3='';",
              "            while(tstr3!=' ')",
              "                {",
              "                tstr3=substr(tstr2,tint2+tint3,1);",
              "                tint3=tint3+1;",
              "                if(tint3>tint2+20)break;",
              "                }",
              "            tint3=substr(tstr2,tint2,tint3);",
              "            ArrayAdd(DD_weapon_cost,tint3,GetVariableName(arr0[i]));",
              "            }",
              "        }",
              "    tint1=DD_weapon_cost['Credits'];",
              "    tint1=tint1/DD_weapon_create['Count'];",
              "//цена пухи равна общей цены 1 пухи в кредитах разделить на 3",
              "    DD_weapon_create[0]=tint1/3;",
              "//формируем строку для диалога статистики проекта",
              "    tint1=DD_weapon_create['PType'];",
              "    tstr1=CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.DDCreateEquipmentWGunStat'+tint1);",
              "    tstr1=Format(tstr1,'[DD_weapon_exist]',DD_weapon_exist[tint1]);",
              "    for(i=1;i<ArrayDim(DD_weapon_create);i=i+1)",
              "        {",
              "        tstr2=GetVariableName(DD_weapon_create[i]);",
              "        if(findsubstr(tstr1,tstr2)==-1)continue;",
              "        tstr3=CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Weapon.'+tstr2+'.Name');",
              "        tstr1=Format(tstr1,'['+tstr2+']',tstr3);",
              "        tstr3=CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Weapon.'+tstr2+'.'+DD_weapon_create[i]);",
              "        if(tstr2=='Race')",
              "            {",
              "            if(DD_weapon_create['Race']==5)",
              "                {",
              "                tstr4=CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.DomSeries');",
              "                tstr4=Format(tstr4,'[series]',CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Weapon.SubRace.'+DD_weapon_create['SubRace']));",
              "                tstr3=tstr3+tstr4;",
              "                }",
              "            }",
              "        if(tstr3=='')tstr3=DD_weapon_create[i];",
              "        if(tstr2=='Frag')tstr3=''+(100+DD_weapon_create[i])+'%';",
              "        if(tstr2=='MiningFactor')tstr3=''+DD_weapon_create[i]+'%';",
              "        if(tstr2=='MissileChanceHit')tstr3=''+DD_weapon_create[i]+'%';",
              "        if(tstr2=='MinDmg')",
              "            {",
              "            if(DD_weapon_create['MinDmg']==0)",
              "                {",
              "                DD_weapon_create['MinDmg']=1;",
              "                tstr3=1;",
              "                }",
              "            tint1=DD_weapon_create['Special_DamageSet'];",
              "            if((tint1 & 1048576))",
              "                {",
              "                tint1=DD_weapon_create['MaxDmg'];",
              "                DD_weapon_create['MinDmg']=tint1;",
              "                tstr3=tint1;",
              "                }",
              "            }",
              "        if(tstr2=='Range')",
              "            {",
              "            if(DD_weapon_create['PType']>1)",
              "                {",
              "                DD_weapon_create['Range']=3*DD_weapon_create['Range'];",
              "                tstr3=DD_weapon_create['Range'];",
              "                }",
              "            }",
              "        if(tstr2=='Size')",
              "            {",
              "            tint2=DD_weapon_create['Size'];",
              "            tint3=DD_weapon_create['Shots'];",
              "            if(DD_weapon_create['Shots']>1)tint2=tint2+(tint2*(tint3-1)*50)/100;",
              "            tint3=DD_weapon_create['MissileAmmo'];",
              "            tint3=tint3/50;",
              "            if(DD_weapon_create['PType']>1)tint2=tint2+(tint2*tint3*5)/100;",
              "            tstr3=tint2;",
              "            DD_weapon_create['Size']=tint2;",
              "            }",
              "        if(tstr2!='ShotType')tstr1=Format(tstr1,'['+tstr2+'_Var]',tstr3);",
              "        else",
              "            {",
              "            if(DD_weapon_create['ShotType_AddParam_Var']>0)tstr3=tstr3+' ('+DD_weapon_create['ShotType_AddParam_Var']+')';",
              "            }",
              "        tstr1=Format(tstr1,'['+tstr2+'_Var]',tstr3);",
              "        }",
              "    tstr1=Format(tstr1,'[Special]',CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Weapon.Special.Name'));",
              "    tstr1=Format(tstr1,'[Special_Var]',DD_weapon_create['Special_VarList']);",
              "    DD_weapon_Stat=tstr1;",
              "    tstr1=tstr1+CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.DDCreateEquipmentWGunStatAdd');",
              "    tstr1='</color>'+DeleteTags(tstr1);",
              "    }",
              "//если игрок затупил и выставил 0 пух, очищаем массив",
              "tint1=DD_weapon_create['Count'];",
              "if(tint1<1)",
              "    {",
              "    ArrayClear(DD_weapon_create);",
              "    DD_weapon_Stat='';",
              "    tstr1='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.DDCreateEquipmentWCount0');",
              "    if(check2>0)",
              "        {",
              "        tstr1='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.DDCreateEquipmentWCount0Idiot'+min(check2,4));",
              "        tint2=ShipMoney(Player());",
              "        if(tint2>0 && check2>2)",
              "            {",
              "            if(tint2>10000)tint2=10000;",
              "            else tint2=ShipMoney(Player());",
              "            tstr4='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.DDCreateEquipmentWCount0IdiotGetMoney');",
              "            tstr4=Format(tstr4,'[var]',tint2);",
              "            ShipMoney(Player(),ShipMoney(Player())-tint2);",
              "            Sound('Sound.Buy');",
              "            tstr1=tstr1+\"<br>\"+tstr4;",
              "            if(check2>3)check2=check2-1;",
              "            }",
              "        if(tint2<1 && check2>2) check2=6;",
              "        }",
              "    }",
              "tstr3='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.Restart1');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1330,
          "Pos.y":  380,
          "Parent":  -1,
          "#":  166,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//реплики если игрок выставил 0 пух",
              "if(tint1<1)",
              "    {",
              "    tstr2='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.DDCreateEquipmentWACount0');",
              "    if(check2<5)InjectAnswer('DDCreateEquipmentW',tstr2,0);",
              "    else DAnswer('restart~' + tstr2);",
              "    check2=check2+1;",
              "    }",
              "//реплики если игрок выставил более 0 пух",
              "if(tint1>0)",
              "    {",
              "    tstr2='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.DDCreateEquipmentWAReady');",
              "    InjectAnswer('DDCreateEquipment0',tstr2,102);",
              "    tstr2='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.DDCreateEquipmentWAChange');",
              "    InjectAnswer('DDCreateEquipmentW',tstr2,0);",
              "    }",
              "DAnswer('restart~' + tstr3);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  980,
          "Pos.y":  510,
          "Parent":  -1,
          "#":  169,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tstr1='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentRecycle.Talks.Greetings');",
              "",
              "if(GAnswerData == 1)",
              "{",
              "    cur_item = ShipEqInSlot(Player(), t_Hull);",
              "",
              "    tint1 = FindBonusByNameInCfg('DesignDepartment_NirgendOnHull');",
              "    nirgend = ItemExtraSpecialsCountByType(cur_item, tint1);",
              "",
              "    nirgend = nirgend / 100;",
              "",
              "    if(nirgend > 2)",
              "    {",
              "        cost = 750 * nirgend;",
              "        tstr1 = CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentRecycle.Talks.CleanHullYes');",
              "        tstr1 = '</color>' + Format(tstr1, '[nirgend]', nirgend, '[cost]', cost);",
              "    }",
              "    else",
              "    {",
              "        tstr1 = '</color>' +  CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentRecycle.Talks.CleanHullNo');",
              "        GAnswerData = 0;",
              "    }",
              "}",
              "if(GAnswerData > 1)",
              "{",
              "    cur_item = ShipEqInSlot(Player(), t_Hull);",
              "    tint1 = FindBonusByNameInCfg('DesignDepartment_NirgendOnHull');",
              "    ItemExtraSpecialsDeleteByType(cur_item, tint1, nirgend * 100);",
              "",
              "    if(GAnswerData == 2)",
              "    {",
              "        ShipMoney(Player(), ShipMoney(Player()) - cost);",
              "        Sound('Sound.Sell');",
              "    }",
              "    else",
              "    {",
              "        nirgend = nirgend / 2;",
              "        Sound('Sound.Take');",
              "    }",
              "",
              "    cur_item = CreateCustomCountableItem('DesignDepartment_NirgendAzur', nirgend);",
              "    ItemOwner(cur_item, ShipOwner(cur_ruin));",
              "    ItemCost(cur_item, 375 * nirgend);",
              "    if(ruin_CF != '') EqCustomFaction(cur_item, ruin_CF);",
              "    AddItemToShip(Player(), cur_item);",
              "    GAnswerData = 0;",
              "}",
              "//перебираем предметы и ищем ЧДшные, домиковские, клисанкские",
              "if(GAnswerData == 0) {",
              "    tint1=0; tint2=0; tint3=0; tint4=0; tint5=0;",
              "    for(i=0;i<ShipItems(Player());i=i+1) {",
              "        cur_item=ShipItems(Player(),i);",
              "        if(ItemType(cur_item)<t_FuelTanks)continue;",
              "        if(ItemType(cur_item)==t_UselessItem) {",
              "            if(Name(cur_item) == CT('Script.Mod_ExpArts.DepletedEMPMine') || Name(cur_item) == CT('Script.Mod_ExpArts.DepletedStunMine')) {",
              "                tint6=1;",
              "            }",
              "        }",
              "        if(ItemType(cur_item)>t_CustomWeapon)continue;",
              "        if(ItemIsInUse(cur_item))continue;",
              "        if(ItemInScript(cur_item))continue;",
              "        if(EqCustomFaction(cur_item)=='Klissan') tint3=1;",
              "        if(EqCustomFaction(cur_item)=='') {",
              "            if(ItemOwner(cur_item)==6) tint1=1;",
              "            else if(ItemOwner(cur_item)==5) tint2=1;",
              "            else if(ItemOwner(cur_item)==7) tint4=1;",
              "            else if(ItemOwner(cur_item)<5) tint5=1;",
              "        }",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1050,
          "Pos.y":  510,
          "Parent":  -1,
          "#":  170,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(GAnswerData == 0)",
              "{",
              "    tstr2='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentRecycle.Talks.AskRecycleNone');",
              "    if(tint1==1)InjectAnswer('DDRecycleNone',tstr2,0);",
              "    else DAnswer('block~' + tstr2);",
              "    tstr2='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentRecycle.Talks.AskRecycleDom');",
              "    if(tint2==1)InjectAnswer('DDRecycleDom',tstr2,0);",
              "    else DAnswer('block~' + tstr2);",
              "    tstr2='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentRecycle.Talks.AskRecycleKlissan');",
              "    if(tint3==1)InjectAnswer('DDRecycleKlissan',tstr2,0);",
              "    else",
              "        {",
              "        if(BlockExist('Items.CustomCountables.kProtoplasm'))DAnswer('block~' + tstr2);",
              "        }",
              "    tstr2='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentRecycle.Talks.AskRecycleCoal');",
              "    if(tint5==1)InjectAnswer('DDRecycleCoal',tstr2,0);",
              "    else DAnswer('block~' + tstr2);",
              "    tstr2='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentRecycle.Talks.AskRecycleClan');",
              "    if(tint4==1)InjectAnswer('DDRecycleClan',tstr2,0);",
              "    else DAnswer('block~' + tstr2);",
              "    tstr2='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentRecycle.Talks.AskRecycleBombs');",
              "    if(tint6==1)InjectAnswer('DDRecycleBombs',tstr2,0);",
              "    else DAnswer('block~' + tstr2);",
              "    tstr2='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentRecycle.Talks.AskCleanHull');",
              "    InjectAnswer('DDRecycle',tstr2,1);",
              "    tstr2='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentRecycle.Talks.Restart');",
              "    DAnswer('restart~' + tstr2);",
              "}",
              "if(GAnswerData == 1)",
              "{",
              "    tstr2 = CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentRecycle.Talks.AskCleanHullCr');",
              "    tstr2 = '</color>' + Format(tstr2, '[cost]', cost);",
              "    if(ShipMoney(Player()) < cost) tstr2 = 'block~' + tstr2;",
              "    InjectAnswer('DDRecycle', tstr2, 2);",
              "    tstr2 = '</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentRecycle.Talks.AskCleanHullFree');",
              "    InjectAnswer('DDRecycle', tstr2, 3);",
              "    tstr2 = '</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentRecycle.Talks.AskCleanHullNo');",
              "    InjectAnswer('DDRecycle', tstr2, 0);",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  980,
          "Pos.y":  540,
          "Parent":  -1,
          "#":  173,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tstr1='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentRecycle.Talks.RecycleNone');",
              "tstr3='';",
              "//надбавка за ТУ выше ГТУ",
              "tint3=CT('DesignDepartmentModList.Recycle.BonusLevelNone');",
              "//сдача ЧДшныой оборудки",
              "if(GAnswerData>0)",
              "    {",
              "//рассчитываем кол-ва Нанов и добавляем в трюм игроку",
              "    check=0;",
              "    if(ItemLevel(GAnswerData)>GalaxyTechLevel())check=ItemLevel(GAnswerData)-GalaxyTechLevel();",
              "    tint1=ItemSize(GAnswerData);",
              "    tint1=(tint1 * (check * tint3 + ItemDurability(GAnswerData)))/100;",
              "    cur_item=CreateCustomCountableItem('DesignDepartment_NoneItem',tint1);",
              "    ItemOwner(cur_item,ShipOwner(cur_ruin));",
              "    if(ruin_CF != '') EqCustomFaction(cur_item, ruin_CF);",
              "    tstr3='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentRecycle.Talks.RecycleDone');",
              "    tstr3=Format(tstr3,'[var]',Name(GAnswerData),'[var2]',Name(cur_item),'[var3]',tint1);",
              "    AddItemToShip(Player(),cur_item);",
              "    cur_item=GAnswerData;",
              "    GetItemFromShip(Player(),cur_item);",
              "    FreeItem(cur_item);",
              "    Sound('Sound.Repair');",
              "    }",
              "//перебираем трюм игрока и формируем строку для диалога",
              "tstr2=''; tint1=0; tstr4=CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentRecycle.Talks.AddTextNone');",
              "for(i=0;i<ShipItems(Player());i=i+1)",
              "    {",
              "    cur_item=ShipItems(Player(),i);",
              "    if(ItemType(cur_item)<t_FuelTanks)continue;",
              "    if(ItemType(cur_item)>t_CustomWeapon)continue;",
              "    if(ItemIsInUse(cur_item))continue;",
              "    if(ItemInScript(cur_item))",
              "        {",
              "        tint2 = EqSpecial(cur_item);",
              "        if(tint2 > -1)",
              "            {",
              "            if(!CT('MicroModuls.' + BonusNumInCfg(tint2) + '.ScriptItemIgnore')) continue;",
              "            }",
              "        else continue;",
              "        }",
              "    if(EqCustomFaction(cur_item)!='')continue;",
              "    if(ItemOwner(cur_item)!=6)continue;",
              "    check=0;",
              "    if(ItemLevel(cur_item)>GalaxyTechLevel())check=ItemLevel(cur_item)-GalaxyTechLevel();",
              "    tint2=ItemSize(cur_item);",
              "    tint2=(tint2 * (check * tint3 + ItemDurability(cur_item)))/100;",
              "    if(tint2<1)continue;",
              "    tint1=tint1+1;",
              "    tstr2=tstr2+\"<br>\"+tint1+': '+DeleteTags(Name(cur_item))+' '+ItemSize(cur_item)+' '+tstr4;",
              "    tstr2=Format(tstr2,'[var]',tint2);",
              "    }",
              "if(tstr2=='')tstr2='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentRecycle.Talks.RecycleListEmpty');",
              "else tstr2=Format(CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentRecycle.Talks.RecycleList'),'[list]',tstr2);",
              "tstr1=tstr1+tstr3+tstr2;",
              "tstr4='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentRecycle.Talks.Restart');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1050,
          "Pos.y":  540,
          "Parent":  -1,
          "#":  175,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//перебираем трюм игрока и формируем список на сдачу предметов",
              "for(i=0;i<ShipItems(Player());i=i+1)",
              "    {",
              "    cur_item=ShipItems(Player(),i);",
              "    if(ItemType(cur_item)<t_FuelTanks)continue;",
              "    if(ItemType(cur_item)>t_CustomWeapon)continue;",
              "    if(ItemIsInUse(cur_item))continue;",
              "    if(ItemInScript(cur_item))",
              "        {",
              "        tint2 = EqSpecial(cur_item);",
              "        if(tint2 > -1)",
              "            {",
              "            if(!CT('MicroModuls.' + BonusNumInCfg(tint2) + '.ScriptItemIgnore')) continue;",
              "            }",
              "        else continue;",
              "        }",
              "    if(EqCustomFaction(cur_item)!='')continue;",
              "    if(ItemOwner(cur_item)!=6)continue;",
              "    InjectAnswer('DDRecycleNone',DeleteTags(Name(cur_item))+' '+ItemSize(cur_item)+' т.',cur_item);",
              "    }",
              "DAnswer('restart~' + tstr4);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  980,
          "Pos.y":  570,
          "Parent":  -1,
          "#":  176,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tstr1='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentRecycle.Talks.RecycleDom');",
              "tstr3='';",
              "//надбавка за ТУ выше ГТУ",
              "tint3=CT('DesignDepartmentModList.Recycle.BonusLevelDom');",
              "//сдача домикооборудки",
              "if(GAnswerData>0)",
              "    {",
              "//рассчитываем кол-во нодов и добавляем в трюм игроку",
              "    cur_item=GAnswerData;",
              "    check=0;",
              "    if(ItemLevel(cur_item)>GalaxyTechLevel())check=ItemLevel(cur_item)-GalaxyTechLevel();",
              "    tint1=ItemSize(cur_item);",
              "    tint1=(tint1 * (check * tint3 + ItemDurability(cur_item)))/100;",
              "    cur_item=CreateNodes(tint1,ItemSubrace(cur_item));",
              "    ItemOwner(cur_item,5);",
              "    tstr3='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentRecycle.Talks.RecycleDone');",
              "    tstr3=Format(tstr3,'[var]',Name(GAnswerData),'[var2]',Name(cur_item),'[var3]',tint1);",
              "    AddItemToShip(Player(),cur_item);",
              "    cur_item=GAnswerData;",
              "    GetItemFromShip(Player(),cur_item);",
              "    FreeItem(cur_item);",
              "    Sound('Sound.Repair');",
              "    GAnswerData=0;",
              "    }",
              "//перебираем трюм и формируем строку для диалога",
              "tstr2=''; tint1=0;",
              "for(i=0;i<ShipItems(Player());i=i+1)",
              "    {",
              "    cur_item=ShipItems(Player(),i);",
              "    if(ItemType(cur_item)<t_FuelTanks)continue;",
              "    if(ItemType(cur_item)>t_CustomWeapon)continue;",
              "    if(ItemIsInUse(cur_item))continue;",
              "    if(ItemInScript(cur_item))",
              "        {",
              "        tint2 = EqSpecial(cur_item);",
              "        if(tint2 > -1)",
              "            {",
              "            if(!CT('MicroModuls.' + BonusNumInCfg(tint2) + '.ScriptItemIgnore')) continue;",
              "            }",
              "        else continue;",
              "        }",
              "    if(EqCustomFaction(cur_item)!='')continue;",
              "    if(ItemOwner(cur_item)!=5)continue;",
              "    check=0;",
              "    if(ItemLevel(cur_item)>GalaxyTechLevel())check=ItemLevel(cur_item)-GalaxyTechLevel();",
              "    tint2=ItemSize(cur_item);",
              "    tint2=(tint2 * (check * tint3 + ItemDurability(cur_item)))/100;",
              "    if(tint2<1)continue;",
              "    tstr4=CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentRecycle.Talks.AddTextDom'+ItemSubrace(cur_item));",
              "    tint1=tint1+1;",
              "    tstr2=tstr2+\"<br>\"+tint1+': '+DeleteTags(Name(cur_item))+' '+ItemSize(cur_item)+' '+tstr4;",
              "    tstr2=Format(tstr2,'[var]',tint2);",
              "    }",
              "if(tstr2=='')tstr2='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentRecycle.Talks.RecycleListEmpty');",
              "else tstr2=Format(CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentRecycle.Talks.RecycleList'),'[list]',tstr2);",
              "tstr1=tstr1+tstr3+tstr2;",
              "tstr4='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentRecycle.Talks.Restart');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1050,
          "Pos.y":  570,
          "Parent":  -1,
          "#":  178,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//перебираем трюм игрока и формируем список на сдачу предметов",
              "for(i=0;i<ShipItems(Player());i=i+1)",
              "    {",
              "    cur_item=ShipItems(Player(),i);",
              "    if(ItemType(cur_item)<t_FuelTanks)continue;",
              "    if(ItemType(cur_item)>t_CustomWeapon)continue;",
              "    if(ItemIsInUse(cur_item))continue;",
              "    if(ItemInScript(cur_item))",
              "        {",
              "        tint2 = EqSpecial(cur_item);",
              "        if(tint2 > -1)",
              "            {",
              "            if(!CT('MicroModuls.' + BonusNumInCfg(tint2) + '.ScriptItemIgnore')) continue;",
              "            }",
              "        else continue;",
              "        }",
              "    if(EqCustomFaction(cur_item)!='')continue;",
              "    if(ItemOwner(cur_item)!=5)continue;",
              "    InjectAnswer('DDRecycleDom',DeleteTags(Name(cur_item))+' '+ItemSize(cur_item)+' т.',cur_item);",
              "    }",
              "DAnswer('restart~' + tstr4);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1390,
          "Pos.y":  340,
          "Parent":  -1,
          "#":  185,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(GAnswerData==999)",
              "    {",
              "    tstr1='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.DDCreateEquipmentWDReady');",
              "    tstr3='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.DDCreateEquipmentWATakeGun');",
              "    }",
              "if(GAnswerData==900)",
              "    {",
              "    tstr1='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.CancelCreateQ');",
              "    tstr3='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.CancelCreateR');",
              "    }",
              "if(GAnswerData==899)",
              "    {",
              "    tstr1='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.HullReady');",
              "    tstr3='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.HullTake');",
              "    }",
              "if(GAnswerData==800)",
              "    {",
              "    tstr1='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.CancelCreateQ');",
              "    tstr3='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.CancelCreateR');",
              "    }",
              "if(GAnswerData==799)",
              "    {",
              "    tstr1='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.EquipmentsReady');",
              "    tstr3='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.EquipmentsTake');",
              "    }",
              "if(GAnswerData==700)",
              "    {",
              "    tstr1='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.CancelCreateQ');",
              "    tstr3='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.CancelCreateR');",
              "    }",
              "tstr4='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.Restart2');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1550,
          "Pos.y":  400,
          "Parent":  -1,
          "#":  187,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//DD_weapon_create[0]=-1",
              "//DD_weapon_create['ABType']=2",
              "//DD_weapon_create['Count']=1",
              "//DD_weapon_create['Frag']=-45",
              "//DD_weapon_create['MM']=1",
              "//DD_weapon_create['MaxDmg']=20",
              "//DD_weapon_create['MinDmg']=10",
              "//DD_weapon_create['MiningFactor']=10",
              "//DD_weapon_create['MissileAmmo']=50",
              "//DD_weapon_create['MissileChanceHit']=100",
              "//DD_weapon_create['MissileCount']=2",
              "//DD_weapon_create['MissileMaxSpeed']=650",
              "//DD_weapon_create['MissileMinSpeed']=350",
              "//DD_weapon_create['PType']=2",
              "//DD_weapon_create['Race']=1",
              "//DD_weapon_create['Range']=150",
              "//DD_weapon_create['ShotType']=2",
              "//DD_weapon_create['Shots']=2",
              "//DD_weapon_create['Size']=495",
              "//DD_weapon_create['WSpeed']=10",
              "//DD_weapon_create['ShotType_AddParam_Var']=20",
              "//DD_weapon_create['Special_DamageSet']=24",
              "//DD_weapon_create['CalculateCost_Text']=Алкоголь: 14 т, Оружие: 8 т, Кредиты: 30000 cr, Продукты: 24 т, Роскошь: 8 т, Медикаменты: 20 т, Минералы: 30 т, Наркотики: 28 т, Ниргенд Азур: 38 т, Нан: 8 т, Ноды Блазера: 70 т, Ноды Келлера: 35 т, Ноды Террона: 105 т, Техника: 80 т, Время разработки: 17 дней.",
              "//DD_weapon_create['WeaponName']=Прототип",
              "//DD_weapon_create['Special_VarList']=Замедление I, Разрушение оборудования.",
              "//создаем кастомные пухи по параметрам из массива",
              "check=0; tint1=CT('DesignDepartmentModList.CreateEquipment.ArrayToGun.PType.'+DD_weapon_create['PType']);",
              "tstr1=CT('DesignDepartmentModList.CreateEquipment.ArrayToGun.'+DD_weapon_create['PType']);",
              "tint2=DD_weapon_create['PType'];",
              "if(tint2<2)",
              "{",
              "if(DD_weapon_create['ShotType']==4)",
              "    {",
              "    tstr1=tstr1+CT('DesignDepartmentModList.CreateEquipment.ArrayToGun.AOE');",
              "    tint2=tint2+DD_weapon_create['ShotType'];",
              "    }",
              "}",
              "tint2=DD_weapon_exist[tint2];",
              "tstr1=tstr1+tint2;",
              "for(i=0;i<CustomWeaponTypes();i=i+1)",
              "    {",
              "    if(CustomWeaponTypes(i)!=tstr1)continue;",
              "    check=1; break;",
              "    }",
              "if(check==0)",
              "    {",
              "    if(tint1==1)cur_item=InventNewCustomWeapon(tstr1,t_Weapon1);",
              "    if(tint1==2)cur_item=InventNewCustomWeapon(tstr1,t_Weapon2);",
              "    if(tint1==4)",
              "        {",
              "        if(DD_weapon_create['PType']==2)cur_item=InventNewCustomWeapon(tstr1,t_Weapon4);",
              "        if(DD_weapon_create['PType']==3)cur_item=InventNewCustomWeapon(tstr1,t_Weapon15);",
              "        }",
              "    }",
              "else cur_item=GetCustomWeaponInfo(tstr1);",
              "if(tint1==1)",
              "    {",
              "    if(DD_weapon_create['ShotType']!=4)SetCustomWeaponSE(cur_item,'Weapon.0','Weapon.NoGraph','',0);",
              "    else SetCustomWeaponSE(cur_item,'Weapon.13','Weapon.13','',0);",
              "    }",
              "if(tint1==2)",
              "    {",
              "    if(DD_weapon_create['ShotType']!=4)SetCustomWeaponSE(cur_item,'Weapon.1','Weapon.NoGraph','',0);",
              "    else SetCustomWeaponSE(cur_item,'Weapon.12','Weapon.12','',0);",
              "    }",
              "if(tint1==4)",
              "    {",
              "    if(DD_weapon_create['PType']==2)SetCustomWeaponSE(cur_item,'Weapon.3','Weapon.NoGraph','Weapon.MissileHit',0);",
              "    if(DD_weapon_create['PType']==3)SetCustomWeaponSE(cur_item,'Weapon.14','Weapon.NoGraph','Weapon.MissileHit',0);",
              "    }",
              "tint2=CT('DesignDepartmentModList.CreateEquipment.WeaponStat.GunTLvl');",
              "SetCustomWeaponPrimaryData(cur_item,tint2,t_Weapon1,t_DefGenerator+DD_weapon_create['ABType']);",
              "SetCustomWeaponSizeAndCost(cur_item,100,100);",
              "if(DD_weapon_create['MinDmg']==0)DD_weapon_create['MinDmg']=1;",
              "tint2=DD_weapon_create['MinDmg'];",
              "tint3=DD_weapon_create['MaxDmg'];",
              "SetCustomWeaponDamageData(cur_item,tint2,tint3,tint1+DD_weapon_create['Special_DamageSet'],1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00);",
              "if(tint1!=4)",
              "    {",
              "    tstr2=CT('DesignDepartmentModList.CreateEquipment.ArrayToGun.ShotType.'+DD_weapon_create['ShotType']);",
              "    tint1=DD_weapon_create['WSpeed'];",
              "    tint2=DD_weapon_create['Range'];",
              "    tint3=DD_weapon_create['ShotType_AddParam_Var'];",
              "    if(DD_weapon_create['ShotType']==1)",
              "        {",
              "        tstr2=tstr2+tint3;",
              "        tint3=0;",
              "        }",
              "    tflt1=DD_weapon_create['MiningFactor'];",
              "    if(DD_weapon_create['MiningFactor']>0)tflt1=100/tflt1;",
              "    else tflt1=100;",
              "    i=DD_weapon_create['Shots'];",
              "    SetCustomWeaponShotData(cur_item,tstr2,tint1,tint2,tint3,tflt1,i);",
              "    }",
              "else",
              "    {",
              "    tstr2=CT('DesignDepartmentModList.CreateEquipment.ArrayToGun.ShotType.0');",
              "    if(DD_weapon_create['ShotType']==0)tstr2=CT('DesignDepartmentModList.CreateEquipment.ArrayToGun.ShotType.5');",
              "    if(DD_weapon_create['ShotType']==2)tstr2=CT('DesignDepartmentModList.CreateEquipment.ArrayToGun.ShotType.6');",
              "    if(DD_weapon_create['MissileCount']>0 && tint1==4)tstr2=tstr2+DD_weapon_create['MissileCount'];",
              "    if(DD_weapon_create['PType']==3)tstr2=CT('DesignDepartmentModList.CreateEquipment.ArrayToGun.ShotType.7');",
              "    tint1=DD_weapon_create['WSpeed'];",
              "    tint2=DD_weapon_create['Range'];",
              "    tint3=DD_weapon_create['ShotType_AddParam_Var'];",
              "    if(DD_weapon_create['ShotType']!=2)tint3=0;",
              "    tflt1=DD_weapon_create['MiningFactor'];",
              "    if(DD_weapon_create['MiningFactor']>0)tflt1=100/tflt1;",
              "    else tflt1=100;",
              "    i=DD_weapon_create['Shots'];",
              "    SetCustomWeaponShotData(cur_item,tstr2,tint1,tint2,tint3,tflt1,i);",
              "    tint1=DD_weapon_create['MissileMaxSpeed'];",
              "    tint2=DD_weapon_create['MissileMinSpeed'];",
              "    tint3=DD_weapon_create['MissileChanceHit'];",
              "    check=DD_weapon_create['Range'];",
              "    SetCustomMissileWeaponStats(cur_item,check,tint1,tint2,tint3);",
              "    }",
              "if(DD_weapon_create['Race']!=5)SetCustomWeaponAvailability(cur_item,'NotSold');",
              "else SetCustomWeaponAvailability(cur_item,'NotSoldAndNodeRepair');",
              "//создаем нужное кол-во пух",
              "tint3=DD_weapon_create['Count'];",
              "for(i=0;i<tint3;i=i+1)",
              "    {",
              "    tint1 = DD_weapon_create['Race'];",
              "    if(tint1<8)cur_item=CreateCustomWeapon(tstr1,DD_weapon_create['Size'],5,DD_weapon_create['Race']);",
              "    else",
              "        {",
              "        tint1 = CT('DesignDepartmentModList.CreateEquipment.StellarStandartRace');",
              "        cur_item=CreateCustomWeapon(tstr1,DD_weapon_create['Size'],5, tint1);",
              "        if(ruin_CF != '') EqCustomFaction(cur_item, ruin_CF);",
              "        }",
              "    ItemSubrace(cur_item,DD_weapon_create['SubRace']);",
              "    LinkItemToScript(cur_item);",
              "    if(DD_weapon_create['Special_VarList']!='---')",
              "        {",
              "        tstr2=CT('DesignDepartmentModList.CreateEquipment.WeaponStat.SpecialEffects');",
              "        tstr2=Format(tstr2,'[var]',DD_weapon_create['Special_VarList']);",
              "        ScriptItemTextData(cur_item,1,'</color>'+tstr2);",
              "        }",
              "    if(DD_weapon_create['ShotType']>0)",
              "        {",
              "        tstr2=CT('DesignDepartmentModList.CreateEquipment.WeaponStat.ShotType'+DD_weapon_create['ShotType']);",
              "        tstr2=Format(tstr2,'[var]',DD_weapon_create['ShotType_AddParam_Var']);",
              "        ScriptItemTextData(cur_item,2,'</color>'+tstr2);",
              "        }",
              "    if(DD_weapon_create['WeaponName']!=CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.WeaponName'))",
              "        {",
              "        SetName(cur_item,DD_weapon_create['WeaponName']);",
              "        }",
              "    if(DD_weapon_create['MM']==0)",
              "        {",
              "        if(DD_weapon_create['PType']<2)",
              "            {",
              "            tint1=FindBonusByCustomTag('DesignDepartment_CG_BlockMM');",
              "            if(tint1>-1)SpecialToEquipment(tint1,cur_item);",
              "            }",
              "        else",
              "            {",
              "            if(DD_weapon_create['MissileAmmo']==0)",
              "                {",
              "                tint1=FindBonusByCustomTag('DesignDepartment_CG_BlockMM');",
              "                if(tint1>-1)SpecialToEquipment(tint1,cur_item);",
              "                }",
              "            else",
              "                {",
              "                tint1=FindBonusByCustomTag('DesignDepartment_CG_BonAmmo'+DD_weapon_create['MissileAmmo']+'_BlockMM');",
              "                if(tint1>-1)SpecialToEquipment(tint1,cur_item);",
              "                WeaponAmmunition(cur_item,WeaponMaxAmmunition(cur_item));",
              "                }",
              "            }",
              "        }",
              "    if(DD_weapon_create['MM']==1)",
              "        {",
              "        if(DD_weapon_create['PType']>1)",
              "            {",
              "            if(DD_weapon_create['MissileAmmo']>0)",
              "                {",
              "                tint1=FindBonusByCustomTag('DesignDepartment_CG_BonAmmo'+DD_weapon_create['MissileAmmo']);",
              "                if(tint1>-1)SpecialToEquipment(tint1,cur_item);",
              "                WeaponAmmunition(cur_item,WeaponMaxAmmunition(cur_item));",
              "                }",
              "            }",
              "        }",
              "    if(DD_weapon_create['Frag']!=0)",
              "        {",
              "        if(DD_weapon_create['Frag']>0)",
              "            {",
              "            tint1=FindBonusByCustomTag('DesignDepartment_CG_FragilityPlus');",
              "            if(tint1>-1)ItemExtraSpecialsAddByType(cur_item,tint1,DD_weapon_create['Frag']);",
              "            }",
              "        else",
              "            {",
              "            tint1=FindBonusByCustomTag('DesignDepartment_CG_FragilityMinus');",
              "            if(tint1>-1)ItemExtraSpecialsAddByType(cur_item,tint1,abs(DD_weapon_create['Frag']));",
              "            }",
              "        }",
              "    if(ItemCost(cur_item)<DD_weapon_create[0])ItemCost(cur_item,DD_weapon_create[0]);",
              "    if(EqSpecial(cur_item) == -1)",
              "        {",
              "        tint1=FindBonusByNameInCfg('DesignDepartment_Empty_Locked');",
              "        if(tint1>-1)SpecialToEquipment(tint1,cur_item);",
              "        }",
              "    AddItemToShip(Player(),cur_item);",
              "    }",
              "//увеличиваем номер для следующей кастомной пухи такого типа",
              "tint1=DD_weapon_create['PType'];",
              "if(tint1<2)",
              "    {",
              "    if(DD_weapon_create['ShotType']==4)tint1=tint1+DD_weapon_create['ShotType'];",
              "    }",
              "DD_weapon_exist[tint1]=1+DD_weapon_exist[tint1];",
              "//очищаем массивы и переменные",
              "DD_weapon_ready=0; DD_weapon_Stat='';",
              "ArrayClear(DD_weapon_create); ArrayClear(DD_weapon_cost);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1550,
          "Pos.y":  380,
          "Parent":  -1,
          "#":  192,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//игрок отказывается от проекта, очищаем массивы и переменные",
              "DD_weapon_ready=0; DD_weapon_Stat='';",
              "ArrayClear(DD_weapon_create); ArrayClear(DD_weapon_cost);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1180,
          "Pos.y":  500,
          "Parent":  -1,
          "#":  198,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(GAnswerData>10000)",
              "    {",
              "    cur_item=GAnswerData;",
              "    Sound('Sound.Drop');",
              "    for(i=0;i<ArrayDim(DD_hull_cost);i=i+1)",
              "        {",
              "        tstr1=GetVariableName(DD_hull_cost[i]);",
              "        if(tstr1=='Time')continue;",
              "        if(tstr1=='Credits')continue;",
              "        if(ItemType(cur_item)==t_UselessCountableItem)",
              "            {",
              "            if(EquipmentImageName(cur_item)!=tstr1)continue;",
              "            tint1=DD_hull_cost[i]-ItemSize(cur_item);",
              "            if(tint1>=0)tint1=ItemSize(cur_item);",
              "            else tint1=DD_hull_cost[i];",
              "            DD_hull_cost[i]=DD_hull_cost[i]-tint1;",
              "            if(DD_hull_cost[i]==0)ArrayDelete(DD_hull_cost,i);",
              "            ItemSize(cur_item,ItemSize(cur_item)-tint1);",
              "            if(ItemSize(cur_item)==0)",
              "                {",
              "                cur_item=GetItemFromShip(Player(),cur_item);",
              "                FreeItem(cur_item);",
              "                }",
              "            break;",
              "            }",
              "        if(ItemType(cur_item)==t_Protoplasm)",
              "            {",
              "            if(findsubstr(tstr1,'t_Protoplasm')==-1)continue;",
              "            tint2=tstr1;",
              "            if(ItemSubrace(cur_item)!=tint2)continue;",
              "            tint1=DD_hull_cost[i]-ItemSize(cur_item);",
              "            if(tint1>=0)tint1=ItemSize(cur_item);",
              "            else tint1=DD_hull_cost[i];",
              "            DD_hull_cost[i]=DD_hull_cost[i]-tint1;",
              "            if(DD_hull_cost[i]==0)ArrayDelete(DD_hull_cost,i);",
              "            GetNodesFromShip(Player(),tint1,tint2);",
              "            break;",
              "            }",
              "        }",
              "    if(ArrayDim(DD_hull_cost)!=1)GAnswerData=102;",
              "    else",
              "        {",
              "        GAnswerData=101;",
              "        tint1=CurTurn()+DD_hull_cost['Time'];",
              "        DD_hull_ready=tint1;",
              "        }",
              "    }",
              "if(GAnswerData<t_Artefact)",
              "    {",
              "    check=GAnswerData;",
              "    Sound('Sound.Drop');",
              "    for(i=0;i<ArrayDim(DD_hull_cost);i=i+1)",
              "        {",
              "        tstr1=GetVariableName(DD_hull_cost[i]);",
              "        if(tstr1=='Time')continue;",
              "        if(tstr1=='Credits')continue;",
              "        if(findsubstr(tstr1,'DesignDepartment')!=-1)continue;",
              "        if(findsubstr(tstr1,'t_Protoplasm')!=-1)continue;",
              "        tint1=GetValueFromScript('',tstr1);",
              "        if(tint1!=check)continue;",
              "        tint2=DD_hull_cost[i]-GoodsCount(Player(),tint1);",
              "        if(tint2>=0)tint2=GoodsCount(Player(),tint1);",
              "        else tint2=DD_hull_cost[i];",
              "        DD_hull_cost[i]=DD_hull_cost[i]-tint2;",
              "        if(DD_hull_cost[i]==0)ArrayDelete(DD_hull_cost,i);",
              "        ShipGoods(Player(),tint1,-tint2);",
              "        break;",
              "        }",
              "    if(ArrayDim(DD_hull_cost)!=1)GAnswerData=102;",
              "    else",
              "        {",
              "        GAnswerData=101;",
              "        tint1=CurTurn()+DD_hull_cost['Time'];",
              "        DD_hull_ready=tint1;",
              "        }",
              "    }",
              "if(GAnswerData==99)",
              "    {",
              "    Sound('Sound.Sell');",
              "    for(i=0;i<ArrayDim(DD_hull_cost);i=i+1)",
              "        {",
              "        tstr1=GetVariableName(DD_hull_cost[i]);",
              "        if(tstr1!='Credits')continue;",
              "        tint1=DD_hull_cost[i]-ShipMoney(Player());",
              "        if(tint1>=0)tint1=ShipMoney(Player());",
              "        else tint1=DD_hull_cost[i];",
              "        DD_hull_cost[i]=DD_hull_cost[i]-tint1;",
              "        if(DD_hull_cost[i]==0)ArrayDelete(DD_hull_cost,i);",
              "        ShipMoney(Player(),ShipMoney(Player())-tint1);",
              "        break;",
              "        }",
              "    if(ArrayDim(DD_hull_cost)!=1)GAnswerData=102;",
              "    else",
              "        {",
              "        GAnswerData=101;",
              "        tint1=CurTurn()+DD_hull_cost['Time'];",
              "        DD_hull_ready=tint1;",
              "        }",
              "    }",
              "if(GAnswerData==100)",
              "    {",
              "    check2=0;",
              "    tstr1='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.DDCreateEquipmentWD0');",
              "    tstr2='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.DDCreateEquipmentWA1');",
              "    }",
              "if(GAnswerData==101)",
              "    {",
              "    tstr2='';",
              "    tstr2=CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Cost.Time');",
              "    tstr1=DD_hull_Stat;",
              "    if(DD_hull_ready==0)tstr2=Format(tstr2,'[var]',DD_hull_cost['Time']);",
              "    else",
              "        {",
              "        if(CurTurn()<DD_hull_ready)tstr2=Format(tstr2,'[var]',DD_hull_ready-CurTurn());",
              "        }",
              "    tstr1=DD_hull_Stat+tstr2;",
              "    tstr1='</color>'+DeleteTags(tstr1);",
              "    }",
              "if(GAnswerData==102)",
              "    {",
              "    tstr1='';",
              "    tint1=CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Cost',arr0);",
              "    for(i=0;i<ArrayDim(DD_hull_cost);i=i+1)",
              "        {",
              "        if(GetVariableName(DD_hull_cost[i])=='Time')continue;",
              "        tstr1=tstr1+\"<br>\"+Format(arr0[GetVariableName(DD_hull_cost[i])],'[var]',DD_hull_cost[i]);",
              "        }",
              "    tstr2=CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.DDCreateEquipmentWCost');",
              "    tstr1='</color>'+Format(tstr2,'[var]',tstr1);",
              "    }"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1330,
          "Pos.y":  500,
          "Parent":  -1,
          "#":  200,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(GAnswerData==100)InjectAnswer('CreateHull1',tstr2,0);",
              "if(ArrayDim(DD_hull_cost)>1)",
              "    {",
              "    if(ArrayDim(DD_hull_create)>2)",
              "        {",
              "        tstr3='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.CancelCreateHullR');",
              "        InjectAnswer('DDGetItem',tstr3,800);",
              "        }",
              "    }",
              "if(GAnswerData==101)",
              "    {",
              "    if(ArrayDim(DD_hull_cost)!=1)",
              "        {",
              "        tstr2='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.DDCreateEquipmentWShowCost');",
              "        InjectAnswer('CreateHull0',tstr2,102);",
              "        }",
              "    if(ArrayDim(DD_hull_create)>2 && CT('DesignDepartmentModList.TestCreate')==1)",
              "        {",
              "        //тестовая реплика",
              "        tstr3='I TESTER give my hull now!';",
              "        InjectAnswer('DDGetItem',tstr3,899);",
              "        }",
              "    }",
              "if(GAnswerData==102)",
              "    {",
              "    tstr2=CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.DDCreateEquipmentWShowStat');",
              "    if(ArrayDim(DD_hull_create)>2 && CT('DesignDepartmentModList.TestCreate')==1)",
              "        {",
              "        //тестовая реплика",
              "        tstr3='I TESTER give my hull now!';",
              "        InjectAnswer('DDGetItem',tstr3,899);",
              "        }",
              "    InjectAnswer('CreateHull0',tstr2,101);",
              "    ArrayClear(arr0); ArrayDelete(arr0,0);",
              "    for(i=0;i<ShipItems(Player());i=i+1)",
              "        {",
              "        cur_item=ShipItems(Player(),i);",
              "        if(ItemType(cur_item)<t_Protoplasm)continue;",
              "        ArrayAdd(arr0,ItemType(cur_item),cur_item);",
              "        }",
              "    for(i=0;i<ArrayDim(DD_hull_cost);i=i+1)",
              "        {",
              "        tstr1=GetVariableName(DD_hull_cost[i]);",
              "        if(tstr1=='Time')continue;",
              "        if(tstr1=='Credits')",
              "            {",
              "            if(ShipMoney(Player()) < 1) continue;            ",
              "            tint1=DD_hull_cost[i]-ShipMoney(Player());",
              "            if(tint1>=0)tint1=ShipMoney(Player());",
              "            else tint1=DD_hull_cost[i];",
              "            tstr2=CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Pay.Credits');",
              "            tstr2=tstr2+' '+lowercase(CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Cost.'+tstr1));",
              "            tstr2='</color>' + Format(tstr2,'[var]',tint1);",
              "            InjectAnswer('CreateHull0',tstr2,99);",
              "            }",
              "        if(tstr1=='Credits')continue;",
              "        if(findsubstr(tstr1,'DesignDepartment')!=-1)",
              "            {",
              "            tint1=t_UselessCountableItem;",
              "            for(j=0;j<ArrayDim(arr0);j=j+1)",
              "                {",
              "                cur_item=GetVariableName(arr0[j]);",
              "                if(arr0[j]!=tint1)continue;",
              "                if(EquipmentImageName(cur_item)!=tstr1)continue;",
              "                tint1=DD_hull_cost[i]-ItemSize(cur_item);",
              "                if(tint1>=0)tint1=ItemSize(cur_item);",
              "                else tint1=DD_hull_cost[i];",
              "                tstr2=CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Pay.Items');",
              "                tstr2=tstr2+' '+lowercase(CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Cost.'+tstr1));",
              "                tstr2='</color>' + Format(tstr2,'[var]',tint1);",
              "                InjectAnswer('CreateHull0',tstr2,cur_item);",
              "                }",
              "            }",
              "        else if(findsubstr(tstr1,'t_Protoplasm')!=-1)",
              "            {",
              "            tint1=t_Protoplasm;",
              "            for(j=0;j<ArrayDim(arr0);j=j+1)",
              "                {",
              "                cur_item=GetVariableName(arr0[j]);",
              "                tint2=tstr1;",
              "                if(arr0[j]!=tint1)continue;",
              "                if(ItemSubrace(cur_item)!=tint2)continue;",
              "                tint1=DD_hull_cost[i]-ItemSize(cur_item);",
              "                if(tint1>=0)tint1=ItemSize(cur_item);",
              "                else tint1=DD_hull_cost[i];",
              "                tstr2=CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Pay.Items');",
              "                tstr2=tstr2+' '+lowercase(CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Cost.'+tstr1));",
              "                tstr2='</color>' + Format(tstr2,'[var]',tint1);",
              "                InjectAnswer('CreateHull0',tstr2,cur_item);",
              "                }",
              "            }",
              "        else",
              "            {",
              "            tint1=GetValueFromScript('',tstr1);",
              "            if(tint1>t_Narcotics)continue;",
              "            if(GoodsCount(Player(),tint1)>0)",
              "                {",
              "                tint2=DD_hull_cost[i]-GoodsCount(Player(),tint1);",
              "                if(tint2>=0)tint2=GoodsCount(Player(),tint1);",
              "                else tint2=DD_hull_cost[i];",
              "                tstr2=CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Pay.Items');",
              "                tstr2=tstr2+' '+lowercase(CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Cost.'+tstr1));",
              "                tstr2='</color>' + Format(tstr2,'[var]',tint2);",
              "                InjectAnswer('CreateHull0',tstr2,tint1);",
              "                }",
              "            }",
              "        }",
              "    }",
              "tstr4='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.Restart0');",
              "if(GAnswerData==100)tstr4='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.Restart3');",
              "DAnswer('restart~' + tstr4);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1210,
          "Pos.y":  480,
          "Parent":  -1,
          "#":  202,
          "Code.Type":  "Turn",
          "Code":          
          [
              "OpenCustomForm('CustomForm_DDCreateEquipment_Hull');",
              "ArrayClear(DD_hull_create); DD_hull_create[0]=-1;",
              "ArrayClear(DD_hull_cost); ArrayDelete(DD_hull_cost,0);",
              "tint1=CT('DesignDepartmentModList.CreateEquipment.Hull',arr0);",
              "for(i=0;i<tint1;i=i+1)",
              "    {",
              "    tstr1=GetVariableName(arr0[i]);",
              "    ArrayAdd(DD_hull_create,InterfaceText('Ship','CFDD_'+tstr1),tstr1);",
              "    }",
              "ArrayAdd(DD_hull_create,InterfaceText('Ship','CFDD_CalculateCost_Text'),'CalculateCost_Text');",
              "ArrayAdd(DD_hull_create,InterfaceText('Ship','CFDD_HullName'),'HullName');",
              "tint1=CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Cost',arr0);",
              "tstr2=DD_hull_create['CalculateCost_Text'];",
              "for(i=0;i<tint1;i=i+1)",
              "    {",
              "    tstr1=arr0[i];",
              "    tstr1=substr(tstr1,0,findsubstr(tstr1, '['));",
              "    if(findsubstr(tstr2, tstr1)!=-1)",
              "        {",
              "        tint2=findsubstr(tstr2, tstr1);",
              "        tint2=tint2+count(tstr1);",
              "        tint3=0; tstr3='';",
              "        while(tstr3!=' ')",
              "            {",
              "            tstr3=substr(tstr2,tint2+tint3,1);",
              "            tint3=tint3+1;",
              "            if(tint3>tint2+20)break;",
              "            }",
              "        tint3=substr(tstr2,tint2,tint3);",
              "        ArrayAdd(DD_hull_cost,tint3,GetVariableName(arr0[i]));",
              "        }",
              "    }",
              "tstr3='';",
              "for(i=1;i<ArrayDim(DD_hull_create);i=i+1)",
              "    {",
              "    tstr4='';",
              "    tstr1=GetVariableName(DD_hull_create[i]);",
              "    if(tstr1=='CalculateCost_Text')continue;",
              "    if(tstr1=='HullName')continue;",
              "    if(tstr1=='SubRace' && DD_hull_create['Race']!=5)continue;",
              "    tstr2=CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Hull.'+tstr1+'.Name');",
              "    if(CT('DesignDepartmentModList.CreateEquipment.Hull.'+tstr1+'.word')==1)",
              "        {",
              "        tstr4=CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Hull.'+tstr1+'.'+DD_hull_create[i]);",
              "        tstr2=tstr2+' '+tstr4+\"<br>\";",
              "        }",
              "    else",
              "        {",
              "        tstr4=DD_hull_create[i];",
              "        if(tstr1=='Size')",
              "            {",
              "            DD_hull_create[i]=300+DD_hull_create[i];",
              "            tstr4=DD_hull_create[i];",
              "            }",
              "        if(tstr1=='bonMass')",
              "            {",
              "            tint1=DD_hull_create[i];",
              "            tint1=100-tint1;",
              "            tstr4=''+tint1+'%';",
              "            }",
              "        if(tstr1=='bonResistAsteroid')",
              "            {",
              "            tint1=DD_hull_create[i];",
              "            tint1=100-tint1;",
              "            tstr4=''+tint1+'%';",
              "            }",
              "        if(findsubstr(tstr1,'Suspectibility')!=-1)",
              "            {",
              "            tint1=DD_hull_create[i];",
              "            tint1=tint1-150;",
              "            tint1=abs(tint1);",
              "            DD_hull_create[i]=tint1;",
              "            tstr4=''+tint1+'%';",
              "            }",
              "        tstr2=tstr2+' '+tstr4+\"<br>\";",
              "        }",
              "    tstr3=tstr3+tstr2;",
              "    }",
              "DD_hull_Stat=CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.HullText');",
              "DD_hull_Stat='</color>' + DeleteTags(Format(DD_hull_Stat,'[DD_hull_number]',DD_hull_number,'[var]',tstr3));",
              "tstr1=DD_hull_Stat+CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.DDCreateEquipmentWGunStatAdd');",
              "tstr2='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.DDCreateEquipmentWAReady');",
              "tstr3='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.DDCreateEquipmentWAChange');",
              "tstr4='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.Restart1');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1330,
          "Pos.y":  480,
          "Parent":  -1,
          "#":  204,
          "Code.Type":  "Turn",
          "Code":          
          [
              "InjectAnswer('CreateHull0',tstr2,102);",
              "InjectAnswer('CreateHull1',tstr3,0);",
              "DAnswer('restart~' + tstr4);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1550,
          "Pos.y":  480,
          "Parent":  -1,
          "#":  208,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//игрок отказывается от проекта, очищаем массивы и переменные",
              "DD_hull_ready=0; DD_hull_Stat='';",
              "ArrayClear(DD_hull_create); ArrayClear(DD_hull_cost);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1550,
          "Pos.y":  500,
          "Parent":  -1,
          "#":  211,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//DD_hull_create[0]=-1",
              "//DD_hull_create['MM']=0",
              "//DD_hull_create['Race']=0",
              "//DD_hull_create['Size']=300",
              "//DD_hull_create['SubRace']=0",
              "//DD_hull_create['SuspectibilityE']=0",
              "//DD_hull_create['SuspectibilityM']=0",
              "//DD_hull_create['SuspectibilityS']=0",
              "//DD_hull_create['Type']=0",
              "//DD_hull_create['bonHull']=0",
              "//DD_hull_create['bonMass']=0",
              "//DD_hull_create['bonResistAsteroid']=0",
              "//DD_hull_create['bonSkill1']=0",
              "//DD_hull_create['bonSkill2']=0",
              "//DD_hull_create['bonSkill3']=0",
              "//DD_hull_create['bonSlotArt']=0",
              "//DD_hull_create['bonSlotDef']=0",
              "//DD_hull_create['bonSlotDroid']=0",
              "//DD_hull_create['bonSlotForsage']=0",
              "//DD_hull_create['bonSlotHook']=0",
              "//DD_hull_create['bonSlotRadar']=0",
              "//DD_hull_create['bonSlotScaner']=0",
              "//DD_hull_create['bonSlotWeapon']=0",
              "//DD_hull_create['CalculateCost_Text']=Кредиты: 4000 cr, Ниргенд Азур: 1 т, Время разработки: 4 дней.",
              "//DD_hull_create['HullName']=Прототип",
              "//создаем корпус по параметрам из массива",
              "tint1 = DD_hull_create['Race'];",
              "if(tint1 == 8) tint1 = CT('DesignDepartmentModList.CreateEquipment.StellarStandartRace');",
              "if(tint1 < 7)cur_item=CreateHull(0,DD_hull_create['Size'],GalaxyTechLevel(),tint1,-1);",
              "else cur_item=CreateHull(0,DD_hull_create['Size'],GalaxyTechLevel(),Rnd(0,4),-1,1);",
              "ItemSubrace(cur_item,DD_hull_create['SubRace']);",
              "if(DD_hull_create['Race'] == 8)",
              "    {",
              "    if(ruin_CF != '') EqCustomFaction(cur_item, ruin_CF);",
              "    }",
              "",
              "tint1=DD_hull_create['Type'];",
              "tstr1=CT('DesignDepartmentModList.CreateEquipment.HullStat.Type.'+tint1);",
              "if(DD_hull_create['MM']==0)tstr1=tstr1+'_BlockMM';",
              "tint1=FindBonusByCustomTag(tstr1);",
              "if(tint1>-1)SpecialToEquipment(tint1,cur_item);",
              "",
              "for(i=1;i<ArrayDim(DD_hull_create);i=i+1)",
              "    {",
              "    tstr1=GetVariableName(DD_hull_create[i]);",
              "    if(findsubstr(tstr1,'bon')==-1)continue;",
              "    tint2=DD_hull_create[i];",
              "    if(tint2<1)continue;",
              "    tint1=FindBonusByCustomTag('DesignDepartment_CH_'+tstr1);",
              "    if(tint1>-1)ItemExtraSpecialsAddByType(cur_item,tint1,tint2);",
              "    }",
              "tint1=DD_hull_create['SuspectibilityE'];",
              "if(tint1!=HullDamageSuspectibility(cur_item,0))",
              "    {",
              "    if(tint1>HullDamageSuspectibility(cur_item,0))",
              "        {",
              "        tint3=FindBonusByNameInCfg('DesignDepartment_SuspectibilityEnergyPlus');",
              "        while(HullDamageSuspectibility(cur_item,0)!=tint1)",
              "            {",
              "            ItemExtraSpecialsAddByType(cur_item,tint3,1);",
              "            if(HullDamageSuspectibility(cur_item,0)>=tint1)break;",
              "            }",
              "        }",
              "    else if(tint1<HullDamageSuspectibility(cur_item,0))",
              "        {",
              "        tint3=FindBonusByNameInCfg('DesignDepartment_SuspectibilityEnergyMinus');",
              "        while(HullDamageSuspectibility(cur_item,0)!=tint1)",
              "            {",
              "            ItemExtraSpecialsAddByType(cur_item,tint3,1);",
              "            if(HullDamageSuspectibility(cur_item,0)<=tint1)break;",
              "            }",
              "        }",
              "    }",
              "tint1=DD_hull_create['SuspectibilityS'];",
              "if(tint1!=HullDamageSuspectibility(cur_item,1))",
              "    {",
              "    if(tint1>HullDamageSuspectibility(cur_item,1))",
              "        {",
              "        tint3=FindBonusByNameInCfg('DesignDepartment_SuspectibilitySplinterPlus');",
              "        while(HullDamageSuspectibility(cur_item,1)!=tint1)",
              "            {",
              "            ItemExtraSpecialsAddByType(cur_item,tint3,1);",
              "            if(HullDamageSuspectibility(cur_item,1)>=tint1)break;",
              "            }",
              "        }",
              "    else if(tint1<HullDamageSuspectibility(cur_item,1))",
              "        {",
              "        tint3=FindBonusByNameInCfg('DesignDepartment_SuspectibilitySplinterMinus');",
              "        while(HullDamageSuspectibility(cur_item,1)!=tint1)",
              "            {",
              "            ItemExtraSpecialsAddByType(cur_item,tint3,1);",
              "            if(HullDamageSuspectibility(cur_item,1)<=tint1)break;",
              "            }",
              "        }",
              "    }",
              "tint1=DD_hull_create['SuspectibilityM'];",
              "if(tint1!=HullDamageSuspectibility(cur_item,2))",
              "    {",
              "    if(tint1>HullDamageSuspectibility(cur_item,2))",
              "        {",
              "        tint3=FindBonusByNameInCfg('DesignDepartment_SuspectibilityMissilePlus');",
              "        while(HullDamageSuspectibility(cur_item,2)!=tint1)",
              "            {",
              "            ItemExtraSpecialsAddByType(cur_item,tint3,1);",
              "            if(HullDamageSuspectibility(cur_item,2)>=tint1)break;",
              "            }",
              "        }",
              "    else if(tint1<HullDamageSuspectibility(cur_item,2))",
              "        {",
              "        tint3=FindBonusByNameInCfg('DesignDepartment_SuspectibilityMissileMinus');",
              "        while(HullDamageSuspectibility(cur_item,2)!=tint1)",
              "            {",
              "            ItemExtraSpecialsAddByType(cur_item,tint3,1);",
              "            if(HullDamageSuspectibility(cur_item,2)<=tint1)break;",
              "            }",
              "        }",
              "    }",
              "if(DD_hull_create['HullName']!=CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.WeaponName'))",
              "    {",
              "    SetName(cur_item,DD_hull_create['HullName']);",
              "    }",
              "if(EqSpecial(cur_item) == -1)",
              "    {",
              "    tint1=FindBonusByNameInCfg('DesignDepartment_Empty_Locked');",
              "    if(tint1>-1)SpecialToEquipment(tint1,cur_item);",
              "    }",
              "AddItemToStorage(GetShipRuins(Player()),cur_item);",
              "DD_hull_number=DD_hull_number+1;",
              "//очищаем массивы и переменные",
              "DD_hull_ready=0; DD_hull_Stat='';",
              "ArrayClear(DD_hull_create); ArrayClear(DD_hull_cost);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1210,
          "Pos.y":  580,
          "Parent":  -1,
          "#":  218,
          "Code.Type":  "Turn",
          "Code":          
          [
              "OpenCustomForm('CustomForm_DDCreateEquipment_Equipments');",
              "//DD_Equipments_create[0]=-1",
              "//DD_Equipments_create['Frag']=50",
              "//DD_Equipments_create['ItemType']=0",
              "//DD_Equipments_create['MM']=0",
              "//DD_Equipments_create['Race']=0",
              "//DD_Equipments_create['Size']=15",
              "//DD_Equipments_create['SubRace']=0",
              "//DD_Equipments_create['bonDef']=0",
              "//DD_Equipments_create['bonDroid']=0",
              "//DD_Equipments_create['bonHook']=0",
              "//DD_Equipments_create['bonHull']=0",
              "//DD_Equipments_create['bonJump']=0",
              "//DD_Equipments_create['bonMass']=0",
              "//DD_Equipments_create['bonRadar']=0",
              "//DD_Equipments_create['bonScan']=0",
              "//DD_Equipments_create['bonSpeed']=0",
              "//DD_Equipments_create['bonWEnergy']=0",
              "//DD_Equipments_create['bonWMissile']=0",
              "//DD_Equipments_create['bonWRadius']=0",
              "//DD_Equipments_create['bonWSplinter']=0",
              "//DD_Equipments_create['CalculateCost_Text']=Кредиты: 15000 cr, Ниргенд Азур: 2 т, Время разработки: 15 дней.",
              "//DD_Equipments_create['ItemName']=Прототип",
              "ArrayClear(DD_Equipments_create); DD_Equipments_create[0]=-1;",
              "ArrayClear(DD_Equipments_cost); ArrayDelete(DD_Equipments_cost,0);",
              "tint1=CT('DesignDepartmentModList.CreateEquipment.Equipments',arr0);",
              "for(i=0;i<tint1;i=i+1)",
              "    {",
              "    tstr1=GetVariableName(arr0[i]);",
              "    ArrayAdd(DD_Equipments_create,InterfaceText('Ship','CFDD_'+tstr1),tstr1);",
              "    }",
              "ArrayAdd(DD_Equipments_create,InterfaceText('Ship','CFDD_CalculateCost_Text'),'CalculateCost_Text');",
              "ArrayAdd(DD_Equipments_create,InterfaceText('Ship','CFDD_ItemName'),'ItemName');",
              "tint1=CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Cost',arr0);",
              "tstr2=DD_Equipments_create['CalculateCost_Text'];",
              "for(i=0;i<tint1;i=i+1)",
              "    {",
              "    tstr1=arr0[i];",
              "    tstr1=substr(tstr1,0,findsubstr(tstr1, '['));",
              "    if(findsubstr(tstr2, tstr1)!=-1)",
              "        {",
              "        tint2=findsubstr(tstr2, tstr1);",
              "        tint2=tint2+count(tstr1);",
              "        tint3=0; tstr3='';",
              "        while(tstr3!=' ')",
              "            {",
              "            tstr3=substr(tstr2,tint2+tint3,1);",
              "            tint3=tint3+1;",
              "            if(tint3>tint2+20)break;",
              "            }",
              "        tint3=substr(tstr2,tint2,tint3);",
              "        ArrayAdd(DD_Equipments_cost,tint3,GetVariableName(arr0[i]));",
              "        }",
              "    }",
              "tstr3='';",
              "DD_Equipments_level=GalaxyTechLevel();",
              "//меняем вес на рассчетный чтобы хардкод создал топливный бак по своим формулам(вместимость бака зависит от веса)",
              "tint1=CT('DesignDepartmentModList.CreateEquipment.Equipments.Size.max');",
              "tint1=tint1-DD_Equipments_create['Size'];",
              "DD_Equipments_create['Size']=tint1;",
              "//устанавливаем некоторые параметры и формируем строку с текстом",
              "for(i=1;i<ArrayDim(DD_Equipments_create);i=i+1)",
              "    {",
              "    tstr4='';",
              "    tstr1=GetVariableName(DD_Equipments_create[i]);",
              "    if(tstr1=='CalculateCost_Text')continue;",
              "    if(tstr1=='ItemName')continue;",
              "    if(tstr1=='SubRace' && DD_Equipments_create['Race']!=5)continue;",
              "    tstr2=CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Equipments.'+tstr1+'.Name');",
              "    if(CT('DesignDepartmentModList.CreateEquipment.Equipments.'+tstr1+'.word')==1)",
              "        {",
              "        tstr4=CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Equipments.'+tstr1+'.'+DD_Equipments_create[i]);",
              "        tstr2=tstr2+' '+tstr4+\"<br>\";",
              "        if(tstr1=='ItemType')",
              "            {",
              "            cur_item=CreateEquipment(t_FuelTanks+DD_Equipments_create['ItemType'],DD_Equipments_create['Size'],DD_Equipments_level,DD_Equipments_create['Race']);",
              "            tstr4=CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Equipments.ItemType.ParamText.'+DD_Equipments_create[i]+'.0');",
              "            if(tstr4!='')",
              "                {",
              "                tstr4=Format(tstr4,'[var]',GetEquipmentStats(cur_item,0));",
              "                tstr2=tstr2+tstr4+\"<br>\";",
              "                }",
              "            tstr4=CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Equipments.ItemType.ParamText.'+DD_Equipments_create[i]+'.1');",
              "            if(tstr4!='')",
              "                {",
              "                tstr4=Format(tstr4,'[var]',GetEquipmentStats(cur_item,1));",
              "                tstr2=tstr2+tstr4+\"<br>\";",
              "                }",
              "            FreeItem(cur_item);",
              "            }",
              "        }",
              "    else",
              "        {",
              "        tstr4=DD_Equipments_create[i];",
              "        if(tstr1=='bonMass')",
              "            {",
              "            tint1=DD_Equipments_create[i];",
              "            tint1=100-tint1;",
              "            tstr4=''+tint1+'%';",
              "            }",
              "        if(tstr1=='Frag')",
              "            {",
              "            tint1=50+DD_Equipments_create[i];",
              "            DD_Equipments_create[i]=tint1;",
              "            tstr4=''+tint1+'%';",
              "            }",
              "        if(tstr1=='Size')",
              "            {",
              "//            tint1=CT('DesignDepartmentModList.CreateEquipment.Equipments.'+tstr1+'.max');",
              "//            tint1=tint1-DD_Equipments_create[i];",
              "//            DD_Equipments_create[i]=tint1;",
              "//            tstr4=tint1;",
              "            tstr4=DD_Equipments_create[i];",
              "            }",
              "        if(DD_Equipments_create[i]==0)continue;",
              "        tstr2=tstr2+' '+tstr4+\"<br>\";",
              "        }",
              "    tstr3=tstr3+tstr2;",
              "    }",
              "DD_Equipments_Stat=CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.EquipmentsText');",
              "DD_Equipments_Stat='</color>' + DeleteTags(Format(DD_Equipments_Stat,'[var]',tstr3));",
              "tstr1=DD_Equipments_Stat+CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.DDCreateEquipmentWGunStatAdd');",
              "tstr2='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.DDCreateEquipmentWAReady');",
              "tstr3='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.DDCreateEquipmentWAChange');",
              "tstr4='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.Restart1');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1330,
          "Pos.y":  580,
          "Parent":  -1,
          "#":  220,
          "Code.Type":  "Turn",
          "Code":          
          [
              "InjectAnswer('Equipments0',tstr2,102);",
              "InjectAnswer('Equipments1',tstr3,0);",
              "DAnswer('restart~' + tstr4);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1180,
          "Pos.y":  600,
          "Parent":  -1,
          "#":  221,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(GAnswerData>10000)",
              "    {",
              "    cur_item=GAnswerData;",
              "    Sound('Sound.Drop');",
              "    for(i=0;i<ArrayDim(DD_Equipments_cost);i=i+1)",
              "        {",
              "        tstr1=GetVariableName(DD_Equipments_cost[i]);",
              "        if(tstr1=='Time')continue;",
              "        if(tstr1=='Credits')continue;",
              "        if(ItemType(cur_item)==t_UselessCountableItem)",
              "            {",
              "            if(EquipmentImageName(cur_item)!=tstr1)continue;",
              "            tint1=DD_Equipments_cost[i]-ItemSize(cur_item);",
              "            if(tint1>=0)tint1=ItemSize(cur_item);",
              "            else tint1=DD_Equipments_cost[i];",
              "            DD_Equipments_cost[i]=DD_Equipments_cost[i]-tint1;",
              "            if(DD_Equipments_cost[i]==0)ArrayDelete(DD_Equipments_cost,i);",
              "            ItemSize(cur_item,ItemSize(cur_item)-tint1);",
              "            if(ItemSize(cur_item)==0)",
              "                {",
              "                cur_item=GetItemFromShip(Player(),cur_item);",
              "                FreeItem(cur_item);",
              "                }",
              "            break;",
              "            }",
              "        if(ItemType(cur_item)==t_Protoplasm)",
              "            {",
              "            if(findsubstr(tstr1,'t_Protoplasm')==-1)continue;",
              "            tint2=tstr1;",
              "            if(ItemSubrace(cur_item)!=tint2)continue;",
              "            tint1=DD_Equipments_cost[i]-ItemSize(cur_item);",
              "            if(tint1>=0)tint1=ItemSize(cur_item);",
              "            else tint1=DD_Equipments_cost[i];",
              "            DD_Equipments_cost[i]=DD_Equipments_cost[i]-tint1;",
              "            if(DD_Equipments_cost[i]==0)ArrayDelete(DD_Equipments_cost,i);",
              "            GetNodesFromShip(Player(),tint1,tint2);",
              "            break;",
              "            }",
              "        }",
              "    if(ArrayDim(DD_Equipments_cost)!=1)GAnswerData=102;",
              "    else",
              "        {",
              "        GAnswerData=101;",
              "        tint1=CurTurn()+DD_Equipments_cost['Time'];",
              "        DD_Equipments_ready=tint1;",
              "        }",
              "    }",
              "if(GAnswerData<t_Artefact)",
              "    {",
              "    check=GAnswerData;",
              "    Sound('Sound.Drop');",
              "    for(i=0;i<ArrayDim(DD_Equipments_cost);i=i+1)",
              "        {",
              "        tstr1=GetVariableName(DD_Equipments_cost[i]);",
              "        if(tstr1=='Time')continue;",
              "        if(tstr1=='Credits')continue;",
              "        if(findsubstr(tstr1,'DesignDepartment')!=-1)continue;",
              "        if(findsubstr(tstr1,'t_Protoplasm')!=-1)continue;",
              "        tint1=GetValueFromScript('',tstr1);",
              "        if(tint1!=check)continue;",
              "        tint2=DD_Equipments_cost[i]-GoodsCount(Player(),tint1);",
              "        if(tint2>=0)tint2=GoodsCount(Player(),tint1);",
              "        else tint2=DD_Equipments_cost[i];",
              "        DD_Equipments_cost[i]=DD_Equipments_cost[i]-tint2;",
              "        if(DD_Equipments_cost[i]==0)ArrayDelete(DD_Equipments_cost,i);",
              "        ShipGoods(Player(),tint1,-tint2);",
              "        break;",
              "        }",
              "    if(ArrayDim(DD_Equipments_cost)!=1)GAnswerData=102;",
              "    else",
              "        {",
              "        GAnswerData=101;",
              "        tint1=CurTurn()+DD_Equipments_cost['Time'];",
              "        DD_Equipments_ready=tint1;",
              "        }",
              "    }",
              "if(GAnswerData==99)",
              "    {",
              "    Sound('Sound.Sell');",
              "    for(i=0;i<ArrayDim(DD_Equipments_cost);i=i+1)",
              "        {",
              "        tstr1=GetVariableName(DD_Equipments_cost[i]);",
              "        if(tstr1!='Credits')continue;",
              "        tint1=DD_Equipments_cost[i]-ShipMoney(Player());",
              "        if(tint1>=0)tint1=ShipMoney(Player());",
              "        else tint1=DD_Equipments_cost[i];",
              "        DD_Equipments_cost[i]=DD_Equipments_cost[i]-tint1;",
              "        if(DD_Equipments_cost[i]==0)ArrayDelete(DD_Equipments_cost,i);",
              "        ShipMoney(Player(),ShipMoney(Player())-tint1);",
              "        break;",
              "        }",
              "    if(ArrayDim(DD_Equipments_cost)!=1)GAnswerData=102;",
              "    else",
              "        {",
              "        GAnswerData=101;",
              "        tint1=CurTurn()+DD_Equipments_cost['Time'];",
              "        DD_Equipments_ready=tint1;",
              "        }",
              "    }",
              "if(GAnswerData==100)",
              "    {",
              "    check2=0;",
              "    tstr1='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.DDCreateEquipmentWD0');",
              "    tstr2='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.DDCreateEquipmentWA1');",
              "    }",
              "if(GAnswerData==101)",
              "    {",
              "    tstr2='';",
              "    tstr2=CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Cost.Time');",
              "    tstr1=DD_Equipments_Stat;",
              "    if(DD_Equipments_ready==0)tstr2=Format(tstr2,'[var]',DD_Equipments_cost['Time']);",
              "    else",
              "        {",
              "        if(CurTurn()<DD_Equipments_ready)tstr2=Format(tstr2,'[var]',DD_Equipments_ready-CurTurn());",
              "        }",
              "    tstr1=DD_Equipments_Stat+tstr2;",
              "    tstr1='</color>'+DeleteTags(tstr1);",
              "    }",
              "if(GAnswerData==102)",
              "    {",
              "    tstr1='';",
              "    tint1=CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Cost',arr0);",
              "    for(i=0;i<ArrayDim(DD_Equipments_cost);i=i+1)",
              "        {",
              "        if(GetVariableName(DD_Equipments_cost[i])=='Time')continue;",
              "        tstr1=tstr1+\"<br>\"+Format(arr0[GetVariableName(DD_Equipments_cost[i])],'[var]',DD_Equipments_cost[i]);",
              "        }",
              "    tstr2=CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.DDCreateEquipmentWCost');",
              "    tstr1='</color>'+Format(tstr2,'[var]',tstr1);",
              "    }"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1330,
          "Pos.y":  600,
          "Parent":  -1,
          "#":  223,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(GAnswerData==100)InjectAnswer('Equipments1',tstr2,0);",
              "if(ArrayDim(DD_Equipments_cost)>1)",
              "    {",
              "    if(ArrayDim(DD_Equipments_create)>2)",
              "        {",
              "        tstr3='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.CancelCreateEquipmentsR');",
              "        InjectAnswer('DDGetItem',tstr3,700);",
              "        }",
              "    }",
              "if(GAnswerData==101)",
              "    {",
              "    if(ArrayDim(DD_Equipments_cost)!=1)",
              "        {",
              "        tstr2='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.DDCreateEquipmentWShowCost');",
              "        InjectAnswer('Equipments0',tstr2,102);",
              "        }",
              "    if(ArrayDim(DD_Equipments_create)>2 && CT('DesignDepartmentModList.TestCreate')==1)",
              "        {",
              "        //тестовая реплика",
              "        tstr3='I TESTER give my Equipments now!';",
              "        InjectAnswer('DDGetItem',tstr3,799);",
              "        }",
              "    }",
              "if(GAnswerData==102)",
              "    {",
              "    tstr2=CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.DDCreateEquipmentWShowStat');",
              "    if(ArrayDim(DD_Equipments_create)>2 && CT('DesignDepartmentModList.TestCreate')==1)",
              "        {",
              "        //тестовая реплика",
              "        tstr3='I TESTER give my Equipments now!';",
              "        InjectAnswer('DDGetItem',tstr3,799);",
              "        }",
              "    InjectAnswer('Equipments0',tstr2,101);",
              "    ArrayClear(arr0); ArrayDelete(arr0,0);",
              "    for(i=0;i<ShipItems(Player());i=i+1)",
              "        {",
              "        cur_item=ShipItems(Player(),i);",
              "        if(ItemType(cur_item)<t_Protoplasm)continue;",
              "        ArrayAdd(arr0,ItemType(cur_item),cur_item);",
              "        }",
              "    for(i=0;i<ArrayDim(DD_Equipments_cost);i=i+1)",
              "        {",
              "        tstr1=GetVariableName(DD_Equipments_cost[i]);",
              "        if(tstr1=='Time')continue;",
              "        if(tstr1=='Credits')",
              "            {",
              "            if(ShipMoney(Player()) < 1) continue;            ",
              "            tint1=DD_Equipments_cost[i]-ShipMoney(Player());",
              "            if(tint1>=0)tint1=ShipMoney(Player());",
              "            else tint1=DD_Equipments_cost[i];",
              "            tstr2=CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Pay.Credits');",
              "            tstr2=tstr2+' '+lowercase(CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Cost.'+tstr1));",
              "            tstr2='</color>' + Format(tstr2,'[var]',tint1);",
              "            InjectAnswer('Equipments0',tstr2,99);",
              "            }",
              "        if(tstr1=='Credits')continue;",
              "        if(findsubstr(tstr1,'DesignDepartment')!=-1)",
              "            {",
              "            tint1=t_UselessCountableItem;",
              "            for(j=0;j<ArrayDim(arr0);j=j+1)",
              "                {",
              "                cur_item=GetVariableName(arr0[j]);",
              "                if(arr0[j]!=tint1)continue;",
              "                if(EquipmentImageName(cur_item)!=tstr1)continue;",
              "                tint1=DD_Equipments_cost[i]-ItemSize(cur_item);",
              "                if(tint1>=0)tint1=ItemSize(cur_item);",
              "                else tint1=DD_Equipments_cost[i];",
              "                tstr2=CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Pay.Items');",
              "                tstr2=tstr2+' '+lowercase(CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Cost.'+tstr1));",
              "                tstr2='</color>' + Format(tstr2,'[var]',tint1);",
              "                InjectAnswer('Equipments0',tstr2,cur_item);",
              "                }",
              "            }",
              "        else if(findsubstr(tstr1,'t_Protoplasm')!=-1)",
              "            {",
              "            tint1=t_Protoplasm;",
              "            for(j=0;j<ArrayDim(arr0);j=j+1)",
              "                {",
              "                cur_item=GetVariableName(arr0[j]);",
              "                tint2=tstr1;",
              "                if(arr0[j]!=tint1)continue;",
              "                if(ItemSubrace(cur_item)!=tint2)continue;",
              "                tint1=DD_Equipments_cost[i]-ItemSize(cur_item);",
              "                if(tint1>=0)tint1=ItemSize(cur_item);",
              "                else tint1=DD_Equipments_cost[i];",
              "                tstr2=CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Pay.Items');",
              "                tstr2=tstr2+' '+lowercase(CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Cost.'+tstr1));",
              "                tstr2='</color>' + Format(tstr2,'[var]',tint1);",
              "                InjectAnswer('Equipments0',tstr2,cur_item);",
              "                }",
              "            }",
              "        else",
              "            {",
              "            tint1=GetValueFromScript('',tstr1);",
              "            if(tint1>t_Narcotics)continue;",
              "            if(GoodsCount(Player(),tint1)>0)",
              "                {",
              "                tint2=DD_Equipments_cost[i]-GoodsCount(Player(),tint1);",
              "                if(tint2>=0)tint2=GoodsCount(Player(),tint1);",
              "                else tint2=DD_Equipments_cost[i];",
              "                tstr2=CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Pay.Items');",
              "                tstr2=tstr2+' '+lowercase(CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Cost.'+tstr1));",
              "                tstr2='</color>' + Format(tstr2,'[var]',tint2);",
              "                InjectAnswer('Equipments0',tstr2,tint1);",
              "                }",
              "            }",
              "        }",
              "    }",
              "tstr4='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.Restart0');",
              "if(GAnswerData==100)tstr4='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.Talks.Restart3');",
              "DAnswer('restart~' + tstr4);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1550,
          "Pos.y":  580,
          "Parent":  -1,
          "#":  228,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//игрок отказывается от проекта, очищаем массивы и переменные",
              "DD_Equipments_ready=0; DD_Equipments_Stat='';",
              "ArrayClear(DD_Equipments_create); ArrayClear(DD_Equipments_cost);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1550,
          "Pos.y":  600,
          "Parent":  -1,
          "#":  229,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//DD_Equipments_create[0]=-1",
              "//DD_Equipments_create['Frag']=50",
              "//DD_Equipments_create['ItemType']=0",
              "//DD_Equipments_create['MM']=0",
              "//DD_Equipments_create['Race']=0",
              "//DD_Equipments_create['Size']=15",
              "//DD_Equipments_create['SubRace']=0",
              "//DD_Equipments_create['bonDef']=0",
              "//DD_Equipments_create['bonDroid']=0",
              "//DD_Equipments_create['bonHook']=0",
              "//DD_Equipments_create['bonHull']=0",
              "//DD_Equipments_create['bonJump']=0",
              "//DD_Equipments_create['bonMass']=0",
              "//DD_Equipments_create['bonRadar']=0",
              "//DD_Equipments_create['bonScan']=0",
              "//DD_Equipments_create['bonSpeed']=0",
              "//DD_Equipments_create['bonWEnergy']=0",
              "//DD_Equipments_create['bonWMissile']=0",
              "//DD_Equipments_create['bonWRadius']=0",
              "//DD_Equipments_create['bonWSplinter']=0",
              "//DD_Equipments_create['CalculateCost_Text']=Кредиты: 15000 cr, Ниргенд Азур: 2 т, Время разработки: 15 дней.",
              "//DD_Equipments_create['ItemName']=Прототип",
              "//создаем оборудку по параметрам из массива",
              "tint1=t_FuelTanks+DD_Equipments_create['ItemType'];",
              "tint2=DD_Equipments_create['Size'];",
              "tint3=DD_Equipments_create['Race'];",
              "if(tint3 == 8) tint3 = CT('DesignDepartmentModList.CreateEquipment.StellarStandartRace');",
              "cur_item=CreateEquipment(tint1,tint2,DD_Equipments_level,tint3);",
              "if(DD_Equipments_create['Race'] == 8)",
              "    {",
              "    if(ruin_CF != '') EqCustomFaction(cur_item, ruin_CF);",
              "    }",
              "tstr4=ItemFullName(cur_item);",
              "tint1=DD_Equipments_create['SubRace'];",
              "ItemSubrace(cur_item,tint1);",
              "tint1=DD_Equipments_create['MM'];",
              "if(tint1==0)",
              "    {",
              "    tint1=FindBonusByCustomTag('DesignDepartment_CH_BlockMM');",
              "    if(tint1>-1)SpecialToEquipment(tint1,cur_item);",
              "    }",
              "",
              "for(i=1;i<ArrayDim(DD_Equipments_create);i=i+1)",
              "    {",
              "    tstr1=GetVariableName(DD_Equipments_create[i]);",
              "    if(findsubstr(tstr1,'bon')==-1)continue;",
              "    tint2=DD_Equipments_create[i];",
              "    if(tint2<1)continue;",
              "    tint1=FindBonusByCustomTag('DesignDepartment_CH_'+tstr1);",
              "    if(tint1>-1)ItemExtraSpecialsAddByType(cur_item,tint1,tint2);",
              "    }",
              "",
              "tint1=DD_Equipments_create['Frag'];",
              "if(tint1!=100)",
              "    {",
              "    if(tint1>100)",
              "        {",
              "        tint2=FindBonusByCustomTag('DesignDepartment_CG_FragilityPlus');",
              "        if(tint2>-1)ItemExtraSpecialsAddByType(cur_item,tint2,tint1-100);",
              "        }",
              "    else",
              "        {",
              "        tint2=FindBonusByCustomTag('DesignDepartment_CG_FragilityMinus');",
              "        if(tint2>-1)ItemExtraSpecialsAddByType(cur_item,tint2,100-tint1);",
              "        }",
              "    }",
              "if(DD_Equipments_create['ItemName']!=CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentCreateEquipment.WeaponName'))",
              "    {",
              "    SetName(cur_item,DD_Equipments_create['ItemName']);",
              "    }",
              "else",
              "    {",
              "    tstr4=tstr4+' '+CT('DesignDepartmentModList.CreateEquipment.EquipmentsStat.Name');",
              "    SetName(cur_item,tstr4);",
              "    }",
              "if(EqSpecial(cur_item) == -1)",
              "    {",
              "    tint1=FindBonusByNameInCfg('DesignDepartment_Empty_Locked');",
              "    if(tint1>-1)SpecialToEquipment(tint1,cur_item);",
              "    }",
              "AddItemToShip(Player(),cur_item);",
              "//очищаем массивы и переменные",
              "DD_Equipments_ready=0; DD_Equipments_Stat='';",
              "ArrayClear(DD_Equipments_create); ArrayClear(DD_Equipments_cost);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  860,
          "Pos.y":  100,
          "Parent":  -1,
          "#":  235,
          "Code.Type":  "Turn",
          "Code":          
          [
              "cur_ruin = GetShipRuins(Player());",
              "tstr1 = 'GetData(0, cur_ruin): '+GetData(0, cur_ruin);",
              "tstr1 = tstr1 + \"<br>\" + 'AddItemToShip(Player(),MakeBlueprint(0, X, N));';",
              "tstr1 = tstr1 + \"<br>\" + 'Х - тип чертежа который надо создать. для корпусов t_Hull, для остальных смотреть параметр Type в чертежах. например Type=t_FuelTanks для бака будет t_FuelTanks.';",
              "tstr1 = tstr1 + \"<br>\" + 'N - номер чертежа в папке нужного типа чертежей. например AddItemToShip(Player(), MakeBlueprint(0, t_Hull, 25)); создаст чертеж Артемиды.';",
              "tstr1 = tstr1 + \"<br>\" + 'ShipMoney(Player(), X); изменить деньги игрока на Х.';",
              "tstr1 = tstr1 + \"<br>\" + 'AddItemToShip(Player(), CreateCustomCountableItem(\\\\\\' DesignDepartment_NoneItem\\\\\\', Х)); создать Х Нанов.';",
              "tstr1 = tstr1 + \"<br>\" + 'AddItemToShip(Player(), CreateCustomCountableItem(\\\\\\' DesignDepartment_NirgendAzur\\\\\\', Х)); создать Х Азур.';",
              "tstr1 = tstr1 + \"<br>\" + 'AddItemToShip(Player(), CreateNodes(Х, S)); создать Х нодов серии домиков S.';",
              "tstr1 = tstr1 + \"<br>\" + 'GoodsAdd(Player(), T, N); добавить тип товара T(типы: t_Food, t_Medicine, t_Technics, t_Luxury, t_Minerals, t_Alcohol, t_Arms, t_Narcotics) количеством N в трюм игрока.';",
              "tstr4 = 'DD_console';"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  860,
          "Pos.y":  60,
          "Parent":  -1,
          "#":  236,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tstr1='';",
              "tstr1=TextBox('put_code_here:', '', 999999999);",
              "if(tstr1!='')ExecuteCodeFromString(tstr1);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  920,
          "Pos.y":  100,
          "Parent":  -1,
          "#":  237,
          "Code.Type":  "Turn",
          "Code":          
          [
              "DAnswer('restart~' + 'Exit_Dialog');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1150,
          "Pos.y":  680,
          "Parent":  -1,
          "#":  239,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tstr1='';",
              "//если пришло время выбираем новые ММ для продажи",
              "if(CurTurn()>=newMMlist)",
              "    {",
              "//старый костыль для переменной день постройки КБ, не забыть удалить",
              "    if(DDCreateDay == '')",
              "        {",
              "        DDCreateDay = GameDateTxtByTurn(CurTurn()+15);",
              "        DDCreateDay = substr(DDCreateDay, 0, count(DDCreateDay) - 4);",
              "        }",
              "    //buyMMarr[0,0] какой ММ покупаем 1-3 или -1 если не покупаем",
              "    //buyMMarr[0,1] ММ 1 типа выбранный случайно",
              "    //buyMMarr[0,2] ММ 2 типа выбранный случайно",
              "    //buyMMarr[0,3] ММ 3 типа выбранный случайно",
              "    //buyMMarr[0,4] цена ММ 1 типа",
              "    //buyMMarr[0,5] цена ММ 2 типа",
              "    //buyMMarr[0,6] цена ММ 3 типа",
              "    //buyMMarr[1,0] количество ММ 1 типа, buyMMarr[1,1-N] - имена ММ в разделе MicroModuls(папок, а не Name)",
              "    //buyMMarr[2,0] количество ММ 2 типа, buyMMarr[2,1-N] - имена ММ в разделе MicroModuls(папок, а не Name)",
              "    //buyMMarr[3,0] количество ММ 3 типа, buyMMarr[3,1-N] - имена ММ в разделе MicroModuls(папок, а не Name)",
              "//ход обновления списка ММ",
              "    newMMlist = CurTurn() + Rnd(28,31);",
              "//фомрируем массив всех доступных ММ",
              "    tint1 = CT('MicroModuls',arr0);",
              "    ArrayClear(arr1); ArrayDelete(arr1, 0);",
              "//добавляем в массив все ММ вида Stellar_MM_ХХХ",
              "    for(i=0;i<tint1;i=i+1)",
              "        {",
              "        tstr2=GetVariableName(arr0[i]);",
              "        if(findsubstr(tstr2, 'Stellar_MM') == -1)continue;",
              "        ArrayAdd(arr1, tstr2);",
              "        }",
              "//формируем массив для продажи",
              "    buyMMarr = newarray(4,ArrayDim(arr1));",
              "    buyMMarr[0,0] = -1;",
              "    buyMMarr[1,0] = 0;buyMMarr[2,0] = 0;buyMMarr[3,0] = 0;",
              "//выбираем из общего массива ММ по типу 1/2/3(у них KindGraph=Stellar1/Stellar2/Stellar3)",
              "    for(i=0;i<ArrayDim(arr1);i=i+1)",
              "        {",
              "        tstr2=CT('MicroModuls.'+arr1[i]+'.KindGraph');",
              "        if(findsubstr(tstr2, 'Stellar1') != -1)",
              "            {",
              "            buyMMarr[1,0] = buyMMarr[1,0] + 1;",
              "            buyMMarr[1,buyMMarr[1,0]] = arr1[i];",
              "            }",
              "        if(findsubstr(tstr2, 'Stellar2') != -1)",
              "            {",
              "            buyMMarr[2,0] = buyMMarr[2,0] + 1;",
              "            buyMMarr[2,buyMMarr[2,0]] = arr1[i];",
              "            }",
              "        if(findsubstr(tstr2, 'Stellar3') != -1)",
              "            {",
              "            buyMMarr[3,0] = buyMMarr[3,0] + 1;",
              "            buyMMarr[3,buyMMarr[3,0]] = arr1[i];",
              "            }",
              "        }",
              "//цена и кол-во ММ для продажи",
              "    for(i=1;i<4;i=i+1)",
              "        {",
              "        buyMMarr[0,i] = buyMMarr[i, Rnd(1, buyMMarr[i,0] - 1)];",
              "        tint2 = CT('MicroModuls.'+buyMMarr[0,i]+'.CostNirgend');",
              "        if(tint2 == 0) tint2 = 100;",
              "        buyMMarr[0, i + 3] = tint2;",
              "        tint2 = CT('MicroModuls.'+buyMMarr[0,i]+'.CountBuy');",
              "        if(tint2 == 0) tint2 = 5;",
              "        buyMMarr[i,0] = tint2;",
              "        }",
              "    }",
              "cost = 1;",
              "//если сегодня день постройки КБ, то цена в 2 раза меньше",
              "if(findsubstr(GameDateTxtByTurn(CurTurn()), DDCreateDay) != -1) cost = 2;",
              "//если купили ММ",
              "if(buyMMarr[0,0] != -1)",
              "    {",
              "//ищем азуру у игрока и изымаем нужное кол-во",
              "    for(i=0;i<ShipItems(Player());i=i+1)",
              "        {",
              "        cur_item=ShipItems(Player(),i);",
              "        if(ItemType(cur_item) != t_UselessCountableItem)continue;",
              "        if(EquipmentImageName(cur_item) != 'DesignDepartment_NirgendAzur')continue;",
              "        tint1 = ItemSize(cur_item) - buyMMarr[0, 3 + buyMMarr[0,0]] / cost;",
              "        ItemSize(cur_item, tint1);",
              "        if(ItemSize(cur_item) == 0)",
              "            {",
              "            cur_item=GetItemFromShip(Player(),cur_item);",
              "            FreeItem(cur_item);",
              "            }",
              "        break;",
              "        }",
              "//создаем нужный ММ и добавляем в трюм игрока",
              "    tint1 = FindBonusByNameInCfg(buyMMarr[0,buyMMarr[0,0]]);",
              "    cur_item = CreateMM(tint1);",
              "    if(ruin_CF != '') EqCustomFaction(cur_item, ruin_CF);",
              "    AddItemToShip(Player(), cur_item);",
              "    buyMMarr[buyMMarr[0,0],0] = buyMMarr[buyMMarr[0,0],0] - 1;",
              "    buyMMarr[0,0] = -1;",
              "    Sound('Sound.Sell');",
              "    }",
              "//текст для диалога о продаже ММ",
              "if(cost == 2) tstr1 = CT('Script.Mod_ArtiDesignDepartment.BuyMM.Have_MM_Special');",
              "else tstr1 = CT('Script.Mod_ArtiDesignDepartment.BuyMM.Have_MM');",
              "for(i=1;i<4;i=i+1)",
              "    {",
              "    tint1 = FindBonusByNameInCfg(buyMMarr[0,i]);",
              "    tstr1 = tstr1 + Format(CT('Script.Mod_ArtiDesignDepartment.BuyMM.Name_MM'), '[var1]', i, '[var2]', BonusName(tint1));",
              "    tstr1 = tstr1 + Format(CT('Script.Mod_ArtiDesignDepartment.BuyMM.Cost_MM'), '[var]', buyMMarr[0, i + 3] / cost);",
              "    if(buyMMarr[i,0] > 0) tstr1 = tstr1 + Format(CT('Script.Mod_ArtiDesignDepartment.BuyMM.Count_MM_1'),'[var]',buyMMarr[i,0]);",
              "    else tstr1 = tstr1 + CT('Script.Mod_ArtiDesignDepartment.BuyMM.Count_MM_0');",
              "    tstr1 = tstr1 + BonusText(tint1) + CT('Script.Mod_ArtiDesignDepartment.BuyMM.AddText_MM');",
              "    }",
              "tstr1 = '</color>' + tstr1 + CT('Script.Mod_ArtiDesignDepartment.BuyMM.AddText_Buy');",
              "if(buyMMarr[1,0] + buyMMarr[2,0] + buyMMarr[3,0] == 0) tstr1 = '</color>' + CT('Script.Mod_ArtiDesignDepartment.BuyMM.No_More_MM');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1290,
          "Pos.y":  680,
          "Parent":  -1,
          "#":  241,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//проверяем сколько у игрока азуры",
              "check=0;",
              "for(i=0;i<ShipItems(Player());i=i+1)",
              "    {",
              "    cur_item=ShipItems(Player(),i);",
              "    if(ItemType(cur_item) != t_UselessCountableItem)continue;",
              "    if(EquipmentImageName(cur_item) != 'DesignDepartment_NirgendAzur')continue;",
              "    check = check + ItemSize(cur_item);",
              "    break;",
              "    }",
              "//реплики для покупки ММ    ",
              "for(i=1;i<4;i=i+1)",
              "    {",
              "    tint1 = FindBonusByNameInCfg(buyMMarr[0,i]);",
              "    tstr1 = '</color>' + CT('Script.Mod_ArtiDesignDepartment.BuyMM.PlayerYes');",
              "    tstr1 = Format(tstr1, '[Name]', BonusName(tint1));",
              "    if(buyMMarr[i,0] < 1) continue;",
              "    if(buyMMarr[0, 3 + i] / cost > check) tstr1 = 'block~' + tstr1;",
              "    InjectAnswer('DDBuyMM', tstr1, 0, 'buyMMarr[0,0] = '+i+';');",
              "    }",
              "tstr4='</color>'+CT('Script.Mod_ArtiDesignDepartment.BuyMM.PlayerNo');",
              "DAnswer('restart~' + tstr4);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  980,
          "Pos.y":  600,
          "Parent":  -1,
          "#":  247,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tstr1='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentRecycle.Talks.RecycleKlissan');",
              "tstr3='';",
              "//надбавка за ТУ выше ГТУ",
              "tint3=CT('DesignDepartmentModList.Recycle.BonusLevelKlissan');",
              "//сдача клисанксой оборудки",
              "if(GAnswerData>0)",
              "    {",
              "//рассчитываем кол-во протоплазмы и добавляем в трюм игроку",
              "    check=0;",
              "    if(ItemLevel(GAnswerData)>GalaxyTechLevel())check=ItemLevel(GAnswerData)-GalaxyTechLevel();",
              "    tint1=ItemSize(GAnswerData);",
              "    tint1=(tint1 * (check * tint3 + ItemDurability(GAnswerData)))/100;",
              "    cur_item=CreateCustomCountableItem('KlissanProtoplasm',tint1);",
              "    ItemOwner(cur_item,ShipOwner(GetShipRuins(Player())));",
              "    EqCustomFaction(cur_item, 'Klissan');",
              "    tstr3='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentRecycle.Talks.RecycleDone');",
              "    tstr3=Format(tstr3,'[var]',Name(GAnswerData),'[var2]',Name(cur_item),'[var3]',tint1);",
              "    AddItemToShip(Player(),cur_item);",
              "    cur_item=GAnswerData;",
              "    GetItemFromShip(Player(),cur_item);",
              "    FreeItem(cur_item);",
              "    Sound('Sound.Repair');",
              "    }",
              "//перебираем трюм и формируем строку для диалога",
              "tstr2=''; tint1=0; tstr4=CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentRecycle.Talks.AddTextKlissan');",
              "for(i=0;i<ShipItems(Player());i=i+1)",
              "    {",
              "    cur_item=ShipItems(Player(),i);",
              "    if(EqCustomFaction(cur_item)!='Klissan')continue;",
              "    if(ItemType(cur_item)<t_FuelTanks)continue;",
              "    if(ItemType(cur_item)>t_CustomWeapon)continue;",
              "    if(ItemIsInUse(cur_item))continue;",
              "    if(ItemInScript(cur_item))",
              "        {",
              "        tint2 = EqSpecial(cur_item);",
              "        if(tint2 > -1)",
              "            {",
              "            if(!CT('MicroModuls.' + BonusNumInCfg(tint2) + '.ScriptItemIgnore')) continue;",
              "            }",
              "        else continue;",
              "        }",
              "    check=0;",
              "    if(ItemLevel(cur_item)>GalaxyTechLevel())check=ItemLevel(cur_item)-GalaxyTechLevel();",
              "    tint2=ItemSize(cur_item);",
              "    tint2=(tint2 * (check * tint3 + ItemDurability(cur_item)))/100;",
              "    if(tint2<1)continue;",
              "    tint1=tint1+1;",
              "    tstr2=tstr2+\"<br>\"+tint1+': '+DeleteTags(Name(cur_item))+' '+ItemSize(cur_item)+' '+tstr4;",
              "    tstr2=Format(tstr2,'[var]',tint2);",
              "    }",
              "if(tstr2=='')tstr2='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentRecycle.Talks.RecycleListEmpty');",
              "else tstr2=Format(CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentRecycle.Talks.RecycleList'),'[list]',tstr2);",
              "tstr1=tstr1+tstr3+tstr2;",
              "tstr4='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentRecycle.Talks.Restart');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1050,
          "Pos.y":  600,
          "Parent":  -1,
          "#":  249,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//перебираем трюм игрока и формируем список на сдачу предметов",
              "for(i=0;i<ShipItems(Player());i=i+1)",
              "    {",
              "    cur_item=ShipItems(Player(),i);",
              "    if(EqCustomFaction(cur_item)!='Klissan')continue;",
              "    if(ItemType(cur_item)<t_FuelTanks)continue;",
              "    if(ItemType(cur_item)>t_CustomWeapon)continue;",
              "    if(ItemIsInUse(cur_item))continue;",
              "    if(ItemInScript(cur_item))",
              "        {",
              "        tint2 = EqSpecial(cur_item);",
              "        if(tint2 > -1)",
              "            {",
              "            if(!CT('MicroModuls.' + BonusNumInCfg(tint2) + '.ScriptItemIgnore')) continue;",
              "            }",
              "        else continue;",
              "        }",
              "    InjectAnswer('DDRecycleKlissan',DeleteTags(Name(cur_item))+' '+ItemSize(cur_item)+' т.',cur_item);",
              "    }",
              "DAnswer('restart~' + tstr4);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1330,
          "Pos.y":  680,
          "Parent":  -1,
          "#":  251,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//выводи нужный текст из Script.Mod_ArtiDesignDepartment.AboutDD",
              "tstr1 = '</color>' + CT('Script.Mod_ArtiDesignDepartment.AboutDD.Text' + GAnswerData);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1450,
          "Pos.y":  680,
          "Parent":  -1,
          "#":  253,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tint1 = 1;",
              "tstr2 = CT('Script.Mod_ArtiDesignDepartment.AboutDD.PlayerAsk' + tint1);",
              "while(tstr2 != '')",
              "{",
              "    if(tint1 != GAnswerData) InjectAnswer('AboutDD','</color>' + tstr2, tint1);",
              "    tint1 = tint1 + 1;",
              "    tstr2 = CT('Script.Mod_ArtiDesignDepartment.AboutDD.PlayerAsk' + tint1);",
              "}",
              "tstr4='</color>'+CT('Script.Mod_ArtiDesignDepartment.AboutDD.PlayerExit');",
              "DAnswer('restart~' + tstr4);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1150,
          "Pos.y":  760,
          "Parent":  -1,
          "#":  256,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//игрок покупает аксессуары",
              "if(GAnswerData > 10 && GAnswerData < 100)",
              "{",
              "    if(ItemSize(cur_item) < 1) FreeItem(GetItemFromShip(Player(), cur_item));",
              "    cur_item = CreateQuestItem('DesignDepartment_Accessory' + (GAnswerData - 11));",
              "    cost = CT('UselessItems.DesignDepartment_Accessory' + (GAnswerData - 11) + '.BuyCostCr');",
              "    ItemCost(cur_item, cost / 2);",
              "    if(ruin_CF != '') EqCustomFaction(cur_item, ruin_CF);",
              "    tint1 = CT('UselessItems.DesignDepartment_Accessory' + (GAnswerData - 11) + '.SizeBuy');",
              "    ItemSize(cur_item, tint1);",
              "    dd_accessory[GAnswerData - 10] = Id(cur_item);",
              "    AddItemToShip(Player(), cur_item);",
              "    Sound('Sound.Sell');",
              "    UselessItemData(cur_item,2,ShipPilotRace(Player()));",
              "    UselessItemData(cur_item,3,ShipOnSidePirateClan(Player()));",
              "    GAnswerData = 0;",
              "}",
              "//игрок улучшает аксессуары",
              "if(GAnswerData > 100)",
              "{",
              "    if(ItemSize(cur_item) < 1) FreeItem(GetItemFromShip(Player(), cur_item));",
              "    cur_item = IdToItem(dd_accessory[GAnswerData - 100]);",
              "    tint1 = CT('UselessItems.'+ EquipmentImageName(cur_item) + '.SizeImprove');",
              "    UselessItemData(cur_item, 1, UselessItemData(cur_item, 1) + 1);",
              "    ItemSize(cur_item, ItemSize(cur_item) + tint1);",
              "    tint1 = CT('UselessItems.'+ EquipmentImageName(cur_item) + '.ImproveCostCr');",
              "    ItemCost(cur_item, ItemCost(cur_item) + tint1 / 2);",
              "    Sound('Sound.Repair');",
              "    GAnswerData = 0;",
              "}",
              "//текст диалога",
              "if(GAnswerData == 0)",
              "{",
              "    tstr1 = '</color>' + CT('Script.Mod_ArtiDesignDepartment.Accessory.Text0');",
              "",
              "    for(i = 1; i < 4; i = i + 1)",
              "    {",
              "        cur_item = IdToItem(dd_accessory[i]);",
              "        if(!cur_item) dd_accessory[i] = 0;",
              "",
              "        if(!dd_accessory[i])",
              "        {",
              "            tstr1 = tstr1 + CT('Script.Mod_ArtiDesignDepartment.Accessory.TextAdd');",
              "",
              "            tstr2 = CT('Script.Mod_ArtiDesignDepartment.Accessory.TextBuy');",
              "            tstr2 = Format(tstr2, '[name]', CT('UselessItems.DesignDepartment_Accessory' + (i - 1) + '.Name'), '');",
              "            tstr2 = Format(tstr2, '[text]', CT('UselessItems.DesignDepartment_Accessory' + (i - 1) + '.Text'), '');",
              "",
              "            tint1 = CT('UselessItems.DesignDepartment_Accessory' + (i - 1) + '.BuyCostNirgend');",
              "            tstr2 = Format(tstr2, '[ND]', tint1);",
              "",
              "            tint1 = CT('UselessItems.DesignDepartment_Accessory' + (i - 1) + '.BuyCostCr');",
              "            tstr2 = Format(tstr2, '[CR]', tint1);",
              "        }",
              "        else",
              "        {",
              "            tstr1 = tstr1 + CT('Script.Mod_ArtiDesignDepartment.Accessory.TextAdd');",
              "",
              "            if(UselessItemData(cur_item, 1) < GTL)",
              "            {",
              "                tstr2 = CT('Script.Mod_ArtiDesignDepartment.Accessory.TextImprove');",
              "",
              "                tstr2 = Format(tstr2, '[text]', CT('UselessItems.DesignDepartment_Accessory' + (i - 1) + '.TextImprove'), '');",
              "                tint1 = CT('UselessItems.DesignDepartment_Accessory' + (i - 1) + '.SizeImprove');",
              "                tstr2 = Format(tstr2, '[imp]', abs(tint1));",
              "",
              "                tint1 = CT('UselessItems.DesignDepartment_Accessory' + (i - 1) + '.ImproveCostNirgend');",
              "                tstr2 = Format(tstr2, '[ND]', tint1);",
              "",
              "                tint1 = CT('UselessItems.DesignDepartment_Accessory' + (i - 1) + '.ImproveCostCr');",
              "                tstr2 = Format(tstr2, '[CR]', tint1);",
              "            }",
              "            else if(GTL < 8)",
              "            {",
              "                tstr2 = CT('Script.Mod_ArtiDesignDepartment.Accessory.TextImproveGTL');",
              "            }",
              "            else tstr2 = CT('Script.Mod_ArtiDesignDepartment.Accessory.TextImproveGTLMAX');",
              "",
              "            tint1 = UselessItemData(cur_item, 1);",
              "            tstr2 = Format(tstr2, '[LVL]', tint1);",
              "",
              "            tstr2 = Format(tstr2, '[name]', CT('UselessItems.DesignDepartment_Accessory' + (i - 1) + '.Name'), '');",
              "",
              "        }",
              "",
              "        tstr1 = tstr1 + tstr2;",
              "    }",
              "",
              "    tstr1 = tstr1 + CT('Script.Mod_ArtiDesignDepartment.Accessory.TextAdd');",
              "    tstr1 = tstr1 + CT('Script.Mod_ArtiDesignDepartment.Accessory.Text0Add');",
              "}",
              "//текст диалога о аксессуарах",
              "if(GAnswerData == 1) tstr1 = '</color>' + CT('Script.Mod_ArtiDesignDepartment.Accessory.Text1');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1290,
          "Pos.y":  760,
          "Parent":  -1,
          "#":  258,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//смотрим сколько у игрока азуры",
              "nirgend = 0;",
              "for(i = 1; i < ShipItems(Player()); i = i + 1)",
              "{",
              "    tdwd1 = ShipItems(Player(), i);",
              "    if(ItemType(tdwd1) != t_UselessCountableItem) continue;",
              "    if(EquipmentImageName(tdwd1) != 'DesignDepartment_NirgendAzur') continue;",
              "    nirgend = nirgend + ItemSize(tdwd1);",
              "    break;",
              "}",
              "//реплики о покупке/улучшении аксессуаров/информация о акссесуарах",
              "if(GAnswerData == 0)",
              "{",
              "    for(i = 1; i < 4; i = i + 1)",
              "    {",
              "        check = 1;",
              "        cur_item = IdToItem(dd_accessory[i]);",
              "        if(!cur_item) dd_accessory[i] = 0;",
              "        if(!dd_accessory[i])",
              "        {",
              "            tstr2 = CT('Script.Mod_ArtiDesignDepartment.Accessory.PlayerBuy');",
              "            tstr2 = '</color>' + Format(tstr2, '[name]', CT('UselessItems.DesignDepartment_Accessory' + (i - 1) + '.Name'), '');",
              "",
              "            tint1 = CT('UselessItems.DesignDepartment_Accessory' + (i - 1) + '.BuyCostNirgend');",
              "            tstr2 = Format(tstr2, '[ND]', tint1);",
              "            if(nirgend < tint1) check = 0;",
              "",
              "            cost = CT('UselessItems.DesignDepartment_Accessory' + (i - 1) + '.BuyCostCr');",
              "            tstr2 = Format(tstr2, '[CR]', cost);",
              "            if(ShipMoney(Player()) < cost) check = 0;",
              "",
              "            if(!check) tstr2 = 'block~' + tstr2;",
              "",
              "            InjectAnswer('DD_Accessory', tstr2, (i + 10), 'ShipMoney(Player(), ShipMoney(Player()) -'+cost+');ItemSize('+tdwd1+', ItemSize('+tdwd1+')-'+tint1+');cur_item='+tdwd1+';');",
              "        }",
              "        else",
              "        {",
              "            tstr2 = CT('Script.Mod_ArtiDesignDepartment.Accessory.PlayerImprove');",
              "            tstr2 = '</color>' + Format(tstr2, '[name]', CT('UselessItems.DesignDepartment_Accessory' + (i - 1) + '.Name'), '');",
              "",
              "            tint1 = CT('UselessItems.DesignDepartment_Accessory' + (i - 1) + '.ImproveCostNirgend');",
              "            tstr2 = Format(tstr2, '[ND]', tint1);",
              "            if(nirgend < tint1) check = 0;",
              "",
              "            cost = CT('UselessItems.DesignDepartment_Accessory' + (i - 1) + '.ImproveCostCr');",
              "            tstr2 = Format(tstr2, '[CR]', cost);",
              "            if(ShipMoney(Player()) < cost) check = 0;",
              "",
              "            if(FindItemInShip(Player(), cur_item) == -1) check = 0;",
              "",
              "            if(!check) tstr2 = 'block~' + tstr2;",
              "",
              "            if(UselessItemData(cur_item, 1) < GTL) InjectAnswer('DD_Accessory', tstr2, (i + 100), 'ShipMoney(Player(), ShipMoney(Player()) -'+cost+');ItemSize('+tdwd1+', ItemSize('+tdwd1+')-'+tint1+');cur_item='+tdwd1+';');",
              "        }",
              "    }",
              "",
              "    tstr2 = CT('Script.Mod_ArtiDesignDepartment.Accessory.PlayerAsk1');",
              "    InjectAnswer('DD_Accessory','</color>' + tstr2, 1);",
              "",
              "    tstr2='restart~' + '</color>' + CT('Script.Mod_ArtiDesignDepartment.Accessory.PlayerExit');",
              "    DAnswer(tstr2);",
              "}",
              "//реплика спасибо за информацию о аксессуарах",
              "if(GAnswerData == 1)",
              "{",
              "    tstr2 = CT('Script.Mod_ArtiDesignDepartment.Accessory.PlayerAsk2');",
              "    InjectAnswer('DD_Accessory','</color>' + tstr2, 0);",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  980,
          "Pos.y":  630,
          "Parent":  -1,
          "#":  266,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tstr1='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentRecycle.Talks.RecycleCoal');",
              "tstr3='';",
              "//надбавка за ТУ выше ГТУ",
              "tint3=CT('DesignDepartmentModList.Recycle.BonusLevelCoal');",
              "//сдача Коалиционной оборудки",
              "if(GAnswerData>0)",
              "    {",
              "//рассчитываем кол-ва техники и добавляем в трюм игроку",
              "    check=0;",
              "    if(ItemLevel(GAnswerData)>GalaxyTechLevel())check=ItemLevel(GAnswerData)-GalaxyTechLevel();",
              "    tint1=ItemSize(GAnswerData);",
              "    tint1=(tint1 * (check * tint3 + ItemDurability(GAnswerData)))/100;",
              "    cur_item=CreateGoods(t_Technics,tint1);",
              "    ItemOwner(cur_item,ShipOwner(cur_ruin));",
              "    if(ruin_CF != '') EqCustomFaction(cur_item, ruin_CF);",
              "    tstr3='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentRecycle.Talks.RecycleDone');",
              "    tstr3=Format(tstr3,'[var]',Name(GAnswerData),'[var2]',Name(cur_item),'[var3]',tint1);",
              "    AddItemToShip(Player(),cur_item);",
              "    cur_item=GAnswerData;",
              "    GetItemFromShip(Player(),cur_item);",
              "    FreeItem(cur_item);",
              "    Sound('Sound.Repair');",
              "    }",
              "//перебираем трюм игрока и формируем строку для диалога",
              "tstr2=''; tint1=0;",
              "for(i=0;i<ShipItems(Player());i=i+1)",
              "    {",
              "    cur_item=ShipItems(Player(),i);",
              "    if(ItemType(cur_item)<t_FuelTanks)continue;",
              "    if(ItemType(cur_item)>t_CustomWeapon)continue;",
              "    if(ItemIsInUse(cur_item))continue;",
              "    if(ItemInScript(cur_item))",
              "        {",
              "        tint2 = EqSpecial(cur_item);",
              "        if(tint2 > -1)",
              "            {",
              "            if(!CT('MicroModuls.' + BonusNumInCfg(tint2) + '.ScriptItemIgnore')) continue;",
              "            }",
              "        else continue;",
              "        }",
              "    if(EqCustomFaction(cur_item)=='')continue;",
              "    if(ItemOwner(cur_item)> 4)continue;",
              "    check=0;",
              "    if(ItemLevel(cur_item)>GalaxyTechLevel())check=ItemLevel(cur_item)-GalaxyTechLevel();",
              "    tint2=ItemSize(cur_item);",
              "    tint2=(tint2 * (check * tint3 + ItemDurability(cur_item)))/100;",
              "    if(tint2<1)continue;",
              "    tstr4=CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentRecycle.Talks.AddTextCoal');",
              "    tint1=tint1+1;",
              "    tstr2=tstr2+\"<br>\"+tint1+': '+DeleteTags(Name(cur_item))+' '+ItemSize(cur_item)+' '+tstr4;",
              "    tstr2=Format(tstr2,'[var]',tint2);",
              "}",
              "if(tstr2=='')tstr2='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentRecycle.Talks.RecycleListEmpty');",
              "else tstr2=Format(CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentRecycle.Talks.RecycleList'),'[list]',tstr2);",
              "tstr1=tstr1+tstr3+tstr2;",
              "tstr4='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentRecycle.Talks.Restart');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  980,
          "Pos.y":  660,
          "Parent":  -1,
          "#":  267,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tstr1='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentRecycle.Talks.RecycleClan');",
              "tstr3='';",
              "//надбавка за ТУ выше ГТУ",
              "tint3=CT('DesignDepartmentModList.Recycle.BonusLevelClan');",
              "//сдача пиратской оборудки",
              "if(GAnswerData>0)",
              "    {",
              "//рассчитываем кол-ва роскоши и добавляем в трюм игроку",
              "    check=0;",
              "    if(ItemLevel(GAnswerData)>GalaxyTechLevel())check=ItemLevel(GAnswerData)-GalaxyTechLevel();",
              "    tint1=ItemSize(GAnswerData);",
              "    tint1=(tint1 * (check * tint3 + ItemDurability(GAnswerData)))/100;",
              "    cur_item=CreateGoods(t_Luxury,tint1);",
              "    ItemOwner(cur_item,ShipOwner(cur_ruin));",
              "    if(ruin_CF != '') EqCustomFaction(cur_item, ruin_CF);",
              "    tstr3='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentRecycle.Talks.RecycleDone');",
              "    tstr3=Format(tstr3,'[var]',Name(GAnswerData),'[var2]',Name(cur_item),'[var3]',tint1);",
              "    AddItemToShip(Player(),cur_item);",
              "    cur_item=GAnswerData;",
              "    GetItemFromShip(Player(),cur_item);",
              "    FreeItem(cur_item);",
              "    Sound('Sound.Repair');",
              "    }",
              "//перебираем трюм игрока и формируем строку для диалога",
              "tstr2=''; tint1=0; tstr4=CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentRecycle.Talks.AddTextClan');",
              "for(i=0;i<ShipItems(Player());i=i+1)",
              "    {",
              "    cur_item=ShipItems(Player(),i);",
              "    if(ItemType(cur_item)<t_FuelTanks)continue;",
              "    if(ItemType(cur_item)>t_CustomWeapon)continue;",
              "    if(ItemIsInUse(cur_item))continue;",
              "    if(ItemInScript(cur_item))",
              "        {",
              "        tint2 = EqSpecial(cur_item);",
              "        if(tint2 > -1)",
              "            {",
              "            if(!CT('MicroModuls.' + BonusNumInCfg(tint2) + '.ScriptItemIgnore')) continue;",
              "            }",
              "        else continue;",
              "        }",
              "    if(EqCustomFaction(cur_item)!='')continue;",
              "    if(ItemOwner(cur_item)!=7)continue;",
              "    check=0;",
              "    if(ItemLevel(cur_item)>GalaxyTechLevel())check=ItemLevel(cur_item)-GalaxyTechLevel();",
              "    tint2=ItemSize(cur_item);",
              "    tint2=(tint2 * (check * tint3 + ItemDurability(cur_item)))/100;",
              "    if(tint2<1)continue;",
              "    tstr4=CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentRecycle.Talks.AddTextClan');",
              "    tint1=tint1+1;",
              "    tstr2=tstr2+\"<br>\"+tint1+': '+DeleteTags(Name(cur_item))+' '+ItemSize(cur_item)+' '+tstr4;",
              "    tstr2=Format(tstr2,'[var]',tint2);",
              "    }",
              "if(tstr2=='')tstr2='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentRecycle.Talks.RecycleListEmpty');",
              "else tstr2=Format(CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentRecycle.Talks.RecycleList'),'[list]',tstr2);",
              "tstr1=tstr1+tstr3+tstr2;",
              "tstr4='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentRecycle.Talks.Restart');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  980,
          "Pos.y":  690,
          "Parent":  -1,
          "#":  268,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tstr1='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentRecycle.Talks.RecycleNone');",
              "tstr3='';",
              "//сдача разряженных бомб",
              "if(GAnswerData>0) {",
              "//рассчитываем кол-ва оружия и добавляем в трюм игроку",
              "    check=0;",
              "    if(ItemLevel(GAnswerData)>GalaxyTechLevel()) check=ItemLevel(GAnswerData)-GalaxyTechLevel();",
              "    tint1=ItemSize(GAnswerData)*2;",
              "    cur_item=CreateGoods(t_Arms,tint1);",
              "    ItemOwner(cur_item,ShipOwner(cur_ruin));",
              "    if(ruin_CF != '') EqCustomFaction(cur_item, ruin_CF);",
              "    tstr3='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentRecycle.Talks.RecycleDone');",
              "    tstr3=Format(tstr3,'[var]',Name(GAnswerData),'[var2]',Name(cur_item),'[var3]',tint1);",
              "    AddItemToShip(Player(),cur_item);",
              "    cur_item=GAnswerData;",
              "    GetItemFromShip(Player(),cur_item);",
              "    FreeItem(cur_item);",
              "    Sound('Sound.Repair');",
              "}",
              "//перебираем трюм игрока и формируем строку для диалога",
              "tstr2=''; tint1=0; tstr4=CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentRecycle.Talks.AddTextBombs');",
              "for(i=0;i<ShipItems(Player());i=i+1) {",
              "    cur_item=ShipItems(Player(),i);",
              "    if(ItemType(cur_item)==t_UselessItem) {",
              "        if(Name(cur_item) == CT('Script.Mod_ExpArts.DepletedEMPMine') || Name(cur_item) == CT('Script.Mod_ExpArts.DepletedStunMine')) {",
              "            tint6=1;",
              "        }",
              "        else continue;",
              "    }",
              "    else continue;",
              "",
              "    tint2=ItemSize(cur_item);",
              "    if(tint2<1)continue;",
              "    tint1=tint1+1;",
              "    tstr2=tstr2+\"<br>\"+tint1+': '+DeleteTags(Name(cur_item))+' '+ItemSize(cur_item)+' '+tstr4;",
              "    tstr2=Format(tstr2,'[var]',tint2);",
              "}",
              "if(tstr2=='')tstr2='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentRecycle.Talks.RecycleListEmpty');",
              "else tstr2=Format(CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentRecycle.Talks.RecycleList'),'[list]',tstr2);",
              "tstr1=tstr1+tstr3+tstr2;",
              "tstr4='</color>' + CT('Script.Mod_ArtiDesignDepartment.DesignDepartmentRecycle.Talks.Restart');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1050,
          "Pos.y":  630,
          "Parent":  -1,
          "#":  272,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//перебираем трюм игрока и формируем список на сдачу предметов",
              "for(i=0;i<ShipItems(Player());i=i+1)",
              "    {",
              "    cur_item=ShipItems(Player(),i);",
              "    if(ItemType(cur_item)<t_FuelTanks)continue;",
              "    if(ItemType(cur_item)>t_CustomWeapon)continue;",
              "    if(ItemIsInUse(cur_item))continue;",
              "    if(ItemInScript(cur_item))",
              "        {",
              "        tint2 = EqSpecial(cur_item);",
              "        if(tint2 > -1)",
              "            {",
              "            if(!CT('MicroModuls.' + BonusNumInCfg(tint2) + '.ScriptItemIgnore')) continue;",
              "            }",
              "        else continue;",
              "        }",
              "    if(EqCustomFaction(cur_item)!='')continue;",
              "    if(ItemOwner(cur_item)>4)continue;",
              "    InjectAnswer('DDRecycleCoal',DeleteTags(Name(cur_item))+' '+ItemSize(cur_item)+' т.',cur_item);",
              "    }",
              "DAnswer('restart~' + tstr4);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1050,
          "Pos.y":  660,
          "Parent":  -1,
          "#":  273,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//перебираем трюм игрока и формируем список на сдачу предметов",
              "for(i=0;i<ShipItems(Player());i=i+1)",
              "    {",
              "    cur_item=ShipItems(Player(),i);",
              "    if(ItemType(cur_item)<t_FuelTanks)continue;",
              "    if(ItemType(cur_item)>t_CustomWeapon)continue;",
              "    if(ItemIsInUse(cur_item))continue;",
              "    if(ItemInScript(cur_item))",
              "        {",
              "        tint2 = EqSpecial(cur_item);",
              "        if(tint2 > -1)",
              "            {",
              "            if(!CT('MicroModuls.' + BonusNumInCfg(tint2) + '.ScriptItemIgnore')) continue;",
              "            }",
              "        else continue;",
              "        }",
              "    if(EqCustomFaction(cur_item)!='')continue;",
              "    if(ItemOwner(cur_item)!=7)continue;",
              "    InjectAnswer('DDRecycleClan',DeleteTags(Name(cur_item))+' '+ItemSize(cur_item)+' т.',cur_item);",
              "    }",
              "DAnswer('restart~' + tstr4);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1050,
          "Pos.y":  690,
          "Parent":  -1,
          "#":  274,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//перебираем трюм игрока и формируем список на сдачу предметов",
              "for(i=0;i<ShipItems(Player());i=i+1)",
              "    {",
              "    cur_item=ShipItems(Player(),i);",
              "    if(ItemType(cur_item)==t_UselessItem) {",
              "        if(Name(cur_item) == CT('Script.Mod_ExpArts.DepletedEMPMine') || Name(cur_item) == CT('Script.Mod_ExpArts.DepletedStunMine')) {",
              "            tint6=1;",
              "        }",
              "        else continue;",
              "    }",
              "    else continue;",
              "    InjectAnswer('DDRecycleBombs',DeleteTags(Name(cur_item))+' '+ItemSize(cur_item)+' т.',cur_item);",
              "    }",
              "DAnswer('restart~' + tstr4);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  270,
          "Pos.y":  140,
          "Parent":  -1,
          "#":  275,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Фикс лока от КБ",
              "if(ShipInNormalSpace(Player())) {",
              "            InterfaceState('RuinsTalk', 'PR_Shop', 1);",
              "            InterfaceState('RuinsTalk', 'PR_ShopBlock', 0);",
              "            InterfaceState('RuinsTalk', 'PR_Goods', 1);",
              "            InterfaceState('RuinsTalk', 'PR_GoodsBlock', 0);",
              "            InterfaceState('RuinsTalk', 'PR_Info', 1);",
              "            InterfaceState('RuinsTalk', 'PR_InfoBlock', 0);",
              "            InterfaceState('RuinsTalk', 'PM_EndTurn', 1);",
              "            InterfaceState('RuinsTalk', 'RT_EndTurn_Block', 0);",
              "            //Выключаем панель Ассистента",
              "            if(findsubstr(CurrentMods(-1), 'OtherMods\\Assistant') > -1)",
              "            {",
              "                if(InterfaceState('RuinsTalk', 'AstAddRuins') == 0) InterfaceState('RuinsTalk', 'AstAddRuins', 1);",
              "            }",
              "            else",
              "            {",
              "                if(InterfaceState('RuinsTalk', 'AstAddRuins') == -1) InterfaceState('RuinsTalk', 'AstAddRuins', 1);",
              "            }",
              "",
              "            if(~ShipFindCustomShipInfoByType(Player(), 'DesignDepartment_DDBlock'))",
              "            {",
              "                ShipDeleteCustomShipInfo(Player(), 'DesignDepartment_DDBlock');",
              "            }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -90,
          "Pos.y":  350,
          "Parent":  -1,
          "#":  283,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(ShipInNormalSpace(CurShip)) {",
              "    if(!StarBattle(ShipStar(CurShip))) {",
              "        if(!ShipGetBad(CurShip)) {",
              "            if(GroupCount(PatrolSpace) > 1) {",
              "                ShipJoin(PatrolWait,CurShip);",
              "            }",
              "            else {",
              "                tdwd1 = 0;",
              "                while(!tdwd1) {",
              "                    tdwd1 = RndObject(-1,1,CurShip);",
              "                }",
              "                if(CoordX(CurShip) != GetData(1) || CoordY(CurShip) != GetData(2)) {",
              "                    OrderMove(CurShip,GetData(1),GetData(2));",
              "                }",
              "                else {",
              "                    SetData(tdwd1*RndObject(300,500,CurShip),1);",
              "                    SetData(tdwd1*RndObject(300,500,CurShip),2);",
              "                }",
              "            }",
              "        }",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -90,
          "Pos.y":  320,
          "Parent":  -1,
          "#":  284,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(GetShipRuins(CurShip)) {",
              "    if(GetData(3,GroupToShip(DDGroup))) {",
              "        ShipJoin(PatrolSpace,CurShip);",
              "    }",
              "    if(!GroupCount(PatrolSpace)) {",
              "        ShipJoin(PatrolSpace,CurShip);",
              "    }",
              "}",
              "else {",
              "    if(GroupToShip(DDGroup)) {",
              "        if(!GetShipPlanet(CurShip)) {",
              "            if(ShipInStar(GroupToShip(DDGroup),ShipStar(CurShip))) {",
              "                OrderLanding(CurShip,GroupToShip(DDGroup));",
              "            }",
              "            else {",
              "                OrderJump(CurShip,ShipStar(GroupToShip(DDGroup)));",
              "            }",
              "        }",
              "        else {",
              "            OrderTakeOff(CurShip);",
              "        }",
              "    }",
              "    else {",
              "        if(!StarBattle(ShipStar(CurShip)) && !ShipGetBad(CurShip) && ShipInNormalSpace(CurShip)) {",
              "            OrderLanding(CurShip,NearCivilPlanet(CurShip));",
              "        }",
              "        else if(!StarBattle(ShipStar(CurShip)) && ShipGetBad(CurShip) && ShipInNormalSpace(CurShip)) {",
              "            if(!ShipInStar(ShipGetBad(CurShip),ShipStar(CurShip))) {",
              "                OrderLanding(CurShip,NearCivilPlanet(CurShip));",
              "            }",
              "        }",
              "        else if(GetShipPlanet(CurShip)) {",
              "            OrderTakeOff(CurShip);",
              "        }",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -90,
          "Pos.y":  290,
          "Parent":  -1,
          "#":  285,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(~ShipFindCustomShipInfoByType(CurShip,'DesignDepartment_DefendersInfo')) ShipAddCustomShipInfo(CurShip,'DesignDepartment_DefendersInfo','NoShow');",
              "",
              "if(ShipCustomShipInfoData(CurShip,'DesignDepartment_DefendersInfo',1) < 25) ShipCustomShipInfoData(CurShip,'DesignDepartment_DefendersInfo',1,ShipCustomShipInfoData(CurShip,'DesignDepartment_DefendersInfo',1)+1);",
              "else {",
              "    if(GroupCount(PatrolWait) + GroupCount(PatrolSpace) < 6) {",
              "        cur_ship = SpawnPatrol(NearCivilPlanet(CurShip),CurShip);",
              "        tdwd1 = 0;",
              "        while(!tdwd1) tdwd1 = RndObject(-1,1,CurShip);",
              "        SetData(tdwd1*RndObject(300,500,CurShip),1,cur_ship);",
              "        SetData(tdwd1*RndObject(300,500,CurShip),2,cur_ship);",
              "        ShipCustomShipInfoData(CurShip,'DesignDepartment_DefendersInfo',1,0);",
              "    }",
              "}"          
          ]        
        }      
      ],
      "Planets":      
      [
        {
          "Type":  "TPlanet",
          "Name":  "InitPlanet",
          "Pos.x":  50,
          "Pos.y":  170,
          "Parent":  -1,
          "#":  2,
          "Race":  62,
          "Owner":  62,
          "Economy":  14,
          "Goverment":  62,
          "RangeMin":  0,
          "RangeMax":  100,
          "Dialog":  -1        
        }      
      ],
      "Ships":      
      [
        {
          "Type":  "TStarShip",
          "Name":  "",
          "Pos.x":  50,
          "Pos.y":  110,
          "Parent":  -1,
          "#":  0,
          "Count":  1,
          "Owner":  62,
          "Ship.Type":  126,
          "Player":  true,
          "SpeedMin":  0,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Stars":      
      [
        {
          "Type":  "TStar",
          "Name":  "InitStar",
          "Pos.x":  50,
          "Pos.y":  140,
          "Parent":  -1,
          "#":  1,
          "Constellation":  0,
          "Priority":  0,
          "NoKling":  false,
          "NoComeKling":  false        
        }      
      ],
      "Statements":      
      [
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  210,
          "Pos.y":  120,
          "Parent":  -1,
          "#":  10,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!ShipIsTakeoff(Player())"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  20,
          "Parent":  47,
          "#":  48,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player()) >= cost"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  20,
          "Parent":  47,
          "#":  49,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  47,
          "#":  56,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player()) < cost"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  20,
          "Parent":  60,
          "#":  61,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tint1 >= cost"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  60,
          "#":  62,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tint1 < cost"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  20,
          "Parent":  60,
          "#":  63,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  20,
          "Parent":  75,
          "#":  76,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!RuinsAllowModernization(cur_ruin)"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  20,
          "Parent":  75,
          "#":  77,
          "Code.Type":  "Turn",
          "Code":          
          [
              "RuinsAllowModernization(cur_ruin)"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  20,
          "Parent":  80,
          "#":  81,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player()) >= cost"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  80,
          "#":  82,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player()) < cost"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  20,
          "Parent":  80,
          "#":  83,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  20,
          "Parent":  93,
          "#":  94,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  93,
          "#":  95,
          "Code.Type":  "Turn",
          "Code":          
          [
              "0"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  20,
          "Parent":  93,
          "#":  96,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  0,
          "Parent":  92,
          "#":  105,
          "Code.Type":  "Turn",
          "Code":          
          [
              "check2 == -1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  40,
          "Pos.y":  20,
          "Parent":  109,
          "#":  110,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  20,
          "Parent":  109,
          "#":  111,
          "Code.Type":  "Turn",
          "Code":          
          [
              "check2"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  20,
          "Parent":  109,
          "#":  112,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  109,
          "#":  117,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!check2"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  -80,
          "Parent":  105,
          "#":  128,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  92,
          "#":  129,
          "Code.Type":  "Turn",
          "Code":          
          [
              "~check2"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -40,
          "Pos.y":  20,
          "Parent":  60,
          "#":  133,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tint2"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  135,
          "#":  136,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  500,
          "Pos.y":  330,
          "Parent":  -1,
          "#":  137,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  20,
          "Parent":  68,
          "#":  138,
          "Code.Type":  "Turn",
          "Code":          
          [
              "win_dialog != ''"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  68,
          "#":  139,
          "Code.Type":  "Turn",
          "Code":          
          [
              "win_dialog == ''"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1450,
          "Pos.y":  400,
          "Parent":  -1,
          "#":  188,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GAnswerData==999"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1450,
          "Pos.y":  380,
          "Parent":  -1,
          "#":  190,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GAnswerData==900"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1450,
          "Pos.y":  480,
          "Parent":  -1,
          "#":  206,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GAnswerData==800"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1450,
          "Pos.y":  500,
          "Parent":  -1,
          "#":  209,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GAnswerData==899"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1450,
          "Pos.y":  580,
          "Parent":  -1,
          "#":  224,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GAnswerData==700"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1450,
          "Pos.y":  600,
          "Parent":  -1,
          "#":  225,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GAnswerData==799"          
          ]        
        }      
      ],
      "States":      
      [
        {
          "Type":  "TState",
          "Name":  "PlayerState",
          "Pos.x":  -60,
          "Pos.y":  200,
          "Parent":  -1,
          "#":  4,
          "Move":  0,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "CustomShipsFree",
          "Pos.x":  -60,
          "Pos.y":  260,
          "Parent":  -1,
          "#":  25,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "DDState",
          "Pos.x":  -60,
          "Pos.y":  290,
          "Parent":  -1,
          "#":  44,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "[t_OnTakingDamage,t_OnTakingDamageMi,t_OnTakingDamageEn,t_OnTakingDamageSp,t_OnStep|0]\r\nDDActCode();",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "Wait1",
          "Pos.x":  -60,
          "Pos.y":  320,
          "Parent":  -1,
          "#":  281,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "Space1",
          "Pos.x":  -60,
          "Pos.y":  350,
          "Parent":  -1,
          "#":  282,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        }      
      ],
      "Variables":      
      [
        {
          "Type":  "TVar",
          "Name":  "i",
          "Pos.x":  170,
          "Pos.y":  190,
          "Parent":  -1,
          "#":  7,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "j",
          "Pos.x":  200,
          "Pos.y":  190,
          "Parent":  -1,
          "#":  8,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tint1",
          "Pos.x":  170,
          "Pos.y":  210,
          "Parent":  -1,
          "#":  11,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tint2",
          "Pos.x":  170,
          "Pos.y":  230,
          "Parent":  -1,
          "#":  12,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tint3",
          "Pos.x":  170,
          "Pos.y":  250,
          "Parent":  -1,
          "#":  13,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_star",
          "Pos.x":  260,
          "Pos.y":  170,
          "Parent":  -1,
          "#":  14,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_ruin",
          "Pos.x":  260,
          "Pos.y":  210,
          "Parent":  -1,
          "#":  15,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_planet",
          "Pos.x":  260,
          "Pos.y":  190,
          "Parent":  -1,
          "#":  16,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_ship",
          "Pos.x":  260,
          "Pos.y":  230,
          "Parent":  -1,
          "#":  17,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_item",
          "Pos.x":  260,
          "Pos.y":  250,
          "Parent":  -1,
          "#":  18,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tarr1",
          "Pos.x":  170,
          "Pos.y":  430,
          "Parent":  -1,
          "#":  20,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tstr1",
          "Pos.x":  260,
          "Pos.y":  330,
          "Parent":  -1,
          "#":  21,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tstr2",
          "Pos.x":  260,
          "Pos.y":  350,
          "Parent":  -1,
          "#":  22,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tstr3",
          "Pos.x":  260,
          "Pos.y":  370,
          "Parent":  -1,
          "#":  23,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "GTL",
          "Pos.x":  170,
          "Pos.y":  270,
          "Parent":  -1,
          "#":  26,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "DesignDepartment_SpecItemsCountArray",
          "Pos.x":  170,
          "Pos.y":  50,
          "Parent":  -1,
          "#":  27,
          "Var.Type":  "Array",
          "Init":  "2",
          "Global":  true        
        },
        {
          "Type":  "TVar",
          "Name":  "EventsListArray",
          "Pos.x":  170,
          "Pos.y":  70,
          "Parent":  -1,
          "#":  28,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "UniqueEventsCount",
          "Pos.x":  280,
          "Pos.y":  70,
          "Parent":  -1,
          "#":  29,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "lastShipId",
          "Pos.x":  410,
          "Pos.y":  90,
          "Parent":  -1,
          "#":  30,
          "Var.Type":  "Dword",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "EventsVersion",
          "Pos.x":  170,
          "Pos.y":  90,
          "Parent":  -1,
          "#":  31,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "RandomEventLaunchTime",
          "Pos.x":  410,
          "Pos.y":  110,
          "Parent":  -1,
          "#":  32,
          "Var.Type":  "Int",
          "Init":  "365",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "AllUninhabitedWasResearched",
          "Pos.x":  410,
          "Pos.y":  150,
          "Parent":  -1,
          "#":  33,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "EventBlackHolesArray",
          "Pos.x":  410,
          "Pos.y":  130,
          "Parent":  -1,
          "#":  34,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tdwd1",
          "Pos.x":  260,
          "Pos.y":  270,
          "Parent":  -1,
          "#":  35,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "CurABWasVisited",
          "Pos.x":  410,
          "Pos.y":  190,
          "Parent":  -1,
          "#":  36,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "check",
          "Pos.x":  170,
          "Pos.y":  330,
          "Parent":  -1,
          "#":  37,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tarr2",
          "Pos.x":  170,
          "Pos.y":  450,
          "Parent":  -1,
          "#":  38,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "UninhabitedPlanetTreasuresArray",
          "Pos.x":  500,
          "Pos.y":  90,
          "Parent":  -1,
          "#":  39,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  true        
        },
        {
          "Type":  "TVar",
          "Name":  "FortuneWheelSeed",
          "Pos.x":  410,
          "Pos.y":  210,
          "Parent":  -1,
          "#":  40,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "DDSpawnTurn",
          "Pos.x":  410,
          "Pos.y":  230,
          "Parent":  -1,
          "#":  42,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "DDNamesLine",
          "Pos.x":  410,
          "Pos.y":  250,
          "Parent":  -1,
          "#":  45,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cost",
          "Pos.x":  170,
          "Pos.y":  290,
          "Parent":  -1,
          "#":  55,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "check2",
          "Pos.x":  170,
          "Pos.y":  350,
          "Parent":  -1,
          "#":  69,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "BlueprintInResearchTimer",
          "Pos.x":  690,
          "Pos.y":  220,
          "Parent":  -1,
          "#":  103,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "BlueprintInWorkPath",
          "Pos.x":  690,
          "Pos.y":  260,
          "Parent":  -1,
          "#":  104,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "BlueprintInAssemblyTimer",
          "Pos.x":  690,
          "Pos.y":  240,
          "Parent":  -1,
          "#":  106,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tstr4",
          "Pos.x":  260,
          "Pos.y":  390,
          "Parent":  -1,
          "#":  124,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tflt1",
          "Pos.x":  260,
          "Pos.y":  460,
          "Parent":  -1,
          "#":  130,
          "Var.Type":  "Float",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tflt2",
          "Pos.x":  260,
          "Pos.y":  480,
          "Parent":  -1,
          "#":  131,
          "Var.Type":  "Float",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tflt3",
          "Pos.x":  260,
          "Pos.y":  500,
          "Parent":  -1,
          "#":  132,
          "Var.Type":  "Float",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "win_dialog",
          "Pos.x":  560,
          "Pos.y":  450,
          "Parent":  -1,
          "#":  141,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "win_answer",
          "Pos.x":  560,
          "Pos.y":  490,
          "Parent":  -1,
          "#":  142,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "win_text",
          "Pos.x":  560,
          "Pos.y":  470,
          "Parent":  -1,
          "#":  150,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "ResearchedBlueprintsArray",
          "Pos.x":  670,
          "Pos.y":  510,
          "Parent":  -1,
          "#":  151,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "DD_weapon_create",
          "Pos.x":  1140,
          "Pos.y":  100,
          "Parent":  -1,
          "#":  155,
          "Var.Type":  "Array",
          "Init":  "1",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "arr0",
          "Pos.x":  1140,
          "Pos.y":  160,
          "Parent":  -1,
          "#":  156,
          "Var.Type":  "Array",
          "Init":  "1",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "DD_weapon_exist",
          "Pos.x":  1140,
          "Pos.y":  60,
          "Parent":  -1,
          "#":  157,
          "Var.Type":  "Array",
          "Init":  "[0,0,0,0,0,0,0,0,0]",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "DD_weapon_cost",
          "Pos.x":  1140,
          "Pos.y":  80,
          "Parent":  -1,
          "#":  179,
          "Var.Type":  "Array",
          "Init":  "1",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "arr1",
          "Pos.x":  1140,
          "Pos.y":  180,
          "Parent":  -1,
          "#":  180,
          "Var.Type":  "Array",
          "Init":  "1",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "DD_weapon_ready",
          "Pos.x":  1140,
          "Pos.y":  120,
          "Parent":  -1,
          "#":  181,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "DD_weapon_Stat",
          "Pos.x":  1140,
          "Pos.y":  140,
          "Parent":  -1,
          "#":  182,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "DD_hull_cost",
          "Pos.x":  1300,
          "Pos.y":  80,
          "Parent":  -1,
          "#":  193,
          "Var.Type":  "Array",
          "Init":  "1",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "DD_hull_create",
          "Pos.x":  1300,
          "Pos.y":  100,
          "Parent":  -1,
          "#":  194,
          "Var.Type":  "Array",
          "Init":  "1",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "DD_hull_ready",
          "Pos.x":  1300,
          "Pos.y":  120,
          "Parent":  -1,
          "#":  195,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "DD_hull_Stat",
          "Pos.x":  1300,
          "Pos.y":  140,
          "Parent":  -1,
          "#":  196,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "DD_hull_number",
          "Pos.x":  1300,
          "Pos.y":  60,
          "Parent":  -1,
          "#":  205,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "DD_Equipments_cost",
          "Pos.x":  1460,
          "Pos.y":  80,
          "Parent":  -1,
          "#":  212,
          "Var.Type":  "Array",
          "Init":  "1",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "DD_Equipments_create",
          "Pos.x":  1460,
          "Pos.y":  100,
          "Parent":  -1,
          "#":  213,
          "Var.Type":  "Array",
          "Init":  "1",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "DD_Equipments_ready",
          "Pos.x":  1460,
          "Pos.y":  120,
          "Parent":  -1,
          "#":  214,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "DD_Equipments_Stat",
          "Pos.x":  1460,
          "Pos.y":  140,
          "Parent":  -1,
          "#":  215,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "DD_Equipments_level",
          "Pos.x":  1460,
          "Pos.y":  60,
          "Parent":  -1,
          "#":  230,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "NirgendBox",
          "Pos.x":  1140,
          "Pos.y":  200,
          "Parent":  -1,
          "#":  231,
          "Var.Type":  "Array",
          "Init":  "[0,0,0,0,0,0,0,0,0,0]",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "DDCreateDay",
          "Pos.x":  1150,
          "Pos.y":  700,
          "Parent":  -1,
          "#":  242,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "buyMMarr",
          "Pos.x":  1240,
          "Pos.y":  650,
          "Parent":  -1,
          "#":  243,
          "Var.Type":  "Unknown",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "newMMlist",
          "Pos.x":  1240,
          "Pos.y":  700,
          "Parent":  -1,
          "#":  244,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tstr5",
          "Pos.x":  260,
          "Pos.y":  410,
          "Parent":  -1,
          "#":  245,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "shopUpdate",
          "Pos.x":  170,
          "Pos.y":  370,
          "Parent":  -1,
          "#":  254,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "dd_accessory",
          "Pos.x":  1150,
          "Pos.y":  780,
          "Parent":  -1,
          "#":  259,
          "Var.Type":  "Array",
          "Init":  "[0,0,0,0,0,0,0,0,0,0]",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "ruin_CF",
          "Pos.x":  260,
          "Pos.y":  430,
          "Parent":  -1,
          "#":  260,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "nirgend",
          "Pos.x":  170,
          "Pos.y":  310,
          "Parent":  -1,
          "#":  261,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "nirgendOnHull",
          "Pos.x":  170,
          "Pos.y":  390,
          "Parent":  -1,
          "#":  262,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tint4",
          "Pos.x":  170,
          "Pos.y":  500,
          "Parent":  -1,
          "#":  276,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tint5",
          "Pos.x":  170,
          "Pos.y":  520,
          "Parent":  -1,
          "#":  277,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tint6",
          "Pos.x":  170,
          "Pos.y":  540,
          "Parent":  -1,
          "#":  278,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        }      
      ]    
    }  
  ],
  "Visual.Links":  
  [
    {
      "Type":  "TGraphLink",
      "Begin":  3,
      "End":  4,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  3,
      "End":  2,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  2,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  0,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  10,
      "End":  9,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  24,
      "End":  2,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  24,
      "End":  25,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  43,
      "End":  44,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  43,
      "End":  2,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  47,
      "End":  48,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  47,
      "End":  49,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  49,
      "End":  51,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  48,
      "End":  50,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  46,
      "End":  53,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  53,
      "End":  47,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  50,
      "End":  54,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  54,
      "End":  52,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  47,
      "End":  56,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  56,
      "End":  57,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  58,
      "End":  59,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  59,
      "End":  60,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  60,
      "End":  61,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  61,
      "End":  66,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  66,
      "End":  67,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  60,
      "End":  62,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  62,
      "End":  64,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  60,
      "End":  63,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  63,
      "End":  65,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  70,
      "End":  71,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  71,
      "End":  72,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  52,
      "End":  74,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  75,
      "End":  77,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  75,
      "End":  76,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  76,
      "End":  78,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  77,
      "End":  79,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  78,
      "End":  80,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  80,
      "End":  81,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  80,
      "End":  82,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  80,
      "End":  83,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  83,
      "End":  86,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  82,
      "End":  85,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  81,
      "End":  84,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  84,
      "End":  87,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  87,
      "End":  88,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  88,
      "End":  89,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  91,
      "End":  92,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  94,
      "End":  97,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  95,
      "End":  98,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  96,
      "End":  99,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  97,
      "End":  100,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  100,
      "End":  101,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  101,
      "End":  102,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  72,
      "End":  90,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  107,
      "End":  108,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  108,
      "End":  109,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  109,
      "End":  111,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  109,
      "End":  110,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  109,
      "End":  112,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  111,
      "End":  113,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  113,
      "End":  116,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  110,
      "End":  114,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  112,
      "End":  115,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  109,
      "End":  117,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  117,
      "End":  118,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  114,
      "End":  119,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  116,
      "End":  120,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  120,
      "End":  121,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  119,
      "End":  122,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  122,
      "End":  123,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  115,
      "End":  125,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  125,
      "End":  126,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  126,
      "End":  127,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  105,
      "End":  128,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  128,
      "End":  108,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  92,
      "End":  105,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  93,
      "End":  94,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  93,
      "End":  95,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  93,
      "End":  96,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  92,
      "End":  129,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  129,
      "End":  93,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  60,
      "End":  133,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  133,
      "End":  134,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  134,
      "End":  135,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  135,
      "End":  136,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  136,
      "End":  137,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  137,
      "End":  60,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  138,
      "End":  140,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  143,
      "End":  144,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  144,
      "End":  145,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  145,
      "End":  146,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  67,
      "End":  139,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  139,
      "End":  68,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  68,
      "End":  73,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  67,
      "End":  138,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  147,
      "End":  149,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  149,
      "End":  148,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  152,
      "End":  154,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  154,
      "End":  153,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  159,
      "End":  158,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  153,
      "End":  161,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  160,
      "End":  159,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  158,
      "End":  162,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  163,
      "End":  164,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  164,
      "End":  165,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  165,
      "End":  166,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  167,
      "End":  169,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  169,
      "End":  168,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  168,
      "End":  170,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  171,
      "End":  173,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  173,
      "End":  174,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  174,
      "End":  175,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  172,
      "End":  176,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  176,
      "End":  177,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  177,
      "End":  178,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  183,
      "End":  185,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  185,
      "End":  184,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  184,
      "End":  188,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  188,
      "End":  186,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  186,
      "End":  187,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  184,
      "End":  189,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  184,
      "End":  190,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  190,
      "End":  191,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  191,
      "End":  192,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  197,
      "End":  198,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  198,
      "End":  199,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  199,
      "End":  200,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  201,
      "End":  202,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  202,
      "End":  203,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  203,
      "End":  204,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  184,
      "End":  206,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  206,
      "End":  207,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  207,
      "End":  208,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  184,
      "End":  209,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  209,
      "End":  210,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  210,
      "End":  211,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  216,
      "End":  221,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  221,
      "End":  222,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  222,
      "End":  223,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  217,
      "End":  218,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  218,
      "End":  219,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  219,
      "End":  220,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  184,
      "End":  224,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  184,
      "End":  225,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  225,
      "End":  227,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  227,
      "End":  229,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  224,
      "End":  226,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  226,
      "End":  228,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  233,
      "End":  234,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  232,
      "End":  235,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  235,
      "End":  233,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  234,
      "End":  236,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  236,
      "End":  235,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  233,
      "End":  237,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  238,
      "End":  239,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  239,
      "End":  240,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  240,
      "End":  241,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  246,
      "End":  247,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  247,
      "End":  248,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  248,
      "End":  249,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  250,
      "End":  251,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  251,
      "End":  252,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  252,
      "End":  253,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  255,
      "End":  256,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  256,
      "End":  257,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  257,
      "End":  258,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  266,
      "End":  269,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  269,
      "End":  272,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  267,
      "End":  270,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  270,
      "End":  273,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  268,
      "End":  271,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  271,
      "End":  274,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  263,
      "End":  266,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  264,
      "End":  267,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  265,
      "End":  268,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  279,
      "End":  281,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  280,
      "End":  282,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  282,
      "End":  283,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  281,
      "End":  284,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  44,
      "End":  285,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  280,
      "End":  2,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  279,
      "End":  2,
      "Nom":  0,
      "Arrow":  true    
    }  
  ],
  "BlockPar.EC.Total.Strings":  2,
  "BlockPar.EC":  
  [
    {
      "#":  "0",
      "String":  "<0>"    
    },
    {
      "#":  "1",
      "String":  "<br>"    
    }  
  ]
}