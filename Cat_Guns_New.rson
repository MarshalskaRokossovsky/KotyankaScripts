{
  "FileID":  573785173,
  "FileVersion":  8,
  "ViewPos.x":  -688,
  "ViewPos.y":  -643,
  "ScriptName":  "Cat_Guns",
  "ScriptFileOut":  "C:\\Users\\DmitB\\Downloads\\MLGCat\\Cat_Guns.scr",
  "ScriptTextOut":  "C:\\Users\\DmitB\\Downloads\\MLGCat\\Cat_Guns.txt",
  "Visual.Objects":  
  [
    {
      "Dialogs":      
      [
        {
          "Type":  "TDialog",
          "Name":  "Question",
          "Pos.x":  150,
          "Pos.y":  -190,
          "Parent":  -1,
          "#":  7        
        }      
      ],
      "Groups":      
      [
        {
          "Type":  "TGroup",
          "Name":  "GroupNew",
          "Pos.x":  -100,
          "Pos.y":  0,
          "Parent":  -1,
          "#":  4,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  1,
          "CntShipMax":  1,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  true,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Items":      
      [
        {
          "Type":  "TItem",
          "Name":  "InitItem",
          "Pos.x":  -100,
          "Pos.y":  -180,
          "Parent":  -1,
          "#":  10,
          "Class":  5,
          "Item.Type":  0,
          "Size":  10,
          "Level":  1,
          "Radius":  150,
          "Owner":  6,
          "Useless":  ""        
        }      
      ],
      "Operations":      
      [
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -50,
          "Pos.y":  -90,
          "Parent":  -1,
          "#":  5,
          "Code.Type":  "Global",
          "Code":          
          [
              "GRun();"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -10,
          "Pos.y":  -90,
          "Parent":  -1,
          "#":  6,
          "Code.Type":  "DialogBegin",
          "Code":          
          [
              "//"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -50,
          "Pos.y":  -130,
          "Parent":  -1,
          "#":  8,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Цикл для раздачи БСОх по военкам",
              "if(GalaxyTechLevel() == 8) {",
              "    if(CD == 0) {",
              "        //Набиваем массив военками, где будут располагаться наши БСОшки",
              "        ArrayClear(tarr);",
              "        ArrayDelete(tarr,0);",
              "        for(i=0;GalaxyStars()>i;i=i+1) {",
              "            star = GalaxyStar(i);",
              "            for(j=0;StarShips(star)>j;j=j+1) {",
              "                if(ShipType(StarShips(star,j)) == 'WB') ArrayAdd(tarr,StarShips(star,j));",
              "            }",
              "        }",
              "",
              "        //Считаем БСОхи по магазинам, доспавниваем, если их мало",
              "        if(ArrayDim(tarr)) {",
              "            for(i=1;ArrayDim(tarr)>i;i=i+1) {",
              "                cur_ruin = tarr[i-1];",
              "                coun = 0;",
              "                tdwd2 = 0;",
              "                for(j=0;ShopItems(cur_ruin)>j;j=j+1) {",
              "                    item = ShopItems(cur_ruin,j);",
              "                    if(ItemType(item) != t_CustomWeapon) continue;",
              "                    if(CustomWeaponType(item) != 'bso') continue;",
              "",
              "                    coun = coun + 1;",
              "                    if(!ItemImprovement(item)) tdwd2 = item;",
              "                }",
              "",
              "                //Чтобы БСОхи спавнились не гарантированно, а с шансом",
              "                if(coun < 2) {",
              "                    if(Rnd(1,4) == 4) {",
              "                        SpawnBSO(cur_ruin);",
              "                        if(coun < 1 && Rnd(1,4) == 4) {",
              "                            SpawnBSO(cur_ruin);",
              "                            if(!coun && Rnd(1,4) == 4) {",
              "                                tdwd2 = SpawnBSO(cur_ruin);",
              "                                if(Rnd(1,4) == 4) {",
              "                                    ItemImprovement(tdwd2,3);",
              "                                }",
              "                            }",
              "                        }",
              "                    }",
              "                }",
              "                else if(tdwd2 && Rnd(1,4) == 4) ItemImprovement(tdwd2,3);",
              "",
              "                coun = 0;",
              "                for(j=0;ShipSlots(cur_ruin,1)>j;j=j+1) {",
              "                    item = ShipEqInSlot(cur_ruin,j);",
              "                    if(ItemType(item) != t_CustomWeapon) continue;",
              "                    if(CustomWeaponType(item) != 'bso') continue;",
              "",
              "                    coun = coun + 1;",
              "                }",
              "",
              "                if(coun < 3 && Rnd(1,5) == 5) g_UpdateForBSO(cur_ruin);",
              "            }",
              "        }",
              "",
              "        CD = 30;",
              "    }",
              "    else CD = CD - 1;",
              "}",
              "",
              "if(GalaxyTechLevel() == 8) {",
              "    if(!init_flag) {",
              "        for(i=0;GalaxyStars()>i;i=i+1) {",
              "            star = GalaxyStar(i);",
              "            for(j-0;StarShips(star)>j;j=j+1) {",
              "                tdwd2 = StarShips(star,j);",
              "                if(ShipOwner(tdwd2) == PirateClan) continue;",
              "                if(ShipOwner(tdwd2) == Kling) continue;",
              "                if(ItemSize(ShipEqInSlot(tdwd2,t_Hull)) < 1800) continue;",
              "                if(ShipTypeN(tdwd2) < 6 && ShipSubType(tdwd2) != 1 && ShipTypeN(tdwd2) != 4) continue;",
              "                if((ShipSubType(tdwd2) == 1 && ShipTypeN(tdwd2) == 4) || ShipType(tdwd2) == 'Dreadnought') {",
              "                    if(GetShipPlanet(tdwd2)) {",
              "                        g_UpdateForBSO(tdwd2);",
              "                        continue;",
              "                    }",
              "                    else {",
              "                        ShipAddCustomShipInfo(tdwd2,'CatGuns_Update','NoShow');",
              "                        continue;",
              "                    }",
              "                }",
              "                g_UpdateForBSO(tdwd2);",
              "            }",
              "        }",
              "",
              "        init_flag = 1;",
              "    }",
              "    else {",
              "        if(GalaxyShipId()>lastShipId) {",
              "            tdwd2=BuildListOfNewShips(tempArr,lastShipId,0,1+2+4+8+16,1,'');",
              "            int coun;",
              "            if(tdwd2) {    //Если найден хотя бы один корабль",
              "                for(i=0;i<ArrayDim(tempArr);i=i+1) {",
              "                    tdwd2=0;    //Обнуляем флаг",
              "                    tShip=tempArr[i];    //Выбираем корабль",
              "                    if(IsPlayer(tShip)) continue;",
              "                    if(ShipType(tShip) == 'PB') continue;",
              "                    if(ShipType(tShip) == 'CB') continue;",
              "                    if(ShipOwner(tShip) == PirateClan) continue;",
              "                    if(ShipOwner(tShip) == Kling) continue;",
              "                    tStr=ShipType(tShip);",
              "                    if((tStr == 'Warrior' && ShipSubType(tShip) == 1) || tStr == 'Dreadnought' || ShipTypeN(tShip) > t_Tranclucator) g_UpdateForBSO(tShip);",
              "                }",
              "            }",
              "            lastShipId=GalaxyShipId();    //Обновляем Id последнего рожденного корабля",
              "        }",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  30,
          "Pos.y":  -90,
          "Parent":  -1,
          "#":  9,
          "Code.Type":  "Init",
          "Code":          
          [
              "InventCatGuns();",
              "gunUpdateCheck=CT('Items.Weapon.CustomWeapon.StatsVersion.Cat_Guns');",
              "",
              "//Функция для объявления и обновления кастомных орудий",
              "function InventCatGuns()",
              "{",
              "    for(i=1;i<=CT('Items.Weapon.CustomWeapon.Guns.Count');i=i+1)",
              "    {",
              "        //По очереди выбираем системное название каждой новой пушки из Lang",
              "        if(i==1) tstr='bso';",
              "        if(i==2) tstr='palach';",
              "        if(i==3) tstr='tornado';",
              "        if(i==4) tstr='plazma';",
              "        tstr2='Items.Weapon.CustomWeapon.';",
              "        //Прописываем пушку/сбрасываем уже прописанную пушку до уровня базовой из оригинальной игры",
              "        temp_dword=InventNewCustomWeapon(tstr,t_Weapon1-1+CT('Items.Weapon.OriginalWeaponType.'+CT(tstr2+tstr+'.BaseGun')));",
              "        //Задаём характеристики оружия",
              "        SetCustomWeaponShotData(temp_dword,CT(tstr2+tstr+'.ShotType'),CT(tstr2+tstr+'.Speed'),CT(tstr2+tstr+'.AverageRadius'),CT(tstr2+tstr+'.SecondaryDamageRadius'),CT(tstr2+tstr+'.MiningFactor'),CT(tstr2+tstr+'.ShotsPerTurn'));",
              "        SetCustomWeaponDamageData(temp_dword,CT(tstr2+tstr+'.MinDamage'),CT(tstr2+tstr+'.MaxDamage'),CT(tstr2+tstr+'.DamageSet'),CT(tstr2+tstr+'.mWeaponDamage'));",
              "        SetCustomMissileWeaponStats(temp_dword,CT(tstr2+tstr+'.MissileRadius'),CT(tstr2+tstr+'.MissileMaxSpeed'),CT(tstr2+tstr+'.MissileMinSpeed'),CT(tstr2+tstr+'.MissileChanceToBeHit'));",
              "        SetCustomWeaponPrimaryData(temp_dword,CT(tstr2+tstr+'.TechLevel'),t_Weapon1-1+CT('Items.Weapon.OriginalWeaponType.'+CT(tstr2+tstr+'.InventTechLevel')),t_Weapon1-1+CT('Items.Weapon.OriginalWeaponType.'+CT(tstr2+tstr+'.ArcadeType')));",
              "        SetCustomWeaponSizeAndCost(temp_dword,CT(tstr2+tstr+'.kCost'),CT(tstr2+tstr+'.AverageSize'));",
              "        SetCustomWeaponAvailability(temp_dword,CT(tstr2+tstr+'.StoreAvailability'));",
              "        SetCustomWeaponSE(temp_dword,CT(tstr2+tstr+'.ShotEffectPath'),CT(tstr2+tstr+'.SplashEffectPath'),CT(tstr2+tstr+'.MissileExplosionEffectPath'),CT(tstr2+tstr+'.ShotEffectPalette'));",
              "    }",
              "}",
              "",
              "function SpawnBSO(dword cur_ruin) {",
              "    dword tdwd;",
              "    int rand;",
              "",
              "",
              "    //Выбираем расу БСОшки",
              "    rand = Rnd(1,100);",
              "",
              "    if(rand < 41) tdwd = CreateCustomWeapon('bso',Rnd(1500,2500),GalaxyTechLevel(),0);",
              "    else if(rand < 66) tdwd = CreateCustomWeapon('bso',Rnd(1250,2250),GalaxyTechLevel(),1);",
              "    else if(rand < 86) tdwd = CreateCustomWeapon('bso',Rnd(1000,2000),GalaxyTechLevel(),2);",
              "    else if(rand < 96) tdwd = CreateCustomWeapon('bso',Rnd(750,1750),GalaxyTechLevel(),3);",
              "    else tdwd = CreateCustomWeapon('bso',Rnd(500,1500),GalaxyTechLevel(),4);",
              "",
              "    LinkItemToScript(tdwd,InitItem);",
              "    ItemOnActCode(tdwd,GenerateCodeStringFromBlock('ActCodeBlocksList.CatGunsBsoActCode'));",
              "    //ReleaseItemFromScript(tdwd);",
              "",
              "    AddItemToShop(cur_ruin,tdwd);",
              "",
              "    result = tdwd;",
              "}",
              "",
              "function EquipBSO(dword cur_ruin, int race) {",
              "    dword tdwd;",
              "",
              "    if(!race) tdwd = CreateCustomWeapon('bso',Rnd(1500,2500),GalaxyTechLevel(),0);",
              "    if(race == 1) tdwd = CreateCustomWeapon('bso',Rnd(1250,2250),GalaxyTechLevel(),1);",
              "    if(race == 2) tdwd = CreateCustomWeapon('bso',Rnd(1000,2000),GalaxyTechLevel(),2);",
              "    if(race == 3) tdwd = CreateCustomWeapon('bso',Rnd(750,1750),GalaxyTechLevel(),3);",
              "    if(race == 4) tdwd = CreateCustomWeapon('bso',Rnd(500,1500),GalaxyTechLevel(),4);",
              "",
              "    LinkItemToScript(tdwd,InitItem);",
              "    ItemOnActCode(tdwd,GenerateCodeStringFromBlock('ActCodeBlocksList.CatGunsBsoActCode'));",
              "    //ReleaseItemFromScript(tdwd);",
              "",
              "    AddItemToShip(cur_ruin,tdwd);",
              "    ArrangeItems(cur_ruin);",
              "    if(!ItemIsInUse(tdwd)) ItemIsInUse(tdwd,cur_ruin,1);",
              "    //SFT(Name(tdwd)+' is installed on '+Name(cur_ruin)+', I believe. But there is '+ItemIsInUse(tdwd));",
              "",
              "    ShipAddCustomShipInfo(cur_ruin,'CatGuns_HaveBSO','NoShow');",
              "}",
              "",
              "function g_UpdateForBSO(dword ship) {",
              "",
              "    int i;",
              "    int j;",
              "    int power;",
              "",
              "    dword item;",
              "",
              "    //SFT('Beginning of block');",
              "",
              "    unknown dub = newarray(1);",
              "    unknown dub2 = newarray(1);",
              "    ArrayClear(dub);",
              "    ArrayClear(dub2);",
              "",
              "    //if(ShipFindCustomShipInfoByType(ship,'CatGuns_HaveBSO')) exit;",
              "",
              "    for(i=0;5>i;i=i+1) {",
              "        power = 0;",
              "        if(ShipEqInSlot(ship,t_Weapon1,i)) {",
              "            item = ShipEqInSlot(ship,t_Weapon1,i);",
              "            if(!item) continue;",
              "            if(ItemType(item) == t_CustomWeapon) {",
              "                if(CustomWeaponType(item) == 'bso') continue;",
              "            }",
              "            ArrayAdd(dub,item);",
              "            power = GetEquipmentStats(item,0);",
              "            power = power + (power * GetEquipmentStats(item,2) / 200);",
              "            power = power * GetEquipmentStats(item,4) * GetEquipmentStats(item,5);",
              "            if(GetEquipmentStats(item,3) == 2) {",
              "                if(WeaponMaxAmmunition(item) > 100) power = power * 115 / 100;",
              "            }",
              "            if(GetEquipmentStats(item,6) & 32) power = power * 4;",
              "            if(GetEquipmentStats(item,6) & 2048) power = power * 3;",
              "            if(GetEquipmentStats(item,6) & 1048576) power = power * 2;",
              "            if(GetEquipmentStats(item,6) & 8192) power = power * 120 / 100;",
              "",
              "            //SFT(GetEquipmentStats(item,5)+'количество залпов в выстреловах этой пущки. CatGuns, чтобы не умножать на 0');",
              "            //SFT(Name(item)+' was added to array. Target is '+Name(ship));",
              "            ArrayAdd(dub2,power);",
              "        }",
              "    }",
              "",
              "    ArraySort(dub2,dub);",
              "    //SFT('Beginning of array');",
              "    j = ArrayDim(dub2) - 1;",
              "    for(i=j;i>=0;i=i-1) {",
              "        if(Name(dub[i]) == 'NameError') {",
              "            ArrayDelete(dub,0);",
              "            ArrayDelete(dub2,0);",
              "        }",
              "        //SFT(Name(dub[i]));",
              "    }",
              "",
              "    //SFT('Checking '+Name(ship));",
              "    //SFT('Removing '+Name(dub[0])+' from '+Name(ship));",
              "    FreeItem(GetItemFromShip(ship,dub[0]));",
              "    EquipBSO(ship,ShipPilotRace(ship));",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -10,
          "Pos.y":  -130,
          "Parent":  -1,
          "#":  29,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Автоматическое обновление характеристик кастомных орудий",
              "//Срабатывает, только если параметр StatsVersion для Cat_Guns был изменён",
              "if(gunUpdateCheck!=CT('Items.Weapon.CustomWeapon.StatsVersion.Cat_Guns'))",
              "{",
              "    InventCatGuns();",
              "    gunUpdateCheck=CT('Items.Weapon.CustomWeapon.StatsVersion.Cat_Guns');",
              "}"          
          ]        
        }      
      ],
      "Planets":      
      [
        {
          "Type":  "TPlanet",
          "Name":  "PlanetNew",
          "Pos.x":  -100,
          "Pos.y":  -30,
          "Parent":  -1,
          "#":  1,
          "Race":  62,
          "Owner":  62,
          "Economy":  14,
          "Goverment":  62,
          "RangeMin":  0,
          "RangeMax":  100,
          "Dialog":  -1        
        }      
      ],
      "Ships":      
      [
        {
          "Type":  "TStarShip",
          "Name":  "",
          "Pos.x":  -100,
          "Pos.y":  -90,
          "Parent":  -1,
          "#":  2,
          "Count":  1,
          "Owner":  62,
          "Ship.Type":  126,
          "Player":  true,
          "SpeedMin":  0,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Stars":      
      [
        {
          "Type":  "TStar",
          "Name":  "StarNew",
          "Pos.x":  -100,
          "Pos.y":  -60,
          "Parent":  -1,
          "#":  0,
          "Constellation":  0,
          "Priority":  0,
          "NoKling":  false,
          "NoComeKling":  false        
        }      
      ],
      "Statements":      
      [
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  30,
          "Pos.y":  -130,
          "Parent":  -1,
          "#":  28,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!ShipIsTakeoff(Player())"          
          ]        
        }      
      ],
      "States":      
      [
        {
          "Type":  "TState",
          "Name":  "StateNew",
          "Pos.x":  -100,
          "Pos.y":  30,
          "Parent":  -1,
          "#":  3,
          "Move":  0,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        }      
      ],
      "Variables":      
      [
        {
          "Type":  "TVar",
          "Name":  "tarr",
          "Pos.x":  -90,
          "Pos.y":  -240,
          "Parent":  -1,
          "#":  11,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "CD",
          "Pos.x":  -90,
          "Pos.y":  -270,
          "Parent":  -1,
          "#":  12,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "i",
          "Pos.x":  -20,
          "Pos.y":  -270,
          "Parent":  -1,
          "#":  13,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "j",
          "Pos.x":  -20,
          "Pos.y":  -240,
          "Parent":  -1,
          "#":  14,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "star",
          "Pos.x":  -90,
          "Pos.y":  -300,
          "Parent":  -1,
          "#":  15,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_ruin",
          "Pos.x":  -90,
          "Pos.y":  -330,
          "Parent":  -1,
          "#":  16,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "item",
          "Pos.x":  30,
          "Pos.y":  -300,
          "Parent":  -1,
          "#":  17,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "coun",
          "Pos.x":  30,
          "Pos.y":  -240,
          "Parent":  -1,
          "#":  18,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tdwd2",
          "Pos.x":  30,
          "Pos.y":  -270,
          "Parent":  -1,
          "#":  19,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "init_flag",
          "Pos.x":  30,
          "Pos.y":  -330,
          "Parent":  -1,
          "#":  20,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tShip",
          "Pos.x":  -90,
          "Pos.y":  -360,
          "Parent":  -1,
          "#":  21,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tempArr",
          "Pos.x":  30,
          "Pos.y":  -360,
          "Parent":  -1,
          "#":  22,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tStr",
          "Pos.x":  -90,
          "Pos.y":  -390,
          "Parent":  -1,
          "#":  23,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "lastShipId",
          "Pos.x":  30,
          "Pos.y":  -390,
          "Parent":  -1,
          "#":  24,
          "Var.Type":  "Dword",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "gunUpdateCheck",
          "Pos.x":  120,
          "Pos.y":  -240,
          "Parent":  -1,
          "#":  25,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tstr2",
          "Pos.x":  120,
          "Pos.y":  -300,
          "Parent":  -1,
          "#":  26,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tstr",
          "Pos.x":  120,
          "Pos.y":  -330,
          "Parent":  -1,
          "#":  27,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "temp_dword",
          "Pos.x":  120,
          "Pos.y":  -270,
          "Parent":  -1,
          "#":  30,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        }      
      ]    
    }  
  ],
  "Visual.Links":  
  [
    {
      "Type":  "TGraphLink",
      "Begin":  2,
      "End":  0,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  1,
      "End":  0,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  4,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  4,
      "End":  3,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  28,
      "End":  29,
      "Nom":  0,
      "Arrow":  true    
    }  
  ],
  "BlockPar.EC.Total.Strings":  0,
  "BlockPar.EC":  
  [
  
  ]
}